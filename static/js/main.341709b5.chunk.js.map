{"version":3,"sources":["sketches/sun.js","sketches/landscape.js","sketches/microPlastics.js","sketches/macroPlastics.js","sketches/methaneBubbles.js","sketches/smogClouds.js","sketches/sketch.js","sketches/skyColor.js","OWVisualization.js","App.js","serviceWorker.js","index.js"],"names":["currentY_value","drawSun","p","temperatureData","current_date","currentDate","getFullYear","index","length","i","Math","round","average","count","parseFloat","station","calcSun","fill","ellipse","width","height","createSun","noiseY","cloud_ellipses","x","y","rx","ry","clouds","drawLandscape","move","display","drawClouds","createWave","offsetY","rgb","noFill","stroke","r","g","b","strokeWeight","beginShape","curveVertex","noise","frameCount","endShape","LINES","drawWaves","noStroke","Cloud","key","this","CLOSE","drops","Drop","START_HEIGHT","random","speed","gravity","macro_plastic","Plastic","ending_height","color","size","bubbles","Bubble","xstart","yspeed","degree","cos","radians","setSpeed","new_speed","smogClouds","SmogCloud","xVelocity","smogBubbles","opacity","SmogBubble","cloudColor","setAlpha","xOffset","yOffset","abs","yVelocity","rxVelocity","ryVelocity","xlimit","ylimit","sketch","microGrowth2050","macroGrowth2050","methaneData","setup","frameRate","createCanvas","windowWidth","windowHeight","setupLandscape","setupSmogClouds","setupMethaneBubbles","setupMicroPlasticDrops","setupMacroPlastics","draw","carbonData","currentYear","yearIdex","rIndex","gIndex","bIndex","background","drawSky","drawSmogClouds","yyyy","Intl","DateTimeFormat","year","format","mm","month","date","AVG_START","arr","DATE_START","map","get","AVG_CURRENT","AVG_RATIO","NEW_SIZE","parseInt","j","diff","splice","substring","padStart","Date","drawMethaneBubbles","update","show","newSize","drawMicroPlasticDots","drawMacroPlastics","myCustomRedrawAccordingToNewPropsHandler","newProps","Child1","props","methaneMap","Map","forEach","e","set","console","error","prevProps","prevState","snapshot","React","Component","App","createSlider","bind","state","carbonJSON","co2","methaneJSON","methane","nitrousData","nitrousJSON","nitrous","temperatureJSON","result","dataIsLoaded","id","className","OWVisualization","d3","a","promises","urls","split","url","push","axios","Promise","all","data","setState","fetchData","element","self","formatDateIntoYear","formatDate","startDate","endDate","margin","window","innerWidth","timer","currentValue","targetValue","gRange","append","classed","attr","html","d","playButton","on","button","text","clearInterval","setInterval","invert","domain","range","clamp","select","parentNode","appendChild","cloneNode","call","interrupt","event","handle","insert","label","h","document","addEventListener","selectAll","ticks","enter","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"qQAEIA,EAAiB,EAEd,SAASC,EAAQC,EAAGC,EAAiBC,IAO5C,SAAiBD,EAAiBC,GAC9B,GAAuB,MAAnBD,EAAyB,CAGzB,IAAIE,EAAcD,EAAaE,cACX,OAAhBD,IACAA,EAAc,MAMlB,IAJA,IAAIE,GAAUF,EAAc,MAAQF,EAAgBK,OAAU,IAAM,IAEhEC,EAAIC,KAAKC,MAAMJ,GACfK,EAAU,EACLC,EAAQ,EAAGA,EAAQ,IAAKA,IAC7BD,GAAoBE,WAAWX,EAAgBM,EAAII,GAAOE,SAI9Df,EAAiBY,EAAU,GAAK,GAvBpCI,CAAQb,EAAiBC,GAsC7B,SAAmBF,EAAGC,GACK,MAAnBA,IAEAD,EAAEe,KAAK,IAAK,IAAK,IAEjBf,EAAEgB,QACEhB,EAAEiB,MAAQ,EACVjB,EAAEkB,OAAS,EAGM,IAAjBpB,EACiB,IAAjBA,IA9CRqB,CAAUnB,EAAGC,GCRjB,IA2DImB,EAxDEC,EAAiB,CACnB,CAAEC,EAAG,EAAGC,EAAG,GAAIC,GAAI,GAAIC,GAAI,IAC3B,CAAEH,EAAG,GAAIC,GAAI,EAAGC,GAAI,GAAIC,GAAI,IAC5B,CAAEH,EAAG,GAAIC,EAAG,EAAGC,GAAI,GAAIC,GAAI,IAC3B,CAAEH,EAAG,IAAKC,EAAG,EAAGC,GAAI,GAAIC,GAAI,IAC5B,CAAEH,EAAG,IAAKC,GAAI,EAAGC,GAAI,GAAIC,GAAI,IAC7B,CAAEH,EAAG,IAAKC,GAAI,EAAGC,GAAI,GAAIC,GAAI,IAC7B,CAAEH,EAAG,IAAKC,EAAG,EAAGC,GAAI,GAAIC,GAAI,IAC5B,CAAEH,EAAG,IAAKC,EAAG,EAAGC,GAAI,GAAIC,GAAI,IAC5B,CAAEH,EAAG,IAAKC,EAAG,EAAGC,GAAI,GAAIC,GAAI,IAC5B,CAAEH,EAAG,IAAKC,EAAG,EAAGC,GAAI,GAAIC,GAAI,IAC5B,CAAEH,EAAG,IAAKC,GAAI,EAAGC,GAAI,GAAIC,GAAI,IAC7B,CAAEH,EAAG,IAAKC,EAAG,EAAGC,GAAI,GAAIC,GAAI,IAC5B,CAAEH,EAAG,IAAKC,EAAG,EAAGC,GAAI,GAAIC,GAAI,IAC5B,CAAEH,EAAG,IAAKC,EAAG,EAAGC,GAAI,GAAIC,GAAI,IAC5B,CAAEH,EAAG,IAAKC,EAAG,EAAGC,GAAI,GAAIC,GAAI,IAC5B,CAAEH,EAAG,IAAKC,EAAG,EAAGC,GAAI,GAAIC,GAAI,IAC5B,CAAEH,EAAG,IAAKC,EAAG,GAAIC,GAAI,GAAIC,GAAI,IAC7B,CAAEH,EAAG,IAAKC,EAAG,EAAGC,GAAI,GAAIC,GAAI,IAC5B,CAAEH,EAAG,IAAKC,EAAG,EAAGC,GAAI,GAAIC,GAAI,IAC5B,CAAEH,EAAG,IAAKC,EAAG,EAAGC,GAAI,GAAIC,GAAI,IAC5B,CAAEH,EAAG,IAAKC,EAAG,EAAGC,GAAI,GAAIC,GAAI,IAC5B,CAAEH,EAAG,IAAKC,EAAG,EAAGC,GAAI,GAAIC,GAAI,IAC5B,CAAEH,EAAG,IAAKC,GAAI,EAAGC,GAAI,GAAIC,GAAI,IAC7B,CAAEH,EAAG,IAAKC,EAAG,EAAGC,GAAI,GAAIC,GAAI,IAC5B,CAAEH,EAAG,IAAKC,GAAI,EAAGC,GAAI,GAAIC,GAAI,IAC7B,CAAEH,EAAG,IAAKC,GAAI,EAAGC,GAAI,GAAIC,GAAI,IAC7B,CAAEH,EAAG,IAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC9B,CAAEH,EAAG,IAAKC,EAAG,EAAGC,GAAI,GAAIC,GAAI,IAC5B,CAAEH,EAAG,IAAKC,EAAG,GAAIC,GAAI,GAAIC,GAAI,IAC7B,CAAEH,EAAG,IAAKC,EAAG,GAAIC,GAAI,GAAIC,GAAI,IAC7B,CAAEH,EAAG,IAAKC,EAAG,GAAIC,GAAI,GAAIC,GAAI,IAC7B,CAAEH,EAAG,IAAKC,EAAG,GAAIC,GAAI,GAAIC,GAAI,IAC7B,CAAEH,EAAG,IAAKC,EAAG,GAAIC,GAAI,GAAIC,GAAI,IAC7B,CAAEH,EAAG,IAAKC,EAAG,GAAIC,GAAI,GAAIC,GAAI,IAC7B,CAAEH,EAAG,IAAKC,EAAG,GAAIC,GAAI,GAAIC,GAAI,IAC7B,CAAEH,EAAG,IAAKC,EAAG,GAAIC,GAAI,GAAIC,GAAI,IAC7B,CAAEH,EAAG,IAAKC,EAAG,GAAIC,GAAI,GAAIC,GAAI,IAC7B,CAAEH,EAAG,IAAKC,EAAG,GAA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","file":"static/js/main.341709b5.chunk.js","sourcesContent":["//var yvalues;\r\n//var size_index = 0;\r\nvar currentY_value = 0;\r\n\r\nexport function drawSun(p, temperatureData, current_date) {\r\n    calcSun(temperatureData, current_date);\r\n    //changeY(current_date);\r\n    //console.log(temperatureData);\r\n    createSun(p, temperatureData);\r\n}\r\n\r\nfunction calcSun(temperatureData, current_date) {\r\n    if (temperatureData != null) {\r\n        //get current date based on scroller\r\n        //get year\r\n        var currentDate = current_date.getFullYear();\r\n        if (currentDate === 2020) {\r\n            currentDate = 2015;\r\n        }\r\n        var index = ((currentDate - 1880) * temperatureData.length) / 140 - 100;\r\n\r\n        var i = Math.round(index);\r\n        var average = 0;\r\n        for (var count = 0; count < 100; count++) {\r\n            average = average + parseFloat(temperatureData[i + count].station);\r\n        }\r\n        //console.log(i);\r\n        // console.log(average);\r\n        currentY_value = average / 50 + 2;\r\n        //yvalues[i] = average + 1;\r\n        /*for (let i = 0; i < temperatureData.length / 8; i++) {\r\n            var average = parseFloat(temperatureData[i * 8].station); // + parseFloat(temperatureData[i * 8].land)) / 2);\r\n            yvalues[i] = average + 1;\r\n        }*/\r\n    }\r\n}\r\n\r\n/*function changeY ()  {\r\n    if (size_index === yvalues.length) size_index = 0;\r\n\r\n    size_index += 1;\r\n};*/\r\n\r\nfunction createSun(p, temperatureData) {\r\n    if (temperatureData != null) {\r\n        //console.log(currentY_value);\r\n        p.fill(232, 152, 98);\r\n\r\n        p.ellipse(\r\n            p.width / 2,\r\n            p.height / 2,\r\n            //yvalues[size_index] * 50,\r\n            //yvalues[size_index] * 50\r\n            currentY_value * 100,\r\n            currentY_value * 100\r\n        );\r\n    }\r\n}\r\n","const noiseSpeed = 0.01;\r\nconst noiseHeight = 20;\r\nconst num_clouds = 3;\r\nconst cloud_ellipses = [\r\n    { x: 0, y: 20, rx: 70, ry: 40 },\r\n    { x: 25, y: -3, rx: 50, ry: 28 },\r\n    { x: 70, y: 3, rx: 50, ry: 28 },\r\n    { x: 100, y: 5, rx: 24, ry: 24 },\r\n    { x: 115, y: -2, rx: 24, ry: 24 },\r\n    { x: 130, y: -2, rx: 24, ry: 24 },\r\n    { x: 145, y: 0, rx: 24, ry: 24 },\r\n    { x: 160, y: 5, rx: 24, ry: 24 },\r\n    { x: 173, y: 5, rx: 24, ry: 24 },\r\n    { x: 185, y: 5, rx: 24, ry: 24 },\r\n    { x: 198, y: -3, rx: 24, ry: 24 },\r\n    { x: 215, y: 3, rx: 28, ry: 24 },\r\n    { x: 230, y: 4, rx: 30, ry: 24 },\r\n    { x: 245, y: 6, rx: 30, ry: 24 },\r\n    { x: 260, y: 6, rx: 30, ry: 24 },\r\n    { x: 270, y: 3, rx: 26, ry: 24 },\r\n    { x: 285, y: 10, rx: 30, ry: 24 },\r\n    { x: 310, y: 4, rx: 30, ry: 24 },\r\n    { x: 325, y: 4, rx: 16, ry: 16 },\r\n    { x: 339, y: 2, rx: 24, ry: 24 },\r\n    { x: 365, y: 5, rx: 44, ry: 28 },\r\n    { x: 400, y: 0, rx: 40, ry: 24 },\r\n    { x: 435, y: -5, rx: 50, ry: 30 },\r\n    { x: 465, y: 5, rx: 24, ry: 24 },\r\n    { x: 490, y: -3, rx: 38, ry: 30 },\r\n    { x: 524, y: -3, rx: 40, ry: 24 },\r\n    { x: 550, y: -10, rx: 60, ry: 50 },\r\n    { x: 595, y: 3, rx: 58, ry: 40 },\r\n    { x: 627, y: 12, rx: 24, ry: 24 },\r\n    { x: 643, y: 20, rx: 40, ry: 24 },\r\n    { x: 665, y: 19, rx: 30, ry: 24 },\r\n    { x: 695, y: 20, rx: 50, ry: 24 },\r\n    { x: 715, y: 25, rx: 45, ry: 30 },\r\n    { x: 740, y: 25, rx: 45, ry: 30 },\r\n    { x: 754, y: 17, rx: 27, ry: 24 },\r\n    { x: 766, y: 17, rx: 20, ry: 20 },\r\n    { x: 780, y: 17, rx: 25, ry: 20 },\r\n    { x: 800, y: 10, rx: 30, ry: 20 },\r\n    { x: 820, y: 10, rx: 40, ry: 40 },\r\n    { x: 860, y: 10, rx: 80, ry: 60 },\r\n    { x: 890, y: -5, rx: 24, ry: 24 },\r\n    { x: 910, y: -10, rx: 40, ry: 40 },\r\n    { x: 950, y: -18, rx: 69, ry: 50 },\r\n    { x: 990, y: -18, rx: 40, ry: 30 },\r\n    { x: 1010, y: 0, rx: 40, ry: 30 },\r\n    { x: 1030, y: 10, rx: 24, ry: 24 },\r\n    { x: 1050, y: 8, rx: 24, ry: 24 },\r\n    { x: 1065, y: 10, rx: 24, ry: 24 },\r\n    { x: 1090, y: 15, rx: 50, ry: 24 },\r\n    { x: 1115, y: 20, rx: 24, ry: 24 },\r\n    { x: 1135, y: 25, rx: 40, ry: 24 },\r\n    { x: 1155, y: 25, rx: 40, ry: 24 },\r\n    { x: 1180, y: 20, rx: 38, ry: 25 },\r\n    { x: 1200, y: 100, rx: 70, ry: 40 },\r\n];\r\nlet noiseY;\r\nlet clouds = [];\r\n\r\nexport function setupLandscape(p) {\r\n    for (let i = 0; i < 3; i++) { // initialize the clouds\r\n        clouds[i] = new Cloud(p, num_clouds - i);\r\n    }\r\n\r\n    noiseY = (p.height * 3) / 4; // y-noise for waves\r\n};\r\n\r\n\r\nexport function drawLandscape(p) { // this loops everything inside body\r\n    drawClouds();\r\n    drawWaves(p);\r\n    p.noStroke();\r\n}\r\n\r\nfunction drawClouds() { // create the clouds and call their moethods\r\n    for (var i = 0; i < num_clouds; i++) {\r\n        clouds[i].move();\r\n        clouds[i].display();\r\n    }\r\n}\r\n\r\nfunction drawWaves(p) { // create the waves\r\n    createWave(0, { r: 194, g: 247, b: 254 });\r\n    createWave(65, { r: 84, g: 182, b: 282 });\r\n    createWave(80, { r: 112, g: 219, b: 245 });\r\n\r\n    function createWave(offsetY, rgb) {\r\n        p.noFill();\r\n        p.stroke(rgb.r, rgb.g, rgb.b); // draw wave\r\n        p.strokeWeight(p.height / 2);\r\n        p.beginShape(); // create shape for area under waves\r\n        p.curveVertex(0, p.height / 2);\r\n        for (let i = 0; i < p.width; i += 50) {\r\n            let y =\r\n                p.noise(p.frameCount * noiseSpeed + i) * noiseHeight +\r\n                noiseY +\r\n                offsetY; // redraw y-coordinates for waves\r\n            p.curveVertex(i, y);\r\n        }\r\n        p.curveVertex(p.width, p.height / 2);\r\n        p.endShape(p.LINES); // end shape for area under waves\r\n    }\r\n}\r\n\r\nclass Cloud { // class for cloud objects\r\n    constructor(p, key) {\r\n        this.x = (p.width - 1200 * key); // initial x position\r\n        this.y = p.height / 2 - 15; // initial y position\r\n    \r\n        this.display = function () {\r\n            p.stroke(255); // white stroke\r\n            p.strokeWeight(1);\r\n            p.fill(255);\r\n            p.beginShape(); // create shape for area under ellipses\r\n            for (let i = 0; i < cloud_ellipses.length; i++) {\r\n                p.ellipse( // create ellipses that form clouds\r\n                    this.x + cloud_ellipses[i].x,\r\n                    this.y + cloud_ellipses[i].y,\r\n                    cloud_ellipses[i].rx,\r\n                    cloud_ellipses[i].ry\r\n                );\r\n                p.curveVertex( // create vertices to paint area under cloud white\r\n                    this.x + cloud_ellipses[i].x,\r\n                    this.y + cloud_ellipses[i].y\r\n                );\r\n            }\r\n            p.curveVertex(p.width, p.height);\r\n            p.endShape(p.CLOSE); // end shape for area under ellipses\r\n        };\r\n    \r\n        this.move = function () {\r\n            this.x += 0.2; // cloud movement speed\r\n    \r\n            if (this.x >= p.width) {\r\n                this.x = p.width - 1200 * num_clouds; // reset cloud to this position\r\n            }\r\n        };\r\n    }\r\n}\r\n","//these are gonna be the variables for our garbage collection\r\nvar drops = [];\r\nvar micro_Size = 5;\r\n\r\nclass Drop {\r\n    constructor(p) {\r\n        this.START_HEIGHT = p.height * 0.56;\r\n        this.x = p.random(0, p.width);\r\n        this.y = p.random(this.START_HEIGHT, p.height);\r\n    }\r\n\r\n    show(p) {\r\n        p.noStroke();\r\n        p.fill(255);\r\n        p.ellipse(\r\n            this.x,\r\n            this.y,\r\n            p.random(5, micro_Size),\r\n            p.random(5, micro_Size)\r\n        );\r\n    }\r\n\r\n    update(p) {\r\n        this.speed = this.speed = p.random(2, 4);\r\n        this.gravity = 1.05;\r\n        this.y = this.y + this.speed * this.gravity;\r\n\r\n        if (this.y > p.height) {\r\n            this.y = this.START_HEIGHT;\r\n            this.gravity = 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport function setupMicroPlasticDrops(p) {\r\n    //\r\n    //set up plastic\r\n    //\r\n    for (var i = 0; i < 200; i++) {\r\n        drops[i] = new Drop(p);\r\n    }\r\n}\r\n\r\nexport function drawMicroPlasticDots(p, microGrowth2050, current_date) {\r\n    //calc microplastic\r\n    //\r\n    var currentDate = current_date.getFullYear();\r\n    //p.background(230, 230, 250);\r\n    //console.log(microGrowth2050);\r\n    //console.log(current_date);\r\n\r\n    for (var i = 0; i < drops.length; i++) {\r\n        drops[i].update(p);\r\n        drops[i].show(p);\r\n    }\r\n\r\n    if (microGrowth2050 != null) {\r\n        var newSize = -1 * (microGrowth2050[currentDate - 1950][1] - 367);\r\n        newSize = newSize * 2 + 200;\r\n        //add drops\r\n        if (newSize > drops.length) {\r\n            for (var j = drops.length; j < newSize; j++) {\r\n                drops[j] = new Drop(p);\r\n            }\r\n        }\r\n        //remove drops\r\n        if (newSize < drops.length) {\r\n            var diff = drops.length - newSize;\r\n            drops = drops.splice(diff);\r\n        }\r\n    }\r\n}\r\n","//these are gonna be the variables for our garbage collection\r\nvar macro_plastic = [];\r\n\r\nclass Plastic {\r\n    constructor(p, index) {\r\n        this.START_HEIGHT = p.height * 0.56;\r\n        var ending_height = this.START_HEIGHT - index / 15;\r\n        // var width = this.START_HEIGHT + index / 10;\r\n        this.x = p.random(/*width*/ 0, p.width);\r\n        this.y = p.random(this.START_HEIGHT, ending_height);\r\n        this.color = p.random(0, 255);\r\n        this.size = p.random(12, 20);\r\n    }\r\n\r\n    show(p) {\r\n        p.noStroke();\r\n        p.fill(this.color);\r\n        p.ellipse(this.x, this.y, this.size, this.size);\r\n    }\r\n}\r\n\r\nexport function setupMacroPlastics(p) {\r\n    //\r\n    //set up plastic\r\n    //\r\n    for (var i = 0; i < 200; i++) {\r\n        macro_plastic[i] = new Plastic(p, i);\r\n    }\r\n}\r\n\r\nexport function drawMacroPlastics(p, macroGrowth2050, current_date) {\r\n    //calc microplastic\r\n    //\r\n    var currentDate = current_date.getFullYear();\r\n    // console.log(currentDate);\r\n    //p.background(230, 230, 250);\r\n    //console.log(microGrowth2050);\r\n    // console.log(current_date);\r\n\r\n    for (var i = 0; i < macro_plastic.length; i++) {\r\n        macro_plastic[i].show(p);\r\n    }\r\n\r\n    if (macroGrowth2050 != null) {\r\n        var newSize = -1 * (macroGrowth2050[currentDate - 1950][1] - 367);\r\n        newSize = newSize * 5 + 200;\r\n        // console.log(newSize);\r\n        //add drops\r\n        if (newSize > macro_plastic.length) {\r\n            for (var j = macro_plastic.length; j < newSize; j++) {\r\n                macro_plastic[j] = new Plastic(p, j);\r\n            }\r\n        }\r\n        //remove drops\r\n        if (newSize < macro_plastic.length) {\r\n            var diff = macro_plastic.length - newSize;\r\n            macro_plastic = macro_plastic.splice(0, diff);\r\n        }\r\n    }\r\n}\r\n","const INIT_NUM_BUBBLES = 30; // always starts with 30 bubbles\r\nlet bubbles = []; // holds Bubble objects\r\n\r\n/**\r\n * Class for bubbles that float up from seabed on display\r\n */\r\nclass Bubble {\r\n    /**\r\n     * Constructor for bubbles\r\n     * \r\n     * @param {*} p p5 ptr\r\n     * @param {*} xstart Starting x-position\r\n     * @param {*} yspeed Speed of bubble rising to top\r\n     * @param {*} size Size of bubble\r\n     */\r\n    constructor(p, xstart, yspeed, size) { // class for bubble objects\r\n        this.yspeed = yspeed;\r\n        this.x = xstart; // starting x-position of bubbles\r\n        this.y = p.random(p.height, p.height * 1.5); // starting y-position of bubbles under height\r\n        this.degree = 0;\r\n\r\n        /**\r\n         * Display bubble on sketch\r\n         */\r\n        this.display = function () {\r\n            p.fill(255, 255, 255, 50);\r\n            p.ellipse(this.x, this.y, size);\r\n            p.fill(255, 255, 255, 180);\r\n            p.ellipse(this.x + 0.2 * size, this.y - 0.2 * size, 0.2 * size); // bubble detail\r\n        };\r\n\r\n        /**\r\n         * Behavior for bubble movement\r\n         */\r\n        this.move = function () {\r\n            this.x += p.cos(p.radians(this.degree)); // base x-shifts on cosine waves\r\n            this.y += this.yspeed; // bubble movement speed\r\n            if (this.y < p.height * 0.63) {\r\n                this.y = p.height * 1.2;\r\n            }\r\n            this.degree += p.random(0.0, 1.0);\r\n        };\r\n\r\n        /**\r\n         * Set bubble speed corresponding to data\r\n         * \r\n         * @param {*} new_speed Re-initialize bubble speed\r\n         */\r\n        this.setSpeed = function (new_speed) {\r\n            this.yspeed = new_speed;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Set up methane bubbles on canvas\r\n * \r\n * @param {*} p p5 ptr\r\n */\r\nexport function setupMethaneBubbles(p, methaneData) {\r\n    // initialize at beginning with bubbles from starting date\r\n    // const AVG_START = methaneData.arr[0].average;\r\n    // const AVG_END = methaneData.arr[methaneData.arr.length - 1].average;\r\n    // const AVG_DIFF = AVG_END - AVG_START; // diff btwn curr avg and start avg\r\n    \r\n    for (let i = 0; i < INIT_NUM_BUBBLES; i++) { // initialize the bubbles\r\n        bubbles[i] = new Bubble(p,\r\n            p.random(0, p.width),\r\n            p.random(-1.5, -1),\r\n            p.random(10, 20)\r\n        );\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Draw methane bubbles on sketch\r\n * \r\n * @param {*} p p5 ptr\r\n * @param {*} methaneData Object containing map and arr\r\n * @param {*} currentDate Current date stored in state\r\n */\r\nexport function drawMethaneBubbles(p, methaneData, currentDate) { // create the bubbles and call their methods\r\n    // make more bubbles and modify speed\r\n\r\n    let yyyy = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(currentDate);\r\n    let mm = new Intl.DateTimeFormat('en', { month: '2-digit' }).format(currentDate);\r\n    let dd = \"01\"\r\n    let date = `${yyyy}-${mm}-${dd}`\r\n    const AVG_START = methaneData.arr[0].average;\r\n    const DATE_START = methaneData.arr[0].date;\r\n\r\n    for (let i = 0; i < bubbles.length; i++) {\r\n        bubbles[i].move();\r\n        bubbles[i].display();\r\n    }\r\n\r\n    // update bubble here\r\n    if (methaneData.map.get(date)) {\r\n        const AVG_CURRENT = methaneData.map.get(date);\r\n        const AVG_DIFF = AVG_CURRENT - AVG_START; // diff btwn curr avg and start avg\r\n        const AVG_RATIO = AVG_START / AVG_CURRENT;\r\n        const NEW_SIZE = parseInt(AVG_DIFF + INIT_NUM_BUBBLES);\r\n        // console.log(`Found date for ${date}\\nlength: ${bubbles.length}\\nNEW_SIZE: ${NEW_SIZE}`)\r\n\r\n        if (NEW_SIZE > bubbles.length) {\r\n            for (let j = bubbles.length; j < NEW_SIZE; j++) {\r\n                bubbles[j] = new Bubble(p,\r\n                    p.random(0, p.width),\r\n                    p.random(-2 / AVG_RATIO * 2, -1.5 / AVG_RATIO * 2),\r\n                    p.random(10, 20))\r\n            }\r\n        }\r\n\r\n        if (NEW_SIZE < bubbles.length) {\r\n            let diff = bubbles.length - NEW_SIZE;\r\n            bubbles = bubbles.splice(diff);\r\n        }\r\n    }\r\n    else {\r\n        // console.log(`Could not find date for ${date}`)\r\n        let yyyy = DATE_START.substring(0, 4);\r\n        let mm = DATE_START.substring(5, DATE_START.length).padStart(2, '0');\r\n        let dd = \"01\"\r\n        let date = new Date(`${yyyy}-${mm}-${dd}`);\r\n        // use last known date (make sure to set first date to earliest and vice versa)\r\n        // update bubble here (could be < lower bound or > upper bound)\r\n        if (date >= currentDate) {\r\n            bubbles = bubbles.splice(0, INIT_NUM_BUBBLES);\r\n            for (let i = 0; i < INIT_NUM_BUBBLES; i++) {\r\n                bubbles[i].setSpeed(p.random(-1.5, -1));\r\n            }\r\n        }\r\n    }\r\n    \r\n}\r\n\r\n\r\n","let smogClouds = [];\r\n\r\nclass SmogCloud {\r\n    constructor(p) {\r\n        this.xVelocity = p.random(-2, 2); //cloud movement velocity\r\n        this.x = p.random(50, p.width);\r\n        this.y = p.random(50, 200);\r\n        this.width = p.random(100, 300);\r\n        this.height = p.random(50, 100);\r\n        this.smogBubbles = [];\r\n        this.opacity = p.random(50, 200);\r\n        \r\n        for (let x = 0; x < 25; x++) {\r\n            this.smogBubbles[x] = new SmogBubble(p, this.width, this.height);\r\n        }\r\n\r\n        this.display = function () {\r\n            // console.log(\"Displaying smog cloud\");\r\n            p.noStroke();\r\n            let cloudColor = p.color(100);\r\n            cloudColor.setAlpha(this.opacity);\r\n            p.fill(cloudColor);\r\n            p.ellipse(this.x, this.y, this.width, this.height);\r\n            p.beginShape();\r\n            for (let x = 0; x < this.smogBubbles.length; x++) {\r\n                cloudColor.setAlpha(this.smogBubbles[x].opacity);\r\n                p.fill(cloudColor);\r\n                p.ellipse(\r\n                    this.x + this.smogBubbles[x].xOffset,\r\n                    this.y + this.smogBubbles[x].yOffset,\r\n                    this.smogBubbles[x].rx,\r\n                    this.smogBubbles[x].ry\r\n                );\r\n                p.curveVertex(\r\n                    this.x + this.smogBubbles[x].xOffset,\r\n                    this.y + this.smogBubbles[x].yOffset\r\n                );\r\n            }\r\n\r\n            p.endShape(p.CLOSE);\r\n        };\r\n\r\n        this.move = function () {\r\n            for (let x = 0; x < this.smogBubbles.length; x++) {\r\n                if (Math.abs(this.smogBubbles[x].xOffset) > this.width / 2 - 10) {\r\n                    this.smogBubbles[x].xVelocity *= -1;\r\n                }\r\n                if (Math.abs(this.smogBubbles[x].yOffset) > this.height / 2 - 10) {\r\n                    this.smogBubbles[x].yVelocity *= -1;\r\n                }\r\n                if (this.smogBubbles[x].rx < 70 || this.smogBubbles[x].rx > 150) {\r\n                    this.smogBubbles[x].rxVelocity *= -1;\r\n                }\r\n                if (this.smogBubbles[x].ry < 70 || this.smogBubbles[x].ry > 150) {\r\n                    this.smogBubbles[x].ryVelocity *= -1;\r\n                }\r\n\r\n                this.smogBubbles[x].xOffset += this.smogBubbles[x].xVelocity;\r\n                this.smogBubbles[x].yOffset += this.smogBubbles[x].yVelocity;\r\n\r\n                this.smogBubbles[x].rx += this.smogBubbles[x].rxVelocity;\r\n                this.smogBubbles[x].ry += this.smogBubbles[x].ryVelocity;\r\n            }\r\n\r\n            if (this.x > p.width) {\r\n                this.x = 50;\r\n            } else if (this.x < 0) {\r\n                this.x = p.width - 50;\r\n            }\r\n            this.x += this.xVelocity;\r\n        };\r\n    }\r\n}\r\n\r\nclass SmogBubble {\r\n    constructor(p, xlimit, ylimit) {\r\n        this.opacity = p.random(50, 200);\r\n        this.xVelocity = p.random(0.03, 0.07);\r\n        this.yVelocity = p.random(0.03, 0.07);\r\n        this.xOffset = p.random((xlimit / 2) * -1, xlimit / 2);\r\n        this.yOffset = p.random((ylimit / 2) * -1, ylimit / 2);\r\n        this.rx = p.random(70, 150);\r\n        this.ry = p.random(70, 150);\r\n\r\n        this.rxVelocity = p.random(0.01, 0.01);\r\n        this.ryVelocity = p.random(0.01, 0.02);\r\n    }\r\n}\r\n\r\nexport function setupSmogClouds(p) {\r\n    for (let i = 0; i < 4; i++) {\r\n        smogClouds[i] = new SmogCloud(p);\r\n    }\r\n}\r\n\r\nexport function drawSmogClouds(p) {\r\n    for (var i = 0; i < smogClouds.length; i++) {\r\n        smogClouds[i].move();\r\n        smogClouds[i].display();\r\n    }\r\n}\r\n","import { drawSun } from \"./sun\";\r\nimport { setupLandscape, drawLandscape } from \"./landscape\";\r\nimport { setupMicroPlasticDrops, drawMicroPlasticDots } from \"./microPlastics\";\r\nimport { setupMacroPlastics, drawMacroPlastics } from \"./macroPlastics\";\r\nimport { setupMethaneBubbles, drawMethaneBubbles } from \"./methaneBubbles\";\r\nimport { setupSmogClouds, drawSmogClouds } from \"./smogClouds\";\r\nimport { drawSky } from \"./skyColor\";\r\n\r\nexport default function sketch(p) {\r\n    let temperatureData = null;\r\n    let microGrowth2050 = null; \r\n    let macroGrowth2050 = null;\r\n    let currentDate = null;\r\n    let carbonData = null;\r\n    let methaneData = null;\r\n\r\n    p.setup = () => {\r\n        p.frameRate(30);\r\n        p.createCanvas(p.windowWidth, p.windowHeight); // adjust to window width and height\r\n        setupLandscape(p);\r\n        setupSmogClouds(p);\r\n        setupMethaneBubbles(p, methaneData);\r\n        setupMicroPlasticDrops(p);\r\n        setupMacroPlastics(p);\r\n    };\r\n\r\n    p.draw = () => {\r\n        drawSky(p, carbonData, currentDate);\r\n        drawSun(p, temperatureData, currentDate);\r\n\r\n        drawLandscape(p);\r\n        drawSmogClouds(p);\r\n        drawMethaneBubbles(p, methaneData, currentDate);\r\n        drawMicroPlasticDots(p, microGrowth2050, currentDate);\r\n        drawMacroPlastics(p, macroGrowth2050, currentDate);\r\n    };\r\n\r\n    p.myCustomRedrawAccordingToNewPropsHandler = (newProps) => {\r\n        temperatureData = newProps.temperatureData;\r\n        currentDate = newProps.currentDate;\r\n        microGrowth2050 = newProps.microGrowth2050;\r\n        macroGrowth2050 = newProps.macroGrowth2050;\r\n        carbonData = newProps.carbonData;\r\n        methaneData = newProps.methaneData;\r\n    };\r\n}\r\n","//inital background color (38,238,228)\r\n//final background color (15,26,155)\r\nexport function drawSky(p, carbonData, currentDate) {\r\n    var currentYear = currentDate.getFullYear();\r\n    //underData\r\n    if (currentYear < 2010) {\r\n        var yearIdex = currentYear - 1950;\r\n        //constants for changing color\r\n        var rGap = 0.3;\r\n        var gGap = 3;\r\n        var bGap = 1.9;\r\n        //\r\n        var rIndex = 38 - ((rGap * yearIdex) | 0);\r\n        var gIndex = 238 - ((gGap * yearIdex) | 0);\r\n        var bIndex = 228 - ((bGap * yearIdex) | 0);\r\n\r\n        p.background(rIndex, gIndex, bIndex);\r\n    }\r\n    //over data\r\n    else if (currentYear > 2019) {\r\n        //original color choice\r\n        p.background(231, 181, 137);\r\n    }\r\n    /* warnings\r\n    else {\r\n        //there are 10 year in the carbon data\r\n        //get the index gap of carbon data\r\n        var yearGap = carbonData.length / 10;\r\n        var monthGap = yearGap / 12;\r\n\r\n        var year_index = currentYear - 2010;\r\n        var month_index = currentDate.getMonth();\r\n        var current_index = yearGap * year_index + month_index * monthGap;\r\n        current_index = current_index | 0;\r\n\r\n        // var average = 0;\r\n        console.log(current_index);\r\n        for (var i = 0; i < monthGap - 1; i += 1) {\r\n            console.log(carbonData[current_index].cycle);\r\n            //   average += carbonData[current_index+1];\r\n        }\r\n\r\n        p.background(231, 181, 137);\r\n    }\r\n    */\r\n}\r\n","import React from 'react'\r\nimport './Child1.css'\r\nimport P5Wrapper from 'react-p5-wrapper';\r\nimport sketch from './sketches/sketch';\r\n\r\nclass Child1 extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.methaneMap = new Map();\r\n    }\r\n\r\n    render() {\r\n      //console.log(this.props);\r\n        return (\r\n            <P5Wrapper\r\n                sketch={sketch}\r\n                temperatureData={this.props.temperatureData}\r\n                currentDate={this.props.currentDate}\r\n                microGrowth2050={this.props.microGrowth2050}\r\n                macroGrowth2050={this.props.macroGrowth2050}\r\n                carbonData={this.props.carbonData}\r\n                methaneData={{\"map\": this.methaneMap, \"arr\": this.props.methaneData}}>\r\n            </P5Wrapper>\r\n            //<P5Wrapper sketch={wave}></P5Wrapper>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.methaneData) {\r\n            this.props.methaneData.forEach(e => { // look over methane data\r\n                let yyyy = e.date.substring(0, 4);\r\n                let mm = e.date.substring(5, e.date.length).padStart(2, '0');\r\n                let dd = \"01\"\r\n    \r\n                let date = `${yyyy}-${mm}-${dd}`;\r\n                this.methaneMap.set(date, e.average); // map date to average\r\n            });\r\n        }\r\n        else {\r\n            console.error(`Methane data ${this.props.methaneData}`);\r\n        }\r\n        // console.log(\"Child Mounted\");\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        // console.log(\"Child Updated\");\r\n    }\r\n}\r\n\r\nexport default Child1\r\n","import React from 'react';\r\nimport './App.css';\r\nimport OWVisualization from './OWVisualization' // import both children\r\nimport axios from 'axios'; // used for API stuff\r\n\r\n// below imports are for static files to avoid 429 errors from requests while testing\r\nimport carbonJSON from './static/carbon.json'\r\nimport methaneJSON from './static/methane.json'\r\nimport nitrousJSON from './static/nitrous.json'\r\nimport temperatureJSON from './static/temperature.json'\r\nimport macroGrowth2050 from './static/plastic_pollution/macroGrowth2050.json'\r\nimport microGrowth2050 from './static/plastic_pollution/microGrowth2050.json'\r\n\r\nimport * as d3 from 'd3';\r\n// import {sliderBottom} from 'd3-simple-slider';\r\n// end testing-related import block\r\n\r\nclass App extends React.Component {\r\n    // you can create class-scope fields in here like in Java\r\n    constructor(props) {\r\n        super();\r\n        this.createSlider = this.createSlider.bind(this);\r\n        this.state = { // you can add new states here\r\n            // initialize below states to null if not using static data for testing\r\n            carbonData: carbonJSON.co2,\r\n            methaneData: methaneJSON.methane,\r\n            nitrousData: nitrousJSON.nitrous,\r\n            temperatureData: temperatureJSON.result,\r\n\r\n            //get plastic and repeat for others\r\n            macroGrowth2050: macroGrowth2050.macroGrowth2050,\r\n            microGrowth2050: microGrowth2050.microGrowth2050,\r\n\r\n            currentDate: new Date(\"1950-11-01\"), // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\r\n            dataIsLoaded: false\r\n        };\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div id=\"App\" className=\"App-container\">\r\n                <OWVisualization\r\n                    currentDate={this.state.currentDate}\r\n                    temperatureData={this.state.temperatureData} // need to pass data into children via props\r\n                    microGrowth2050 = {this.state.microGrowth2050}\r\n                    macroGrowth2050={this.state.macroGrowth2050}\r\n                    carbonData={this.state.carbonData}\r\n                    methaneData={this.state.methaneData} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() { // this is called when the page is initially loaded/mounted\r\n        // console.log(\"Parent Mounted\");\r\n        // this.loadData(); // comment this out if using static files; loadData() will make API requests\r\n        this.createSlider(d3.select(\".App-container\"));\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) { // when re-render occurs, componentDidUpdate() is called\r\n        // console.log(\"Parent Updated\");\r\n    }\r\n\r\n    loadData() {\r\n        const fetchData = async () => {\r\n            const proxyurl = \"https://cors-anywhere.herokuapp.com/\"; // proxy url that is used in combination with real url\r\n\r\n            let promises = []; // make an array of promises\r\n            this.props.urls.split(\",\").forEach(function(url) {\r\n                promises.push(axios(proxyurl + url)); // push request onto promise array\r\n            })\r\n\r\n            // order of promises is retained; reference: https://stackoverflow.com/questions/28066429/promise-all-order-of-resolved-values/28066851\r\n            const data = await Promise.all(promises);\r\n\r\n            this.state.carbonData = data[0].data.co2; // directly modifying the state like this does NOT force re-render\r\n            this.state.methaneData = data[1].data.methane;\r\n            this.state.nitrousData = data[2].data.nitrous;\r\n            this.state.temperatureData = data[3].data.result;\r\n\r\n            this.setState({ dataIsLoaded: true }); // calling this.setState(...) forces re-render\r\n        };\r\n        fetchData();\r\n    }\r\n\r\n    createSlider(element) { // parameter is the App-container svg body\r\n        const self = this; // reference constructor\r\n\r\n        let formatDateIntoYear = d3.timeFormat(\"%Y\");\r\n        let formatDate = d3.timeFormat(\"%d %B %Y\"); // DD MM YY https://github.com/d3/d3-time-format\r\n\r\n        let startDate = new Date(\"1950-11-01\"); // subject to change\r\n        let endDate = new Date(); // subject to change (no params = current date)\r\n\r\n        let margin = {top:50, right:50, bottom:0, left:75};\r\n        let width = window.innerWidth; // - margin.left - margin.right;\r\n\r\n        let timer = 0;\r\n        let currentValue = 0;\r\n        let targetValue = width - 50;\r\n\r\n        let sliderRange = element // appends svg on top of .App svg\r\n            .append(\"div\")\r\n            .classed(\"slider-svg\", true) // container class to make iresponsive\r\n            .attr(\"id\", \"App\");\r\n\r\n        let gRange = sliderRange // gRange is the svg body that will be made responsive\r\n            .append(\"svg\") // append the responsive svg container\r\n            .attr(\"preserveAspectRatio\", \"xMinYMin meet\") // responsive svg container needs to preserve aspect ratio for responsiveness\r\n            .attr(\"viewBox\", `0 0 ${window.innerWidth + margin.left * 2} 200`) // set aspect ratio for slider svg body\r\n            // it seems that ADDING margin would actually shrink the slider svg body\r\n            .append(\"g\") // overlay the slider svg body; now gRange reflects the slider body\r\n            .attr(\"transform\", \"translate(\" + margin.left + \", 100)\") // shift slider to right and down\r\n            // .classed(\"class\", \"slider\") // apply slider css properties\r\n\r\n        gRange // we want to add a foreign object embodied in a html element\r\n            .append(\"foreignObject\") // append the foreign object then set coordinates relative to slider svg body\r\n            .attr(\"x\", 60)\r\n            .attr(\"y\", 60)\r\n            .attr(\"width\", 60) // set width and height of the play button\r\n            .attr(\"height\", 30)\r\n            .html(function(d) { // this is the html element we want to append\r\n                return '<button id=\"play-button\">Play</button>'\r\n            })\r\n\r\n        let playButton = d3.select(\"#play-button\"); // get the play button svg\r\n\r\n        playButton\r\n            .on(\"click\", function() { // set the play button's behavior\r\n                let button = d3.select(this); // note that 'this' references the play button svg\r\n                if (button.text() === \"Pause\") { // if paused, clear interval and change text to 'play'\r\n                    clearInterval(timer);\r\n                    button.text(\"Play\");\r\n                } else { // otherwise set behavior for the play button\r\n                    timer = setInterval(function() { // play interval asynchronously\r\n                        update(x.invert(currentValue)); // update handle position and adjust current value tick jumps\r\n                        currentValue = currentValue + (targetValue / 151);\r\n                        if (currentValue > targetValue) { // if at end of range, clear interval and change text to 'play'\r\n                            clearInterval(timer); // this will stop the asynchronous interval\r\n                            playButton.text(\"Play\");\r\n                        }\r\n                        self.setState({ currentDate: x.invert(currentValue) }); // ref parent constructor and communicate with child\r\n                    }, 100); // loops for about 20 seconds going from month to month (or longer)\r\n                    button.text(\"Pause\"); // when play button is selected, change text to 'pause'\r\n                }\r\n            });\r\n\r\n        let x = d3.scaleTime() // ref: https://observablehq.com/@d3/d3-scaletime\r\n            .domain([startDate, endDate]) // use timescale domain between start and end dates\r\n            .range([0, targetValue]) // define range of slider being from beginning to end of its range\r\n            .clamp(true); // ensure that handle does not escape range\r\n\r\n        gRange.append(\"line\")\r\n            .attr(\"class\", \"track\") // apply track css properties within slider svg body\r\n            .attr(\"x1\", x.range()[0])\r\n            .attr(\"x2\", x.range()[1])\r\n            .select(function() {\r\n                return this.parentNode.appendChild(this.cloneNode(true)); // not sure what this is yet\r\n            })\r\n            .attr(\"class\", \"track-inset\") // apply track-inset css properties within slider svg body\r\n            .select(function() {\r\n                return this.parentNode.appendChild(this.cloneNode(true));\r\n            })\r\n            .attr(\"class\", \"track-overlay\") // apply track-overlay css properties within slider svg body\r\n            .call(d3.drag() // dragging behavior\r\n                .on(\"start.interrupt\", function() { // handle interrupts\r\n                    gRange.interrupt();\r\n                })\r\n                .on(\"start drag\", function(event) { // while hande is dragged, store current value and update handle location\r\n                    currentValue = event.x;\r\n                    update(x.invert(currentValue));\r\n                })\r\n                .on(\"end\", function(event) { // when handle is released, use the last recorded current value\r\n                    self.setState({ currentDate: x.invert(currentValue) });\r\n                })\r\n            );\r\n\r\n        let handle = gRange.insert(\"circle\", \".track-overlay\") // inserts the track\r\n            .attr(\"class\", \"handle\") // apply handle css properties to track within slider svg body\r\n            .attr(\"r\", 9); // set radius of handle\r\n\r\n        let label = gRange.append(\"text\") // append text onto slider which will be our tick representations\r\n            .attr(\"class\", \"label\") // apply label css properties\r\n            .attr(\"text-anchor\", \"middle\") // anchor text to middle\r\n            .text(formatDate(startDate)) // display currently selected date in text\r\n            .attr(\"transform\", \"translate(0,\" + (-25) + \")\") // shift text to left\r\n\r\n        document.addEventListener('keydown', function(event) { // listen for keypresses\r\n            switch (event.key) { // we are only concerned about left/right arrow keys\r\n                case \"ArrowLeft\":\r\n                    currentValue = // ensure handle does not decrement below zero\r\n                        (currentValue === 0) ? currentValue : currentValue - 1;\r\n                    update(x.invert(currentValue)); // shift handle one tick to left\r\n                    break;\r\n                case \"ArrowRight\":\r\n                    currentValue++; // increment current value\r\n                    update(x.invert(currentValue)); // shift handle one tick to right\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n\r\n        gRange.insert(\"g\", \".track-overlay\") // create the track overlay\r\n            .attr(\"class\", \"ticks\") // apply ticks css properties within slider svg body\r\n            .attr(\"transform\", \"translate(0,\" + 18 + \")\") // shift to right\r\n            .selectAll(\"text\") // apply following changes to all text on slider (ticks)\r\n            .data(x.ticks(10)) // ref: https://observablehq.com/@d3/d3-scaletime\r\n            .enter() // ref: https://observablehq.com/@dnarvaez27/understanding-enter-exit-merge-key-function\r\n            .append(\"text\") // append text representing ticks then set its coordinates (x-coordinate is variable, y-coordinate is fixed)\r\n            .attr(\"x\", x)\r\n            .attr(\"y\", 10)\r\n            .attr(\"text-anchor\", \"middle\") // center text on tick\r\n            .text((d) => formatDateIntoYear(d)); // write formatted date as text\r\n\r\n        function update(h) { // update position and text of label according to slider scale\r\n            handle.attr(\"cx\", x(h)); // update handle position\r\n            label // update tick label position and tick label content to new date\r\n                .attr(\"x\", x(h))\r\n                .text(formatDate(h));\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// there is probably a way better way to do this, but new urls are added to end of the urls csv string\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App\r\n            // urls={\"https://global-warming.org/api/co2-api,https://global-warming.org/api/methane-api,https://global-warming.org/api/nitrous-oxide-api,https://global-warming.org/api/temperature-api\"}\r\n        />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}