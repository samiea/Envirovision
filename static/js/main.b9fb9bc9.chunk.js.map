{"version":3,"sources":["sketches/sun.js","sketches/landscape.js","sketches/macroPlastics.js","sketches/microPlastics.js","sketches/methaneBubbles.js","sketches/smogClouds.js","sketches/skyColor.js","sketches/legend.js","sketches/sketch.js","OWVisualization.js","sounds/bubbles.wav","OWSonification.js","components/Header.js","components/Contents.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["temperatureData","hoveredSunData","mouseOver","value","currentSize","hoveredSun","sunObject","Sun","p","this","x","windowWidth","y","windowHeight","size","display","currentDate","color","startColor","endColor","index","getFullYear","length","i","Math","round","average","count","parseFloat","station","rGap","r","gGap","g","bGap","b","rIndex","gIndex","bIndex","changeSunColor","fill","ellipse","move","mouseIsPressed","dist","mouseX","mouseY","height","drawSun","data","calcSun","createSun","Number","toFixed","toPrecision","cloud_ellipses","rx","ry","clouds","newHeight","drawLandscape","seaLevelRise","currentYear","rect","drawClouds","calcWaveColor","createWave","drawWaves","noStroke","offsetY","rgb","dim","noFill","stroke","strokeWeight","beginShape","curveVertex","width","map","noise","frameCount","endShape","LINES","Cloud","key","CLOSE","macro_plastic","hoveredMacroPlasticData","hoveredMacroPlastic","GarbagePile","moreHeight","bubbleHeight","xVelocity","random","garbageBubbles","opacity","rcolor","gcolor","bcolor","GarbageBubble","garbageColor","setAlpha","abs","yOffset","yVelocity","rxVelocity","ryVelocity","xOffset","xlimit","ylimit","hoveredMicroPlasticData","drops","startingHeight","window","innerHeight","Drop","speed","gravity","hoveredBubbleData","bubbles","hoveredBubble","Bubble","xstart","yspeed","degree","cos","radians","setSpeed","new_speed","smogClouds","originalData","extra_clouds","hoveredSmogData","hoveredSmog","SmogCloud","todayData","initial","diff","oldData","undefined","smogBubbles","addLimit","SmogBubble","cloudColor","addlimit","wMod","hMod","START_SKY_g","drawLegend","text","maxWidth","screen","availWidth","outerWidth","innerWidth","width_ratio","numTextWraps","ceil","textSize","textBoxWidth","textBoxHeight","leftMargin","fillColor","wrappedText","replace","black","textAlign","LEFT","sketch","wrapper","document","getElementById","showLegend","microGrowth2050","macroGrowth2050","carbonData","methaneData","nitrousData","setup","frameRate","canvas","createCanvas","offsetWidth","id","parent","remove","p5Canvas","style","guideButton","onclick","playAudioButton","margin","slider","bottom","offsetHeight","visibility","setUpSun","setupMethaneBubbles","setupLandscape","currIndex","getMonth","setupSmogClouds","setupMacroPlastics","draw","clear","yearIdex","background","rJump","START_SKY_r","gJump","bJump","current_index","yearGap","carbon","trend","drawSky","slice","j","drawSmogClouds","arr","yyyy","Intl","DateTimeFormat","year","format","mm","month","date","startingValue","startingDate","get","currentValue","ratio","newNumBubbles","parseInt","splice","toString","new_yyyy","substring","new_mm","padStart","Date","drawMethaneBubbles","drawSeaboard","current_date","update","show","num","newSize","drawMicroPlasticDots","drawMacroPlastics","yoffset","leftPadding","createText","drawGuide","windowResized","resizeCanvas","resizeSun","resizeMicroPlastics","forEach","garbagePile","resizeMacroPlastics","redraw","myCustomRedrawAccordingToNewPropsHandler","newProps","OWVisualization","props","methaneMap","Map","e","set","prevProps","prevState","snapshot","React","Component","OWSonification","state","isLoaded","distortionLevel","reverbLevel","trebleFreqs","consonantIntervals","dissonantIntervals","consonanceProbability","fatSpread","fatDetune","amHarm","audioState","playbackState","fatOscState","amOscState","updateCount","dataUpdateCount","chromeFlag","initialize","bind","startAudio","getNewData","recordAudio","Tone","start","player","volume","fatOsc","am","wet","rampTo","distortion","rev","decay","frequency","partialCount","currDate","spread","setState","cp","aH","floor","distLevel","detune","scheduleRepeat","time","intervalIndex","setValueAtTime","stop","rec","setTimeout","a","recording","url","URL","createObjectURL","anchor","createElement","download","href","click","className","disabled","onClick","Reflect","has","connect","toDestination","buffer","load","loop","chain","fm","Header","Contents","preventDefault","scrollIntoView","behavior","Footer","class","App","dataIsLoaded","loadData","createSlider","d3","promises","urls","split","push","axios","Promise","all","then","result","co2","methane","nitrous","catch","error","console","log","fetchData","element","self","formatDateIntoYear","formatDate","startDate","endDate","timer","targetValue","gRange","append","classed","attr","html","d","playButton","on","button","clearInterval","setInterval","invert","domain","range","clamp","select","parentNode","appendChild","cloneNode","call","interrupt","event","handle","insert","label","h","addEventListener","selectAll","ticks","enter","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b9fb9bc9.chunk.js","sourcesContent":["//var yvalues;\r\n//var size_index = 0;\r\nexport const hoveredSunData = { mouseOver: false, value: null };\r\nlet temperatureData;\r\nlet currentSize = 0;\r\nlet hoveredSun = null;\r\nlet sunObject = null;\r\n\r\nclass Sun {\r\n    /**\r\n     * Constructor for sun\r\n     *\r\n     * @param {*} p p5 ptr\r\n     */\r\n    constructor(p) {\r\n        // class for sun object\r\n        this.x = p.windowWidth / 2;\r\n        this.y = p.windowHeight / 2;\r\n        this.size = currentSize * 100;\r\n        \r\n        /**\r\n         * Display sun on sketch\r\n         */\r\n        this.display = function (currentDate) {\r\n            let color = changeSunColor(currentDate, { r: 232, g: 152, b: 98 }, { r: 200, g: 100, b: 90 });\r\n            this.size = currentSize * 100;\r\n            p.fill(color.r, color.g, color.b);\r\n            p.ellipse(this.x, this.y, this.size);\r\n            if (hoveredSunData.mouseOver) {\r\n                p.fill(225, 225, 0, 70);\r\n                p.ellipse(this.x, this.y, this.size + 20);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Behavior for sun movement\r\n         */\r\n        this.move = function () {\r\n            // check if mouse is pressed and within range of sun\r\n            if (p.mouseIsPressed && p.dist(p.mouseX, p.mouseY, this.x, this.y) < this.size / 2 + 10) {\r\n                //get the sun above the ocean\r\n                if (p.mouseY < p.height / 2) {\r\n                    hoveredSunData.mouseOver = true;\r\n                    hoveredSun = this;\r\n                }\r\n            }\r\n        };\r\n    }\r\n}\r\n\r\nexport function resizeSun(p) {\r\n    sunObject.x = p.windowWidth / 2;\r\n    sunObject.y = p.windowHeight / 2;\r\n}\r\n\r\nexport function setUpSun(p, data, currentDate) {\r\n    temperatureData = data; // temperature data might be null here\r\n    calcSun(currentDate);\r\n    sunObject = new Sun(p);\r\n}\r\n\r\nexport function drawSun(p, data, currentDate) {\r\n    if (data && !temperatureData) {\r\n        temperatureData = data;\r\n    }\r\n    calcSun(currentDate);\r\n    createSun(p, currentDate);\r\n}\r\n\r\nfunction calcSun(currentDate) {\r\n    //get current date based on scroller and year\r\n    if (temperatureData) {\r\n        var currentYear = currentDate.getFullYear();\r\n        var index = ((currentYear - 1880) * temperatureData.length) / 140 - 100;\r\n    \r\n        var i = Math.round(index);\r\n        var average = 0;\r\n        for (var count = 0; count < 100; count++) {\r\n            average = average + parseFloat(temperatureData[i + count].station);\r\n        }\r\n    \r\n        currentSize = average / 50 + 2;\r\n        hoveredSunData.value = Number.parseFloat(currentSize.toFixed(2) - 2).toPrecision(4);\r\n    }\r\n\r\n}\r\n\r\nfunction createSun(p, currentDate) {\r\n    if (temperatureData) {\r\n        if (!hoveredSunData.mouseOver) {\r\n            sunObject.move();\r\n        } else if (p.mouseY > p.height / 2) {\r\n            hoveredSunData.mouseOver = false;\r\n        } else if (p.dist(p.mouseX, p.mouseY, hoveredSun.x, hoveredSun.y) > hoveredSun.size / 2 + 20) {\r\n            hoveredSunData.mouseOver = false;\r\n        }\r\n        sunObject.display(currentDate);\r\n    }\r\n}\r\n\r\nfunction changeSunColor(currentDate, startColor, endColor) {\r\n    var currentYear = currentDate.getFullYear();\r\n\r\n    var index = ((currentYear - 1880) * temperatureData.length) / 140 - 100;\r\n\r\n    var i = Math.round(index);\r\n    var average = 0;\r\n    for (var count = 0; count < 100; count++) {\r\n        average = average + parseFloat(temperatureData[i + count].station);\r\n    }\r\n    \r\n    //smallest is 0 largest is 115\r\n    average = average + 3;\r\n\r\n    var rGap = (startColor.r - endColor.r) / 115;\r\n    var gGap = (startColor.g - endColor.g) / 115;\r\n    var bGap = (startColor.b - endColor.b) / 115;\r\n\r\n    // code body moved outside (above) statement block\r\n    var rIndex = startColor.r - ((rGap * average) | 0);\r\n    var gIndex = startColor.g - ((gGap * average) | 0);\r\n    var bIndex = startColor.b - ((bGap * average) | 0);\r\n\r\n    return { r: rIndex, g: gIndex, b: bIndex };\r\n}\r\n","const noiseSpeed = 0.01;\r\nconst noiseHeight = 30; // controls how high up waves go\r\nconst num_clouds = 3;\r\nconst cloud_ellipses = [\r\n    { x: 0, y: 20, rx: 70, ry: 40 },\r\n    { x: 25, y: -3, rx: 50, ry: 28 },\r\n    { x: 70, y: 3, rx: 50, ry: 28 },\r\n    { x: 100, y: 5, rx: 24, ry: 24 },\r\n    { x: 115, y: -2, rx: 24, ry: 24 },\r\n    { x: 130, y: -2, rx: 24, ry: 24 },\r\n    { x: 145, y: 0, rx: 24, ry: 24 },\r\n    { x: 160, y: 5, rx: 24, ry: 24 },\r\n    { x: 173, y: 5, rx: 24, ry: 24 },\r\n    { x: 185, y: 5, rx: 24, ry: 24 },\r\n    { x: 198, y: -3, rx: 24, ry: 24 },\r\n    { x: 215, y: 3, rx: 28, ry: 24 },\r\n    { x: 230, y: 4, rx: 30, ry: 24 },\r\n    { x: 245, y: 6, rx: 30, ry: 24 },\r\n    { x: 260, y: 6, rx: 30, ry: 24 },\r\n    { x: 270, y: 3, rx: 26, ry: 24 },\r\n    { x: 285, y: 10, rx: 30, ry: 24 },\r\n    { x: 310, y: 4, rx: 30, ry: 24 },\r\n    { x: 325, y: 4, rx: 16, ry: 16 },\r\n    { x: 339, y: 2, rx: 24, ry: 24 },\r\n    { x: 365, y: 5, rx: 44, ry: 28 },\r\n    { x: 400, y: 0, rx: 40, ry: 24 },\r\n    { x: 435, y: -5, rx: 50, ry: 30 },\r\n    { x: 465, y: 5, rx: 24, ry: 24 },\r\n    { x: 490, y: -3, rx: 38, ry: 30 },\r\n    { x: 524, y: -3, rx: 40, ry: 24 },\r\n    { x: 550, y: -10, rx: 60, ry: 50 },\r\n    { x: 595, y: 3, rx: 58, ry: 40 },\r\n    { x: 627, y: 12, rx: 24, ry: 24 },\r\n    { x: 643, y: 20, rx: 40, ry: 24 },\r\n    { x: 665, y: 19, rx: 30, ry: 24 },\r\n    { x: 695, y: 20, rx: 50, ry: 24 },\r\n    { x: 715, y: 25, rx: 45, ry: 30 },\r\n    { x: 740, y: 25, rx: 45, ry: 30 },\r\n    { x: 754, y: 17, rx: 27, ry: 24 },\r\n    { x: 766, y: 17, rx: 20, ry: 20 },\r\n    { x: 780, y: 17, rx: 25, ry: 20 },\r\n    { x: 800, y: 10, rx: 30, ry: 20 },\r\n    { x: 820, y: 10, rx: 40, ry: 40 },\r\n    { x: 860, y: 10, rx: 80, ry: 60 },\r\n    { x: 890, y: -5, rx: 24, ry: 24 },\r\n    { x: 910, y: -10, rx: 40, ry: 40 },\r\n    { x: 950, y: -18, rx: 69, ry: 50 },\r\n    { x: 990, y: -18, rx: 40, ry: 30 },\r\n    { x: 1010, y: 0, rx: 40, ry: 30 },\r\n    { x: 1030, y: 10, rx: 24, ry: 24 },\r\n    { x: 1050, y: 8, rx: 24, ry: 24 },\r\n    { x: 1065, y: 10, rx: 24, ry: 24 },\r\n    { x: 1090, y: 15, rx: 50, ry: 24 },\r\n    { x: 1115, y: 20, rx: 24, ry: 24 },\r\n    { x: 1135, y: 25, rx: 40, ry: 24 },\r\n    { x: 1155, y: 25, rx: 40, ry: 24 },\r\n    { x: 1180, y: 20, rx: 38, ry: 25 },\r\n    { x: 1200, y: 100, rx: 70, ry: 40 },\r\n];\r\nlet clouds = [];\r\n//new height to add to the height of the wave to indicate see level rise\r\nlet newHeight = 0;\r\n\r\nexport function setupLandscape(p) {\r\n    for (let i = 0; i < 3; i++) {\r\n        // initialize the clouds\r\n        clouds[i] = new Cloud(p, num_clouds - i);\r\n    }\r\n}\r\n\r\nexport function drawLandscape(p, currentDate, seaLevelRise, temperatureData) {\r\n    // this loops everything inside body\r\n    //we wil add a new height to the starting height to make our landscape rise and fall\r\n    // with the date and sea seaLevelRise data\r\n    if (seaLevelRise != null){\r\n      var currentYear = currentDate.getFullYear();\r\n      var index = currentYear - 1880;\r\n\r\n      if (index < 0) {\r\n          newHeight = 0;\r\n      }\r\n      if (currentYear > 2013) {\r\n          newHeight = seaLevelRise[2013 - 1880][1] * 3 + (currentYear - 2014) / 3;\r\n      } else {\r\n\r\n          newHeight = seaLevelRise[index][1] * 3;\r\n      }\r\n      newHeight *= 2;\r\n\r\n      drawClouds(p, currentYear);\r\n      drawWaves(p, currentDate, temperatureData);\r\n      p.noStroke();\r\n    }\r\n\r\n}\r\n\r\nfunction drawClouds(p, currentYear) {\r\n    // create the clouds to call their methods\r\n    for (var i = 0; i < num_clouds; i++) {\r\n        clouds[i].move();\r\n        clouds[i].display(currentYear);\r\n    }\r\n    p.rect(0, p.windowHeight / 2 - 18, p.windowWidth, p.windowHeight / 2 + 18);\r\n}\r\n\r\nfunction drawWaves(p, currentDate, temperatureData) {\r\n    if (temperatureData) {\r\n        // create the waves\r\n        var startColor = { r: 194, g: 247, b: 254 };\r\n        var endColor = { r: 116, g: 199, b: 145 };\r\n        var color = calcWaveColor(\r\n            p,\r\n            currentDate,\r\n            startColor,\r\n            endColor,\r\n            temperatureData\r\n        );\r\n        createWave(p, 10 - newHeight, color, 2); // 0\r\n\r\n        startColor = { r: 84, g: 182, b: 282 };\r\n        endColor = { r: 109, g: 163, b: 103 };\r\n        color = calcWaveColor(\r\n            p,\r\n            currentDate,\r\n            startColor,\r\n            endColor,\r\n            temperatureData\r\n        );\r\n        createWave(p, 65 - newHeight, color, 2); // 65\r\n\r\n        startColor = { r: 112, g: 219, b: 245 };\r\n        endColor = { r: 77, g: 202, b: 123 };\r\n        color = calcWaveColor(\r\n            p,\r\n            currentDate,\r\n            startColor,\r\n            endColor,\r\n            temperatureData\r\n        );\r\n        createWave(p, 80 - newHeight, color, 2); // 80\r\n    }\r\n}\r\n\r\nexport function drawSeaboard(p) {\r\n    // create the landscape\r\n    createWave(p, 0, { r: 250, g: 219, b: 97 }, 1);\r\n}\r\n\r\n/**\r\n * Create wave\r\n *\r\n * @param {*} offsetY Vertical offset of wave\r\n * @param {*} rgb Wave color\r\n * @param {*} dim Dimension (1D or 2D)\r\n */\r\nfunction createWave(p, offsetY, rgb, dim) {\r\n    p.noFill();\r\n    p.stroke(rgb.r, rgb.g, rgb.b); // draw wave\r\n    p.strokeWeight(p.windowHeight / 1.5); // controls how tall the wave is\r\n    p.beginShape(); // create shape for area under waves\r\n    p.curveVertex(0, p.windowHeight / 2);\r\n    for (let i = 0; i < p.width; i += 50) {\r\n        let y;\r\n        if (dim === 1) {\r\n            y = p.map(p.noise(i), 0, 1, 200, 300);\r\n            p.curveVertex(i, p.windowHeight * 1.55 - y);\r\n        } else {\r\n            y = p.noise(p.frameCount * noiseSpeed + i) * noiseHeight; // + noiseY + offsetY;\r\n            p.curveVertex(i, y + p.windowHeight / 1.22 + offsetY);\r\n        }\r\n        // console.log(y);\r\n    }\r\n    p.curveVertex(p.width, p.windowHeight / 2);\r\n    p.endShape(p.LINES); // end shape for area under waves\r\n}\r\n\r\nclass Cloud {\r\n    // class for cloud objects\r\n    constructor(p, key) {\r\n        this.x = p.width - 1200 * key; // initial x position\r\n        this.y = p.height / 2; // initial y position\r\n\r\n        this.display = function (currentYear) {\r\n            var color = 255 - (currentYear - 1950) * 2;\r\n            //console.log(color);\r\n            p.fill(color);\r\n            p.beginShape(); // create shape for area under ellipses\r\n            for (let i = 0; i < cloud_ellipses.length; i++) {\r\n                p.ellipse(\r\n                    // create ellipses that form clouds\r\n                    this.x + cloud_ellipses[i].x,\r\n                    this.y + cloud_ellipses[i].y,\r\n                    cloud_ellipses[i].rx,\r\n                    cloud_ellipses[i].ry\r\n                );\r\n                p.curveVertex(\r\n                    // create vertices to paint area under cloud white\r\n                    this.x + cloud_ellipses[i].x,\r\n                    this.y + cloud_ellipses[i].y\r\n                );\r\n            }\r\n            p.curveVertex(p.windowWidth, p.windowHeight);\r\n            p.endShape(p.CLOSE); // end shape for area under ellipses\r\n        };\r\n\r\n        this.move = function () {\r\n            this.x += 0.2; // cloud movement speed\r\n\r\n            if (this.x >= p.width) {\r\n                this.x = p.width - 1200 * num_clouds; // reset cloud to this position\r\n            }\r\n\r\n            this.y = p.height / 2 - 15 - newHeight; // update Yposition\r\n        };\r\n    }\r\n}\r\n\r\nexport function calcWaveColor(p, currentDate, startColor, endColor, temperatureData) {\r\n    var currentYear = currentDate.getFullYear();\r\n\r\n    var index = ((currentYear - 1880) * temperatureData.length) / 140 - 100;\r\n\r\n    var i = Math.round(index);\r\n    var average = 0;\r\n    for (var count = 0; count < 100; count++) {\r\n        average = average + parseFloat(temperatureData[i + count].station);\r\n    }\r\n    //console.log(i);\r\n    //smallest is 0 largest is 115\r\n    average = average + 3;\r\n\r\n    var rGap = (startColor.r - endColor.r) / 115;\r\n    var gGap = (startColor.g - endColor.g) / 115;\r\n    var bGap = (startColor.b - endColor.b) / 115;\r\n\r\n    // code body moved outside (above) statement block\r\n    var rIndex = startColor.r - ((rGap * average) | 0);\r\n    var gIndex = startColor.g - ((gGap * average) | 0);\r\n    var bIndex = startColor.b - ((bGap * average) | 0);\r\n\r\n    return { r: rIndex, g: gIndex, b: bIndex };\r\n}\r\n","//these are gonna be the variables for our garbage collection\r\nvar macro_plastic = [];\r\n\r\nexport const hoveredMacroPlasticData = { mouseOver: false, value: null };\r\nlet hoveredMacroPlastic = null;\r\nlet newHeight = 0;\r\n\r\nclass GarbagePile {\r\n    constructor(p, moreHeight) {\r\n        var bubbleHeight = p.height / 1.85;\r\n        this.xVelocity = p.random(-0.5, 0.5); //cloud movement velocity\r\n        this.x = p.random(50, p.width);\r\n        this.y = bubbleHeight - moreHeight;\r\n        this.width = p.random(100, 300);\r\n        this.height = p.random(50, 100);\r\n        this.garbageBubbles = [];\r\n        // make the garbage hard to see through\r\n\r\n        this.opacity = p.random(400, 500);\r\n        this.size = this.width - this.height;\r\n\r\n        // various reds and greens and browns\r\n        this.rcolor = p.random(129, 160);\r\n        this.gcolor = p.random(80, 105);\r\n        this.bcolor = p.random(70, 110);\r\n\r\n        for (let x = 0; x < 25; x++) {\r\n            this.garbageBubbles[x] = new GarbageBubble(\r\n                p,\r\n                this.width,\r\n                this.height\r\n            );\r\n        }\r\n\r\n        this.display = function () {\r\n            p.noStroke();\r\n\r\n            let color = p.color(this.rcolor, this.gcolor, this.bcolor);\r\n            this.garbageColor = color;\r\n            this.garbageColor.setAlpha(this.opacity);\r\n            p.fill(this.garbageColor);\r\n\r\n            if (hoveredMacroPlasticData.mouseOver) {\r\n                p.fill(225, 225, 0, 70);\r\n            }\r\n\r\n            for (let x = 0; x < this.garbageBubbles.length; x++) {\r\n                this.garbageBubbles[x].display(this.x, this.y);\r\n            }\r\n        };\r\n\r\n        this.move = function () {\r\n            for (let x = 0; x < this.garbageBubbles.length; x++) {\r\n                if (\r\n                    Math.abs(this.garbageBubbles[x].yOffset) >\r\n                    this.height / 2 - 10\r\n                ) {\r\n                    this.garbageBubbles[x].yVelocity *= -1;\r\n                }\r\n                if (\r\n                    this.garbageBubbles[x].rx < 70 ||\r\n                    this.garbageBubbles[x].rx > 150\r\n                ) {\r\n                    this.garbageBubbles[x].rxVelocity *= -1;\r\n                }\r\n                if (\r\n                    this.garbageBubbles[x].ry < 70 ||\r\n                    this.garbageBubbles[x].ry > 150\r\n                ) {\r\n                    this.garbageBubbles[x].ryVelocity *= -1;\r\n                }\r\n\r\n                this.garbageBubbles[x].xOffset += this.garbageBubbles[\r\n                    x\r\n                ].xVelocity;\r\n                this.garbageBubbles[x].yOffset += this.garbageBubbles[\r\n                    x\r\n                ].yVelocity;\r\n\r\n                this.garbageBubbles[x].rx += this.garbageBubbles[x].rxVelocity;\r\n                this.garbageBubbles[x].ry += this.garbageBubbles[x].ryVelocity;\r\n\r\n                this.garbageBubbles[x].move();\r\n            }\r\n\r\n            if (this.x > p.width) {\r\n                this.x = 50;\r\n            } else if (this.x < 0) {\r\n                this.x = p.width - 50;\r\n            }\r\n            this.x += this.xVelocity;\r\n        };\r\n    }\r\n}\r\n\r\nexport function resizeMacroPlastics(p) {\r\n    macro_plastic.forEach((garbagePile) => {\r\n        garbagePile.y = p.windowHeight / 1.85;\r\n    });\r\n}\r\n\r\nclass GarbageBubble {\r\n    constructor(p, xlimit, ylimit) {\r\n        this.opacity = p.random(150, 200);\r\n        this.xVelocity = p.random(0.03, 0.07);\r\n        this.yVelocity = p.random(0.03, 0.07);\r\n        this.xOffset = p.random((xlimit / 4) * -1, xlimit / 4);\r\n        this.yOffset = p.random((ylimit / 8) * -1, ylimit / 8);\r\n        this.rx = p.random(25, 40);\r\n        this.ry = p.random(25, 40);\r\n        this.size = this.rx;\r\n        this.rxVelocity = p.random(-0.01, 0.01);\r\n        this.ryVelocity = p.random(0.0, 0.01);\r\n\r\n        this.display = function (x, y) {\r\n            this.x = x + this.xOffset;\r\n            this.y = y + this.yOffset - newHeight;\r\n\r\n            p.ellipse(\r\n                x + this.xOffset,\r\n                y + this.yOffset - newHeight,\r\n                this.rx,\r\n                this.ry\r\n            );\r\n            p.curveVertex(x + this.xOffset, y + this.yOffset - newHeight);\r\n        };\r\n\r\n        this.move = function () {\r\n            // check if mouse is pressed and within range of bubble\r\n\r\n            if (\r\n                p.mouseIsPressed &&\r\n                p.dist(p.mouseX, p.mouseY, this.x, this.y) < this.size\r\n            ) {\r\n                hoveredMacroPlasticData.mouseOver = true;\r\n                hoveredMacroPlastic = this;\r\n            }\r\n        };\r\n    }\r\n}\r\n\r\nexport function setupMacroPlastics(p) {\r\n    //\r\n    //set up plastic\r\n    //\r\n    for (var i = 0; i < 5; i++) {\r\n        macro_plastic[i] = new GarbagePile(p, i);\r\n    }\r\n}\r\n\r\nexport function drawMacroPlastics(\r\n    p,\r\n    macroGrowth2050,\r\n    current_date,\r\n    seaLevelRise\r\n) {\r\n    //we wil add a new height to the starting height to make our landscape rise and fall\r\n    // with the date and sea seaLevelRise data\r\n\r\n    var currentDate = current_date.getFullYear();\r\n    var index = currentDate - 1880;\r\n\r\n    if (index < 0) {\r\n        newHeight = 0;\r\n    }\r\n    if (currentDate > 2013) {\r\n        newHeight = seaLevelRise[2013 - 1880][1] * 3 + (currentDate - 2014) / 3;\r\n    } else {\r\n        newHeight = seaLevelRise[index][1] * 3;\r\n    }\r\n\r\n    //calc amount of microplastic\r\n\r\n    for (var i = 0; i < macro_plastic.length; i++) {\r\n        if (!hoveredMacroPlasticData.mouseOver) {\r\n            macro_plastic[i].move(p);\r\n        } else if (\r\n            p.dist(\r\n                p.mouseX,\r\n                p.mouseY,\r\n                hoveredMacroPlastic.x,\r\n                hoveredMacroPlastic.y\r\n            ) > hoveredMacroPlastic.size\r\n        ) {\r\n            hoveredMacroPlasticData.mouseOver = false;\r\n        }\r\n        macro_plastic[i].display(p);\r\n    }\r\n\r\n    if (macroGrowth2050 != null) {\r\n        var newSize = -1 * (macroGrowth2050[currentDate - 1950][1] - 367);\r\n        //calculate the actual data from the value\r\n        //console.log(newSize);\r\n        var num;\r\n        if (currentDate > 1963) {\r\n            num = newSize * (1180000 / 103);\r\n            hoveredMacroPlasticData.value = num.toFixed(2);\r\n        } else {\r\n            newSize = 0\r\n            num = (currentDate - 1950) * 100;\r\n            hoveredMacroPlasticData.value = num.toFixed(2);\r\n        }\r\n\r\n        newSize = Math.round(newSize / 3) + 1;\r\n        newHeight = Math.round(newSize * 1.25);\r\n\r\n        //add drops\r\n        if (newSize > macro_plastic.length) {\r\n            for (var j = macro_plastic.length; j < newSize; j++) {\r\n                macro_plastic[j] = new GarbagePile(p, newHeight);\r\n            }\r\n        }\r\n        //remove drops\r\n        if (newSize < macro_plastic.length) {\r\n            //console.log('remove');\r\n            var diff = macro_plastic.length - newSize;\r\n            macro_plastic = macro_plastic.splice(0, diff);\r\n        }\r\n    }\r\n}\r\n","import { hoveredMacroPlasticData } from \"./macroPlastics\";\r\n\r\n//these are gonna be the variables for our garbage collection\r\nexport const hoveredMicroPlasticData = { mouseOver: false, value: null };\r\nlet drops = [];\r\nlet micro_Size = 5;\r\nlet newHeight = 0;\r\nlet startingHeight = window.innerHeight * 0.56;\r\n\r\nclass Drop {\r\n    constructor(p) {\r\n        this.x = p.random(0, p.width);\r\n        this.y = p.random(startingHeight, p.height);\r\n    }\r\n\r\n    show(p) {\r\n        p.noStroke();\r\n        p.fill(255);\r\n        this.size = p.random(5, micro_Size);\r\n\r\n        p.ellipse(this.x, this.y, this.size);\r\n\r\n        if (hoveredMacroPlasticData.mouseOver) {\r\n            p.fill(225, 225, 0, 70);\r\n            p.ellipse(this.x, this.y, this.size + 10);\r\n        }\r\n    }\r\n\r\n    update(p) {\r\n        this.speed = this.speed = p.random(2, 4);\r\n        this.gravity = 1.05;\r\n        this.y = this.y + this.speed * this.gravity;\r\n\r\n        if (this.y > p.height) {\r\n            this.y = p.random(\r\n                startingHeight - newHeight,\r\n                startingHeight - newHeight + 70\r\n            );\r\n            this.gravity = 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport function resizeMicroPlastics(p) {\r\n    startingHeight = p.windowHeight * 0.56;\r\n}\r\n\r\nexport function setupMicroPlasticDrops(p) {\r\n    //\r\n    //set up plastic\r\n    //\r\n    for (let i = 0; i < 200; i++) {\r\n        drops[i] = new Drop(p);\r\n    }\r\n}\r\n\r\nexport function drawMicroPlasticDots(\r\n    p,\r\n    microGrowth2050,\r\n    current_date,\r\n    seaLevelRise\r\n) {\r\n    //we wil add a new height to the starting height to make our landscape rise and fall\r\n    // with the date and sea seaLevelRise data\r\n    let currentDate = current_date.getFullYear();\r\n    let index = currentDate - 1880;\r\n\r\n    if (index < 0) {\r\n        newHeight = 0;\r\n    }\r\n    if (currentDate > 2013) {\r\n        newHeight = seaLevelRise[2013 - 1880][1] * 3 + (currentDate - 2014) / 3;\r\n    } else {\r\n        newHeight = seaLevelRise[index][1] * 3;\r\n    }\r\n\r\n    //calc microplastic\r\n    //\r\n\r\n    for (let i = 0; i < drops.length; i++) {\r\n        if (!hoveredMacroPlasticData.mouseOver) {\r\n            drops[i].update(p);\r\n        }\r\n        drops[i].show(p);\r\n    }\r\n\r\n    if (microGrowth2050 != null) {\r\n        let newSize = -1 * (microGrowth2050[currentDate - 1950][1] - 367);\r\n        let num;\r\n\r\n        if (currentDate > 1971) {\r\n            num = newSize * (590000 / 78);\r\n            hoveredMicroPlasticData.value = num.toFixed(2);\r\n        } else {\r\n\r\n            num = (currentDate - 1950) * 100;\r\n            newSize = num/500\r\n            hoveredMicroPlasticData.value = num.toFixed(2);\r\n        }\r\n\r\n        newSize = newSize * 5 ;\r\n\r\n        //add drops\r\n        if (newSize > drops.length) {\r\n            for (let j = drops.length; j < newSize; j++) {\r\n                drops[j] = new Drop(p);\r\n            }\r\n        }\r\n\r\n        //remove drops\r\n        if (newSize < drops.length) {\r\n            let diff = drops.length - newSize;\r\n            drops = drops.splice(diff);\r\n        }\r\n    }\r\n}\r\n","export const hoveredBubbleData = { mouseOver: false, value: null };\r\nconst startingNumBubbles = 30; // always starts with 30 bubbles\r\nlet bubbles = []; // holds Bubble objects\r\nlet hoveredBubble = null;\r\nlet newHeight = 0;\r\n/**\r\n * Class for bubbles that float up from seabed on display\r\n */\r\nclass Bubble {\r\n    /**\r\n     * Constructor for bubbles\r\n     *\r\n     * @param {*} p p5 ptr\r\n     * @param {*} xstart Starting x-position\r\n     * @param {*} yspeed Speed of bubble rising to top\r\n     * @param {*} size Size of bubble\r\n     */\r\n    constructor(p, xstart, yspeed, size, value) {\r\n        // class for bubble objects\r\n        this.x = xstart; // starting x-position of bubbles\r\n        this.y = p.random(p.height - 150, p.height * 1.5); // starting y-position of bubbles under height\r\n        this.size = size;\r\n        this.yspeed = yspeed;\r\n        this.degree = 0;\r\n        this.value = value; // current value to date from data\r\n\r\n        /**\r\n         * Display bubble on sketch\r\n         */\r\n        this.display = function () {\r\n            p.fill(255, 255, 255, 50);\r\n            p.ellipse(this.x, this.y, size);\r\n            p.fill(255, 255, 255, 180);\r\n            p.ellipse(this.x + 0.2 * size, this.y - 0.2 * size, 0.2 * size); // bubble detail\r\n            if (hoveredBubbleData.mouseOver) {\r\n                p.fill(225, 225, 0, 70);\r\n                p.ellipse(this.x, this.y, size + 10);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Behavior for bubble movement\r\n         */\r\n        this.move = function () {\r\n            this.x += p.cos(p.radians(this.degree)); // base x-shifts on cosine waves\r\n            this.y += this.yspeed; // bubble movement speed\r\n            if (this.y < p.height * 0.63 - newHeight) {\r\n                this.y = p.height;\r\n            }\r\n\r\n            // check if mouse is pressed and within range of bubble\r\n            if (p.mouseIsPressed && p.dist(p.mouseX, p.mouseY, this.x, this.y) < size) {\r\n                hoveredBubbleData.mouseOver = true;\r\n                hoveredBubble = this;\r\n            }\r\n\r\n            this.degree += p.random(0.0, 1.0);\r\n        };\r\n\r\n        /**\r\n         * Set bubble speed corresponding to data\r\n         *\r\n         * @param {*} new_speed Re-initialize bubble speed\r\n         */\r\n        this.setSpeed = function (new_speed) {\r\n            this.yspeed = new_speed;\r\n        };\r\n    }\r\n}\r\n\r\n/**\r\n * Set up methane bubbles on canvas\r\n *\r\n * @param {*} p p5 ptr\r\n */\r\nexport function setupMethaneBubbles(p, methaneData) {\r\n    // initialize at beginning with bubbles from starting date\r\n    // const startingValue = methaneData.arr[0].average;\r\n    // const AVG_END = methaneData.arr[methaneData.arr.length - 1].average;\r\n    // const diff = AVG_END - startingValue; // diff btwn curr avg and start avg\r\n\r\n    for (let i = 0; i < startingNumBubbles; i++) {\r\n        // initialize the bubbles\r\n        bubbles[i] = new Bubble(p, p.random(0, p.width), p.random(-1.5, -1), p.random(10, 20), null);\r\n    }\r\n}\r\n\r\n/**\r\n * Draw methane bubbles on sketch\r\n *\r\n * @param {*} p p5 ptr\r\n * @param {*} methaneData Object containing map and arr\r\n * @param {*} currentDate Current date stored in state\r\n */\r\nexport function drawMethaneBubbles(p, methaneData, currentDate, seaLevelRise) {\r\n    if (methaneData.arr) {\r\n        // create the bubbles and call their methods\r\n        // data starts on/after 1983\r\n        const yyyy = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(\r\n            currentDate\r\n        );\r\n        const mm = new Intl.DateTimeFormat(\"en\", { month: \"2-digit\" }).format(\r\n            currentDate\r\n        );\r\n        const dd = \"01\";\r\n        const date = `${yyyy}-${mm}-${dd}`;\r\n        const startingValue = methaneData.arr[0].average;\r\n        const startingDate = methaneData.arr[0].date;\r\n        const startingYearEstValue = 1116; // retrieved from https://www.methanelevels.org/\r\n    \r\n        // we will add a new height to the starting height to make our landscape rise and fall\r\n        // with the date and sea seaLevelRise data\r\n        const currentYear = currentDate.getFullYear();\r\n        const index = currentYear - 1880;\r\n    \r\n        if (index < 0) {\r\n            newHeight = 0;\r\n        }\r\n        if (currentYear > 2013) {\r\n            newHeight = seaLevelRise[2013 - 1880][1] * 3 + (currentYear - 2014) / 3;\r\n        } else {\r\n            newHeight = seaLevelRise[index][1] * 3;\r\n        }\r\n    \r\n        // make more bubbles and modify speed\r\n        for (let i = 0; i < bubbles.length; i++) {\r\n            // check if mouse is hovering over bubble\r\n            // if not, move normally\r\n            // otherwise, compare current mouse position with initially selected bubble position\r\n            if (!hoveredBubbleData.mouseOver) {\r\n                bubbles[i].move();\r\n            } else if (\r\n                p.dist(p.mouseX, p.mouseY, hoveredBubble.x, hoveredBubble.y) >\r\n                hoveredBubble.size\r\n            ) {\r\n                hoveredBubbleData.mouseOver = false;\r\n            }\r\n            bubbles[i].display();\r\n        }\r\n    \r\n        // update bubble here\r\n        if (methaneData.map.get(date)) {\r\n            const currentValue = methaneData.map.get(date);\r\n            const diff = currentValue - startingValue; // diff btwn curr avg and start avg\r\n            const ratio = startingValue / currentValue;\r\n            const newNumBubbles = parseInt(diff + startingNumBubbles);\r\n    \r\n            // update current data value\r\n            //console.log(currentValue);\r\n            hoveredBubbleData.value = currentValue;\r\n    \r\n            if (newNumBubbles > bubbles.length) {\r\n                for (let j = bubbles.length; j < newNumBubbles; j++) {\r\n                    bubbles[j] = new Bubble(\r\n                        p,\r\n                        p.random(0, p.width),\r\n                        p.random((-2 / ratio) * 2, (-1.5 / ratio) * 2),\r\n                        p.random(10, 20),\r\n                        currentValue\r\n                    );\r\n                }\r\n            }\r\n    \r\n            if (newNumBubbles < bubbles.length) {\r\n                bubbles = bubbles.splice(bubbles.length - newNumBubbles);\r\n            }\r\n        } else {\r\n            // set to null if no data available\r\n            // console.log(`Current year: ${currentYear} (${typeof(currentYear)}), Starting year: ${startingYear} (${typeof(startingYear)})`)\r\n            hoveredBubbleData.value = `${(\r\n                startingYearEstValue +\r\n                (currentYear - 1950) * 10\r\n            ).toString()} (approximation)`;\r\n    \r\n            // use last known date (make sure to set first date to earliest and vice versa)\r\n            // 1. get the date where data starts for api\r\n            const new_yyyy = startingDate.substring(0, 4);\r\n            const new_mm = startingDate\r\n                .substring(5, startingDate.length)\r\n                .padStart(2, \"0\");\r\n            const new_dd = \"01\";\r\n            const new_date = new Date(`${new_yyyy}-${new_mm}-${new_dd}`);\r\n    \r\n            // 2. update bubble here (could be < lower bound or > upper bound)\r\n            if (new_date >= currentDate) {\r\n                bubbles = bubbles.splice(0, startingNumBubbles);\r\n                for (let i = 0; i < startingNumBubbles; i++) {\r\n                    bubbles[i].setSpeed(p.random(-1.5, -1));\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","let smogClouds = [];\r\nlet originalData = null;\r\nconst initial_clouds = 4;\r\nlet extra_clouds = 0;\r\nlet color;\r\nexport let hoveredSmogData = { mouseOver: false, value: null };\r\nlet hoveredSmog = null;\r\n\r\nclass SmogCloud {\r\n    constructor(p, todayData, initial) {\r\n        let diff = 0;\r\n        if(!todayData || !initial) {\r\n            this.todayData = undefined;\r\n            this.oldData = undefined\r\n        }\r\n        else {\r\n            this.todayData = todayData;\r\n            this.oldData = initial;\r\n            diff = Math.round(((todayData.average - initial.average)))\r\n        }\r\n\r\n\r\n\r\n        this.xVelocity = p.random(-2, 2); //cloud movement velocity\r\n        this.x = p.random(50, p.width);\r\n        this.y = p.random(50, 200);\r\n        this.width = p.random(100 + diff, 300 + diff);\r\n        this.height = p.random(50 + diff, 100 + diff);\r\n        this.smogBubbles = [];\r\n        this.opacity = p.random(50, 200);\r\n        this.addLimit = 0;\r\n\r\n        for (let x = 0; x < 25; x++) {\r\n            this.smogBubbles[x] = new SmogBubble(p, this.width, this.height, diff, diff);\r\n        }\r\n\r\n        this.display = function (todayData) {\r\n            this.oldData = this.todayData\r\n            this.todayData = todayData;\r\n            if(this.todayData === undefined) {\r\n                this.todayData = this.oldData;\r\n            }\r\n            // console.log(\"Displaying smog cloud\");\r\n\r\n            if(this.oldData) {\r\n                p.noStroke();\r\n                let cloudColor = p.color(color);\r\n                cloudColor.setAlpha(this.opacity);\r\n                p.fill(cloudColor);\r\n\r\n                this.width += (parseFloat(this.todayData.average) - parseFloat(this.oldData.average))*4\r\n                this.height += (parseFloat(this.todayData.average) - parseFloat(this.oldData.average))*4\r\n                if (hoveredSmogData.mouseOver) {\r\n                    p.fill(225, 225, 0, 70)\r\n                }\r\n                p.ellipse(this.x, this.y, this.width, this.height);\r\n                p.beginShape();\r\n                for (let x = 0; x < this.smogBubbles.length; x++) {\r\n                    cloudColor.setAlpha(this.smogBubbles[x].opacity);\r\n                    p.fill(cloudColor);\r\n                    this.smogBubbles[x].rx += (this.todayData.average - this.oldData.average)*4\r\n                    this.smogBubbles[x].ry += (this.todayData.average - this.oldData.average)*4\r\n\r\n                    //this.smogBubbles[x].rxVelocity += (this.todayData.average - this.oldData.average)\r\n                    //this.smogBubbles[x].ryVelocity += (this.todayData.average - this.oldData.average)\r\n                    if (hoveredSmogData.mouseOver) {\r\n                        p.fill(225, 225, 0, 70)\r\n                    }\r\n                    this.smogBubbles[x].display(this.x,this.y)\r\n                }\r\n            }\r\n            p.endShape(p.CLOSE);\r\n        };\r\n\r\n        this.move = function () {\r\n            if(this.oldData) {\r\n                this.addlimit += (parseFloat(this.todayData.average) - parseFloat(this.oldData.average))* 4;\r\n                for (let x = 0; x < this.smogBubbles.length; x++) {\r\n                    if (Math.abs(this.smogBubbles[x].xOffset) > this.width / 2 - 10 + this.addLimit/3) {\r\n                        this.smogBubbles[x].xVelocity *= -1;\r\n\r\n                    }\r\n                    if (Math.abs(this.smogBubbles[x].yOffset) > this.height / 2 - 10 + this.addLimit/3) {\r\n                        this.smogBubbles[x].yVelocity *= -1;\r\n\r\n                    }\r\n                    if(Math.abs(this.smogBubbles[x].xOffset) > this.width / 2 + this.addLimit + 10 || Math.abs(this.smogBubbles[x].yOffset) > this.height / 2 + this.addLimit/3 + 10) {\r\n                        this.smogBubbles[x].xOffset = p.random((this.width / 2 + this.addLimit) * -1, this.width / 2);\r\n                        this.smogBubbles[x].yOffset = p.random((this.height / 2 + this.addLimit) * -1, this.height / 2);\r\n\r\n                    }\r\n                    if (this.smogBubbles[x].rx < 70 + this.addLimit || this.smogBubbles[x].rx > 150 + this.addLimit) {\r\n                        this.smogBubbles[x].rxVelocity *= -1;\r\n                    }\r\n                    if (this.smogBubbles[x].ry < 70 + this.addLimit || this.smogBubbles[x].ry > 150 + this.addLimit) {\r\n                        this.smogBubbles[x].ryVelocity *= -1;\r\n                    }\r\n\r\n                    this.smogBubbles[x].xOffset += this.smogBubbles[x].xVelocity;\r\n                    this.smogBubbles[x].yOffset += this.smogBubbles[x].yVelocity;\r\n\r\n                    this.smogBubbles[x].rx += this.smogBubbles[x].rxVelocity;\r\n                    this.smogBubbles[x].ry += this.smogBubbles[x].ryVelocity;\r\n\r\n                    this.smogBubbles[x].move()\r\n                }\r\n            }\r\n            if (this.x > p.width + 50) {\r\n                this.x = -50;\r\n            } else if (this.x < -50) {\r\n                this.x = p.width - 100;\r\n            }\r\n            this.x += this.xVelocity;\r\n        };\r\n    }\r\n}\r\n\r\nclass SmogBubble {\r\n    constructor(p, xlimit, ylimit, wMod, hMod) {\r\n        this.opacity = p.random(50, 200);\r\n        this.xVelocity = p.random(0.3, 0.7);\r\n        this.yVelocity = p.random(0.3, 0.7);\r\n        this.xOffset = p.random((xlimit / 2) * -1, xlimit / 2);\r\n        this.yOffset = p.random((ylimit / 2) * -1, ylimit / 2);\r\n        this.rx = p.random(70 + wMod, 150 + wMod);\r\n        this.ry = p.random(70+ hMod, 150 + hMod);\r\n\r\n        this.rxVelocity = p.random(0.1, 0.5);\r\n        this.ryVelocity = p.random(0.1, 0.5);\r\n\r\n        this.size = this.rx\r\n        this.x = 0\r\n        this.y = 0\r\n\r\n    this.display = function (x,y) {\r\n      this.x = x + this.xOffset\r\n      this.y = y + this.yOffset\r\n      p.ellipse(\r\n          x + this.xOffset,\r\n          y + this.yOffset,\r\n          this.rx,\r\n          this.ry\r\n      );\r\n      p.curveVertex(\r\n          x + this.xOffset,\r\n          y + this.yOffset\r\n      );\r\n    }\r\n    this.move = function(){// check if mouse is pressed and within range of bubble\r\n      //console.log(this.size);\r\n      if (p.mouseIsPressed && p.dist(p.mouseX, p.mouseY, this.x, this.y) < this.size / 2 + 20) {\r\n          hoveredSmogData.mouseOver = true;\r\n          hoveredSmog = this;\r\n\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function setupSmogClouds(p, nitrousData, currentDate) {\r\n\r\n    if(!nitrousData) {\r\n        for (let i = 0; i < initial_clouds; i++) {\r\n            smogClouds[i] = new SmogCloud(p, null, null);\r\n        }\r\n    }\r\n    else {\r\n        let currIndex = 33 + ((currentDate.getFullYear() - 2004) * 12) + currentDate.getMonth()\r\n        for(let i = 0; i < nitrousData[0].average / 10; i++) {\r\n            smogClouds[i] = new SmogCloud(p, nitrousData[currIndex], nitrousData[0]);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function drawSmogClouds(p, nitrousData, currentDate) {\r\n\r\n    color = 255 - (currentDate.getFullYear() - 1950) * 2;\r\n\r\n    if (nitrousData) {\r\n\r\n        let currIndex = 33 + ((currentDate.getFullYear() - 2004) * 12) + currentDate.getMonth()\r\n\r\n        if(originalData == null && nitrousData != null) {\r\n            originalData = nitrousData[0];\r\n\r\n        }\r\n\r\n        else if(nitrousData && currIndex > 0 && currIndex < nitrousData.length) {\r\n            let diff = Math.round(((nitrousData[currIndex].average - originalData.average)/10)) - extra_clouds -1;\r\n            //console.log(diff);\r\n\r\n            if(diff > 0) {\r\n                for(let x = 0 ; x < diff; x++) {\r\n                    smogClouds[smogClouds.length] = new SmogCloud(p, nitrousData[currIndex], originalData);\r\n                    extra_clouds++;\r\n                    // console.log(\"Extra cloud created\");\r\n                }\r\n            }\r\n            else if(diff < 0 && extra_clouds > 0) {\r\n                // console.log(\"Diff: \"+diff);\r\n                let slice = smogClouds.length + diff;\r\n                extra_clouds -= (smogClouds.length - slice);\r\n                // console.log(\"Extra clouds: \"+ extra_clouds);\r\n                // console.log(\"Length \"+ smogClouds.length);\r\n                // console.log(\"Slice \" + slice)\r\n                smogClouds = smogClouds.slice(0, slice);\r\n            }\r\n        }\r\n\r\n        if(currIndex >= 0 ) {\r\n          if (currIndex < nitrousData.length){\r\n            //console.log(nitrousData[currIndex]);\r\n            hoveredSmogData.value = nitrousData[currIndex].average\r\n          }\r\n          else {\r\n            hoveredSmogData.value = nitrousData[nitrousData.length-1].average\r\n          }\r\n\r\n            for (var i = 0; i < smogClouds.length; i++) {\r\n              if (!hoveredSmogData.mouseOver) {\r\n\r\n                smogClouds[i].move(p);\r\n              }\r\n              else if (p.dist(p.mouseX, p.mouseY, hoveredSmog.x, hoveredSmog.y) > hoveredSmog.size / 2 + 20) {\r\n                  hoveredSmogData.mouseOver = false;\r\n              }\r\n\r\n                smogClouds[i].display(nitrousData[currIndex]);\r\n            }\r\n        }\r\n        else {\r\n            hoveredSmogData.value = nitrousData[0].average\r\n\r\n            for(var j = 0; j < smogClouds.length; j++) {\r\n              if (!hoveredSmogData.mouseOver) {\r\n\r\n                smogClouds[j].move(p);\r\n              }\r\n              else if (p.dist(p.mouseX, p.mouseY, hoveredSmog.x, hoveredSmog.y) > hoveredSmog.size / 2 + 20) {\r\n                  hoveredSmogData.mouseOver = false;\r\n              }\r\n\r\n                smogClouds[j].display(nitrousData[0]);\r\n            }\r\n        }\r\n    }\r\n}\r\n","//inital background color (38,238,228)\r\n\r\n//2010 background color ((38*.75),(238*.75),(228*.75) this is marked as 25% of final transition\r\n//final background color (15,26,155)\r\nlet END_SKY_r = 15;\r\nlet END_SKY_g = 26;\r\nlet END_SKY_b = 155;\r\n\r\nlet START_SKY_r = 38;\r\nlet START_SKY_g = 238;\r\nlet START_SKY_b = 228;\r\n\r\nexport function drawSky(p, carbonData, currentDate) {\r\n    var currentYear = currentDate.getFullYear();\r\n    //underData\r\n    var yearIdex = currentYear - 1950;\r\n    //constants for changing color\r\n\r\n    var color_2010_r = START_SKY_r * 0.75;\r\n    var color_2010_g = START_SKY_g * 0.75;\r\n    var color_2010_b = START_SKY_b * 0.75;\r\n\r\n    var rGap = (color_2010_r - END_SKY_r) / 70;\r\n    var gGap = (color_2010_g - END_SKY_g) / 70;\r\n    var bGap = (color_2010_b - END_SKY_b) / 70;\r\n\r\n    var rIndex, gIndex, bIndex;\r\n\r\n    if (currentYear <= 2010) {\r\n        // code body moved outside (above) statement block\r\n        rIndex = START_SKY_r - ((rGap * yearIdex) | 0);\r\n        gIndex = START_SKY_g - ((gGap * yearIdex) | 0);\r\n        bIndex = START_SKY_b - ((bGap * yearIdex) | 0);\r\n\r\n        p.background(rIndex, gIndex, bIndex);\r\n    }\r\n\r\n    //first index is 0 =, year 2010, trend 387\r\n    //last index is 3900, year 2020, trend 412\r\n    else if (currentYear !== 2020) {\r\n        //initial colors\r\n        rIndex = START_SKY_r - ((rGap * 60) | 0);\r\n        gIndex = START_SKY_g - ((gGap * 60) | 0);\r\n        bIndex = START_SKY_g - ((bGap * 60) | 0);\r\n\r\n        //find new jump of index\r\n        var rJump = (rIndex - END_SKY_r) / (412 - 387);\r\n        var gJump = (gIndex - END_SKY_g) / (412 - 387);\r\n        var bJump = (bIndex - END_SKY_b) / (412 - 387);\r\n        //there are 10 year in the carbon data\r\n        //get the index gap of carbon data\r\n        var yearGap = 390;\r\n        var monthGap = yearGap / 12;\r\n        var year_index = currentYear - 2010;\r\n        var month_index = currentDate.getMonth() - 1;\r\n\r\n        var current_index = yearGap * year_index + month_index * monthGap;\r\n        current_index = current_index | 0;\r\n\r\n        // var average = 0;\r\n        //console.log(carbonData);\r\n        var carbon = carbonData[current_index].trend - 387;\r\n        rIndex = rIndex - carbon * rJump;\r\n        gIndex = gIndex - carbon * gJump;\r\n        bIndex = bIndex - carbon * bJump;\r\n\r\n        p.background(rIndex, gIndex, bIndex);\r\n    } else {\r\n        p.background(15, 26, 155);\r\n    }\r\n}\r\n","import { black } from \"color-name\";\r\n\r\nexport function drawGuide(p) {\r\n    const maxWidth =\r\n        window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n    const width_ratio = p.windowWidth / maxWidth;\r\n\r\n    const strokeWeight = 5; // font boldness\r\n\r\n    const rightPadding = 80;\r\n    const leftPadding = 80; // check if text box would go beyond window width\r\n    const topPadding = 80;\r\n    const bottomPadding = 150;\r\n\r\n    const textSize = 24 * width_ratio; // scales with window width\r\n    const textBoxWidth = p.width - rightPadding - leftPadding; // scales with window width\r\n    const textBoxHeight = p.height - topPadding - bottomPadding; // scales with window height\r\n\r\n    const fillColor = p.color(255, 255, 255);\r\n\r\n    fillColor.setAlpha(200);\r\n    p.noStroke();\r\n    p.fill(fillColor);\r\n    p.rect(leftPadding, topPadding, textBoxWidth, textBoxHeight);\r\n\r\n    p.noFill();\r\n    p.stroke(black);\r\n    p.strokeWeight(strokeWeight);\r\n    p.rect(leftPadding, topPadding, textBoxWidth, textBoxHeight);\r\n\r\n    p.fill(0);\r\n    p.strokeWeight(0.5);\r\n    p.textAlign(p.LEFT);\r\n\r\n    p.textSize(textSize);\r\n\r\n    createText(\r\n        \"Interact with moving objects on the visualization to display value representation of pollutants corresponding with the current period in time.\" +\r\n            \"\\n\\nAudio: The audio adjusts intervals, detune, partials and effects processing based on the incoming data.\" +\r\n            \"\\n\\nBubbles: The bubbles rising up through the ocean represent methane entering the atmosphere, and increase and decrease in number accordingly.\" +\r\n            \"\\n\\nOcean Color: The color of the ocean is based off ocean pollution data, darkening as levels in the ocean increase.\" +\r\n            \"\\n\\nOcean Level: The sea level rises or descends based off sea level data\" +\r\n            \"\\n\\nMicroplastics: The small white dots drifting downward through the ocean represent microplastics, tiny plastic particulates polluting the oceans. They increase and decrease in number based on microplastic levels in the oceans.\" +\r\n            \"\\n\\nMacroplastics: The large brown and grey shapes on the ocean surface represent macroplastics, larger plastic objects polluting the oceans. They increase and decrease in number based on macroplastic levels in the oceans.\" +\r\n            \"\\n\\nSky Color: The color of the sky is based off carbon dioxide data, darkening as CO2 levels in the atmosphere increase.\" +\r\n            \"\\n\\nSmog: The grey smog clouds increase and decrease in density, size, and number based off of nitrous oxide levels in the atmosphere.\" +\r\n            \"\\n\\nSun Size: The sun increases and decreases in size based on global temperature averages - larger means hotter, smaller means cooler.\"\r\n    );\r\n\r\n    p.noStroke();\r\n\r\n    /**\r\n     * Create wrapped text box\r\n     *\r\n     * @param {*} text Text to create\r\n     * @param {*} yoffset Optional parameter; offset from top to move text, otherwise 0 by default\r\n     */\r\n    function createText(text, yoffset) {\r\n        if (!yoffset) yoffset = 0;\r\n        p.text(\r\n            text,\r\n            leftPadding + strokeWeight, // x-offset\r\n            topPadding + textSize - strokeWeight * 2 + yoffset, // y-offset\r\n            p.width - leftPadding - rightPadding - strokeWeight * 2, // x-wrap\r\n            p.height - bottomPadding - topPadding - strokeWeight * 2\r\n        ); // y-wrap\r\n    }\r\n}\r\n\r\nexport function drawLegend(p, text, value) {\r\n    const maxWidth =\r\n        window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n    const width_ratio = p.windowWidth / maxWidth;\r\n\r\n    const strokeWeight = 5; // font boldness\r\n    const bottomPadding = 3;\r\n    const maxChars = 66;\r\n    const numTextWraps = 1 + Math.ceil(text.length / maxChars); // add 1 for value representation\r\n\r\n    const textSize = 20 * width_ratio; // scales with window width\r\n    const textBoxWidth = 625 * width_ratio; // scales with window width\r\n    const textBoxHeight =\r\n        strokeWeight * numTextWraps + textSize * numTextWraps + bottomPadding; // scales with window height\r\n\r\n    const leftMargin =\r\n        p.mouseX + textBoxWidth + 20 > p.windowWidth ? -textBoxWidth - 20 : 20; // check if text box would go beyond window width\r\n\r\n    const fillColor = p.color(255, 255, 255);\r\n\r\n    const wrappedText = text.replace(\r\n        // wrap text around 66 chars maximum\r\n        /(?![^\\n]{1,66}$)([^\\n]{1,66})\\s/g,\r\n        \"$1\\n\"\r\n    );\r\n\r\n    fillColor.setAlpha(200);\r\n    p.noStroke();\r\n    p.fill(fillColor);\r\n    p.rect(leftMargin + p.mouseX, p.mouseY, textBoxWidth, textBoxHeight);\r\n\r\n    p.noFill();\r\n    p.stroke(black);\r\n    p.strokeWeight(strokeWeight);\r\n    p.rect(leftMargin + p.mouseX, p.mouseY, textBoxWidth, textBoxHeight);\r\n\r\n    p.fill(0);\r\n    p.strokeWeight(0.5);\r\n    p.textAlign(p.LEFT);\r\n\r\n    p.textSize(textSize);\r\n\r\n    if (value) {\r\n        p.text(\r\n            wrappedText,\r\n            leftMargin + strokeWeight + p.mouseX,\r\n            p.mouseY + textSize\r\n        );\r\n        p.text(\r\n            value,\r\n            leftMargin + strokeWeight + p.mouseX,\r\n            p.mouseY + (bottomPadding + textSize) * numTextWraps\r\n        );\r\n    }\r\n\r\n    p.noStroke();\r\n}\r\n","import { setUpSun, drawSun, hoveredSunData, resizeSun } from \"./sun\";\r\nimport { setupLandscape, drawLandscape, drawSeaboard } from \"./landscape\";\r\nimport {\r\n    drawMicroPlasticDots,\r\n    resizeMicroPlastics,\r\n    hoveredMicroPlasticData,\r\n} from \"./microPlastics\";\r\nimport {\r\n    setupMacroPlastics,\r\n    drawMacroPlastics,\r\n    resizeMacroPlastics,\r\n    hoveredMacroPlasticData,\r\n} from \"./macroPlastics\";\r\nimport { setupMethaneBubbles, drawMethaneBubbles } from \"./methaneBubbles\";\r\nimport { setupSmogClouds, drawSmogClouds, hoveredSmogData } from \"./smogClouds\";\r\nimport { drawSky } from \"./skyColor\";\r\nimport { drawLegend, drawGuide } from \"./legend\";\r\nimport { hoveredBubbleData } from \"./methaneBubbles\";\r\n\r\nexport default function sketch(p) {\r\n    const wrapper = document.getElementById(\"page-wrapper\");\r\n\r\n    let showLegend = true;\r\n    let temperatureData = null;\r\n    let microGrowth2050 = null;\r\n    let macroGrowth2050 = null;\r\n    let currentDate = null;\r\n    let carbonData = null;\r\n    let methaneData = null;\r\n    let seaLevelRise = null;\r\n    let nitrousData = null;\r\n\r\n    p.setup = () => {\r\n        p.frameRate(30);\r\n        const canvas = p.createCanvas(wrapper.offsetWidth, window.innerHeight); // adjust to window width and height\r\n        canvas.id(\"p5-canvas\");\r\n        canvas.parent().remove();\r\n        canvas.parent(\"app\");\r\n\r\n        const p5Canvas = document.getElementById(\"p5-canvas\");\r\n        if (p5Canvas) p5Canvas.style.display = \"block\";\r\n\r\n        const guideButton = document.getElementById(\"guide-button\")\r\n        if (guideButton) guideButton.onclick = () => showLegend = !showLegend; // set guide button to show guide and (use noFill)\r\n\r\n        const playAudioButton = document.getElementById(\"play-audio-button\")\r\n        if (playAudioButton) playAudioButton.style.margin = '10px';\r\n\r\n        const slider = document.getElementById(\"slider\")\r\n        if (slider) {\r\n            slider.style.bottom = `-${wrapper.offsetHeight}px`;\r\n            slider.style.visibility = 'visible';\r\n        }\r\n\r\n        setUpSun(p, temperatureData, currentDate);\r\n        setupMethaneBubbles(p, methaneData);\r\n        setupLandscape(p);\r\n        setupSmogClouds(p);\r\n        //setupMicroPlasticDrops(p);\r\n        setupMacroPlastics(p);\r\n    };\r\n\r\n    p.draw = () => {\r\n        p.clear();\r\n        if (carbonData) drawSky(p, carbonData, currentDate);\r\n        if (temperatureData) drawSun(p, temperatureData, currentDate);\r\n        if (temperatureData) drawLandscape(p, currentDate, seaLevelRise, temperatureData);\r\n        if (nitrousData) drawSmogClouds(p, nitrousData, currentDate);\r\n        if (methaneData) drawMethaneBubbles(p, methaneData, currentDate, seaLevelRise);\r\n        drawSeaboard(p);\r\n        drawMicroPlasticDots(p, microGrowth2050, currentDate, seaLevelRise);\r\n        drawMacroPlastics(p, macroGrowth2050, currentDate, seaLevelRise);\r\n\r\n        if (showLegend) {\r\n            p.noFill();\r\n            drawGuide(p);\r\n        }\r\n        else if (hoveredBubbleData.mouseOver) {\r\n            const text =\r\n                \"The bubbles rising up through the ocean represent methane entering the atmosphere, and increase and decrease in number accordingly.\";\r\n            const value = hoveredBubbleData.value\r\n                ? `Value: ${hoveredBubbleData.value} ppb`\r\n                : `[No Value For Current Date]`;\r\n            p.noFill();\r\n            drawLegend(p, text, value);\r\n        } else if (hoveredMacroPlasticData.mouseOver) {\r\n            const text =\r\n                \"The piles or circles on top the ocean represent macroplastic, and increase and decrease in number accordingly.\\n\" +\r\n                (hoveredMacroPlasticData.value\r\n                    ? `Macroplastic value: ${hoveredMacroPlasticData.value} tons\\n`\r\n                    : `[No Value For Current Date]\\n`) +\r\n                \"The white dots or circles falling from top the ocean represent microplastic, and increase and decrease in number accordingly.\\n\" +\r\n                (hoveredMicroPlasticData.value\r\n                    ? `Microplastic value: ${hoveredMicroPlasticData.value} tons`\r\n                    : `[No Value For Current Date]`);\r\n            p.noFill();\r\n            drawLegend(p, text, \" \");\r\n        } else if (hoveredSunData.mouseOver) {\r\n            const text =\r\n                \"The sun and ocean grow and change color with the tempature of the planet.\";\r\n            const value = hoveredSunData.value\r\n                ? `Value: ${hoveredSunData.value} degree C`\r\n                : `[No Value For Current Date]`;\r\n            p.noFill();\r\n            drawLegend(p, text, value);\r\n        } else if (hoveredMicroPlasticData.mouseOver) {\r\n            const text =\r\n                \"The white dots or circles falling from top the ocean represent microplastic, and increase and decrease in number accordingly.\";\r\n            const value = hoveredMicroPlasticData.value\r\n                ? `Value: ${hoveredMicroPlasticData.value} tons`\r\n                : `[No Value For Current Date]`;\r\n            p.noFill();\r\n            drawLegend(p, text, value);\r\n        } else if (hoveredSmogData.mouseOver) {\r\n            const text =\r\n                \"The smog clouds represent the nitrous oxide in the atmosphere.\";\r\n            const value = hoveredSmogData.value\r\n                ? `Value: ${hoveredSmogData.value} ppb`\r\n                : `[No Value For Current Date]`;\r\n            p.noFill();\r\n            drawLegend(p, text, value);\r\n        }\r\n    };\r\n\r\n    p.windowResized = () => {\r\n        p.resizeCanvas(wrapper.offsetWidth, p.windowHeight);\r\n        document.getElementById(\"slider\").style.bottom = `-${wrapper.offsetHeight}px`;\r\n        resizeSun(p);\r\n        resizeMicroPlastics(p);\r\n        resizeMacroPlastics(p);\r\n        p.redraw();\r\n    };\r\n\r\n    p.myCustomRedrawAccordingToNewPropsHandler = (newProps) => {\r\n        temperatureData = newProps.temperatureData;\r\n        currentDate = newProps.currentDate;\r\n        microGrowth2050 = newProps.microGrowth2050;\r\n        macroGrowth2050 = newProps.macroGrowth2050;\r\n        carbonData = newProps.carbonData;\r\n        methaneData = newProps.methaneData;\r\n        seaLevelRise = newProps.seaLevelRise;\r\n        nitrousData = newProps.nitrousData;\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport P5Wrapper from \"react-p5-wrapper\";\r\nimport sketch from \"./sketches/sketch\";\r\n\r\nclass OWVisualization extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.methaneMap = new Map();\r\n    }\r\n\r\n    render() {\r\n        //console.log(this.props);\r\n        return (\r\n            <P5Wrapper\r\n                sketch={sketch}\r\n                temperatureData={this.props.temperatureData}\r\n                currentDate={this.props.currentDate}\r\n                microGrowth2050={this.props.microGrowth2050}\r\n                macroGrowth2050={this.props.macroGrowth2050}\r\n                seaLevelRise={this.props.seaLevelRise}\r\n                carbonData={this.props.carbonData}\r\n                nitrousData={this.props.nitrousData}\r\n                methaneData={{\r\n                    map: this.methaneMap,\r\n                    arr: this.props.methaneData,\r\n                }}\r\n            />\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.methaneData) {\r\n            this.props.methaneData.forEach((e) => {\r\n                // look over methane data\r\n                let yyyy = e.date.substring(0, 4);\r\n                let mm = e.date.substring(5, e.date.length).padStart(2, \"0\");\r\n                let dd = \"01\";\r\n\r\n                let date = `${yyyy}-${mm}-${dd}`;\r\n                this.methaneMap.set(date, e.average); // map date to average\r\n            });\r\n        }\r\n        // console.log(\"Child Mounted\");\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        // console.log(\"New date: \" + this.props.currentDate);\r\n    }\r\n}\r\n\r\nexport default OWVisualization;\r\n","export default __webpack_public_path__ + \"static/media/bubbles.4cef8389.wav\";","import React from \"react\";\r\nimport * as Tone from \"tone\";\r\nimport bubbles from \"./sounds/bubbles.wav\";\r\nimport \"./styles/OWSonification.css\";\r\nclass OWSonification extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n\r\n        //Setting state\r\n        this.state = { \r\n            //Sounds load states\r\n            isLoaded: false,\r\n\r\n            //Effects levels\r\n            distortionLevel: 0,\r\n            reverbLevel: 0,\r\n\r\n            //Frequencies\r\n            trebleFreqs: [523.25, 554.37, 587.33, 622.25, 659.25, 698.46, 739.99, 783.99, 830.61, 880.00, 932.33, 987.77], //C5-B5\r\n            consonantIntervals: [0, 4, 7, 9], //unison, maj third, perf fifth, maj sixth\r\n            dissonantIntervals: [1, 2, 3, 5, 6, 8, 10, 11], //min second, maj second, min third, perf fourth, tritone, min sixth, min seventh, maj seventh\r\n            consonanceProbability: 100,\r\n\r\n            //Synth parameters\r\n            fatSpread: 0,\r\n            fatDetune: 0,\r\n            amHarm: 0,\r\n\r\n            //All audio on/off\r\n            audioState: false,\r\n\r\n            //Audio layer solo states\r\n            playbackState: false,\r\n            fatOscState: false,\r\n            amOscState: false,\r\n\r\n            //Updating\r\n            updateCount: 0,\r\n            dataUpdateCount: 0,\r\n\r\n            chromeFlag: 0\r\n        };\r\n\r\n        //Binding functions\r\n        this.initialize = this.initialize.bind(this);\r\n        this.startAudio = this.startAudio.bind(this);\r\n        this.getNewData = this.getNewData.bind(this);\r\n        this.recordAudio = this.recordAudio.bind(this);\r\n    }\r\n\r\n    initialize() {\r\n        //set state and start Tone\r\n        this.getNewData();\r\n        Tone.start();\r\n        Tone.Transport.start();\r\n\r\n        //set volume\r\n        this.player.volume.value = -100;\r\n        this.fatOsc.volume.value = -100;\r\n        this.am.volume.value = -100;\r\n\r\n        //set effects\r\n        this.dist.wet.rampTo(0);\r\n        this.dist.distortion = 0;\r\n        this.rev.decay = 12;\r\n\r\n        //set frequency\r\n        this.fatOsc.frequency.rampTo(65.41);\r\n        this.am.frequency.rampTo(this.state.trebleFreqs[0]);\r\n        this.am.partialCount = 1;\r\n\r\n    }\r\n\r\n    getNewData() {\r\n        //get current date\r\n        var currDate = this.props.currentDate.getFullYear();\r\n\r\n        //index: TEMPERATURE\r\n        if (this.props.temperatureData) {\r\n            var index = ((currDate - 1880) * this.props.temperatureData.length) / 140 - 100;\r\n            index = Math.round(index);\r\n\r\n            //map from -1 - 1 to 0 - 400 using (value - x1) * (y2 - x2) / (y1 - x1) + x2\r\n            var spread = (this.props.temperatureData[index].station + 1) * (400 - 0) / (1 + 1);\r\n            this.setState({ fatSpread: spread });\r\n        }\r\n\r\n        if (this.props.microGrowth2050 && this.props.macroGrowth2050) {\r\n            //index: MICROPLASTICS\r\n            index = currDate - 1950;\r\n\r\n            //map from 350 to 250 to 100 to 0 using same formula as above\r\n            var cp = (this.props.microGrowth2050[index][1] - 350) * (0 - 100) / (250 - 350) + 100;\r\n            this.setState({ consonanceProbability: cp });        \r\n\r\n            //index: MACROPLASTICS\r\n            index = currDate - 1950;\r\n\r\n            //map from 400 to 200 to 0 to 30 using same formula as above\r\n            var aH = Math.floor((this.props.macroGrowth2050[index][1] - 400) * (30 - 0) / (200 - 400) + 0);\r\n            this.setState({ amHarm: aH });\r\n        }\r\n\r\n        if (this.props.carbonData) {\r\n            //index: CARBON\r\n            // var yearGap = 390;\r\n            // var monthGap = yearGap / 12;\r\n            // var year_index = currDate - 2010;\r\n            // var month_index = this.props.currentDate.getMonth() - 1;\r\n\r\n            // var current_index = yearGap * year_index + month_index * monthGap;\r\n            // current_index = current_index | 0;\r\n\r\n            //map from 387 to 413 to 0.0 to 1.0 using same formula as above\r\n            var distLevel = (this.props.carbonData[currDate - 1880].trend - 387) / (413 - 387);\r\n            this.setState({ distortionLevel: distLevel });\r\n        }\r\n\r\n        if (this.props.seaLevelRise) {\r\n            //index: SEA LEVEL\r\n            index = currDate - 1880;\r\n\r\n            //map from 0 to 9 to 0 to 1100 using same formula as above\r\n            var detune = 0;\r\n\r\n            if (index < 0) {\r\n                detune = 0;\r\n            }\r\n\r\n            if (currDate > 2013) {\r\n                detune = this.props.seaLevelRise[(2013 - 1880)][1] * 1100 / 9;\r\n            }\r\n            else {\r\n                detune = this.props.seaLevelRise[index][1] * 1100 / 9;\r\n            }\r\n            this.setState({ fatDetune: detune });\r\n        }\r\n    }\r\n\r\n    startAudio() {\r\n        this.getNewData();\r\n        this.rev.decay = 12;\r\n\r\n        Tone.Transport.scheduleRepeat((time) => {\r\n            //Refresh data\r\n            this.getNewData();\r\n\r\n            //Microplastics: Consonance probability\r\n            var rand = Math.random() * 100; //get random number between 0 and 100\r\n\r\n            var intervalIndex = 0;\r\n\r\n            if (rand < this.state.consonanceProbability) {\r\n                intervalIndex = Math.floor(Math.random() * 4);\r\n                // console.log(\"Consonant!\");\r\n                this.am.frequency.rampTo(this.state.trebleFreqs[this.state.consonantIntervals[intervalIndex]]);\r\n            }\r\n            else {\r\n                intervalIndex = Math.floor(Math.random() * 8);\r\n                // console.log(\"Dissonant!\");\r\n                this.am.frequency.rampTo(this.state.trebleFreqs[this.state.dissonantIntervals[intervalIndex]]);\r\n            }\r\n\r\n            //Macroplastics: AM harmonicity\r\n            this.am.partialCount = this.state.amHarm;\r\n\r\n            //Temperature: Fat osc spread\r\n            this.fatOsc.spread = this.state.fatSpread;\r\n\r\n            //Sea level rise: Fat osc detune\r\n            this.fatOsc.detune.setValueAtTime(this.state.fatDetune, Tone.now());\r\n\r\n            //Carbon: Distortion level\r\n            this.dist.distortion = this.state.distortionLevel;\r\n            this.dist.wet.rampTo(this.state.distortionLevel);\r\n            this.rev.wet.rampTo(1 - this.state.distortionLevel);\r\n        }, \"1.5hz\", Tone.now());\r\n\r\n        if (this.state.audioState === false) {\r\n            this.player.start(Tone.now());\r\n            this.fatOsc.start(Tone.now());\r\n            this.am.start(Tone.now());\r\n\r\n            this.player.volume.rampTo(-16);\r\n            this.fatOsc.volume.rampTo(-32);\r\n            this.am.volume.rampTo(-40);\r\n            this.setState({ audioState: true });\r\n        }\r\n        else if (this.state.audioState === true) {\r\n            this.player.volume.rampTo(-100);\r\n            this.fatOsc.volume.rampTo(-100);\r\n            this.am.volume.rampTo(-100);\r\n\r\n            this.player.stop(Tone.now());\r\n            this.fatOsc.stop(Tone.now());\r\n            this.am.stop(Tone.now());\r\n\r\n            this.setState({ audioState: false });\r\n        }\r\n    }\r\n\r\n    recordAudio() {\r\n        this.rec.start();\r\n\r\n        setTimeout(async () => {\r\n            const recording = await this.rec.stop();\r\n            const url = URL.createObjectURL(recording);\r\n            const anchor = document.createElement(\"a\");\r\n            anchor.download = \"recording.webm\";\r\n            anchor.href = url;\r\n            anchor.click();\r\n        }, 20000);\r\n    }\r\n\r\n    render() {\r\n        const { isLoaded } = this.state;\r\n        // console.log(this.state);\r\n\r\n        return (\r\n            <div className=\"OWSonification\" >\r\n            <button id=\"guide-button\">\r\n            show/hide guide\r\n            </button>\r\n            <button id=\"play-audio-button\" disabled={!isLoaded} onClick={this.startAudio}>\r\n            audio on/off\r\n            </button>\r\n            <button id=\"record-audio-button\" disabled={this.state.chromeFlag === 0} onClick={this.recordAudio}>\r\n            record audio\r\n            </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if (window !== null && Reflect.has(window, \"MediaRecorder\")) {\r\n            // console.log(\"Recorder available!\");\r\n            this.rec = new Tone.Recorder();\r\n            Tone.Destination.connect(this.rec);\r\n            this.setState({ chromeFlag: 1 });\r\n        }\r\n\r\n        //Effects\r\n        this.dist = new Tone.Distortion(0).toDestination();\r\n\r\n        this.rev = new Tone.Reverb(1).toDestination();\r\n\r\n        //Sound sources\r\n        this.buffer = new Tone.ToneAudioBuffer();\r\n        //this.buffer.debug = true;\r\n        this.buffer.load(bubbles);\r\n\r\n        this.player = new Tone.Player(this.buffer, () => {\r\n            // console.log(\"Player ready!\");\r\n            this.setState({ isLoaded: true });\r\n            this.player.loop = true;\r\n            this.initialize();\r\n        }).chain(this.dist, this.rev, Tone.Destination);\r\n\r\n        this.fatOsc = new Tone.FatOscillator(\"C3\", \"sawtooth\", 40).chain(this.dist, this.rev, Tone.Destination);\r\n\r\n        this.am = new Tone.AMOscillator(\"E3\", \"square\", \"sine\").chain(this.dist, this.rev, Tone.Destination);\r\n\r\n        this.fm = new Tone.FMOscillator(\"G3\", \"sine\", \"square\").chain(this.dist, this.rev, Tone.Destination);\r\n\r\n        // console.log(\"Mounted!\");\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        // console.log(\"OWSonification Updated\");\r\n    }\r\n}\r\n\r\nexport default OWSonification\r\n\r\n","import React, { Component } from \"react\";\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <section id=\"banner\">\r\n                <div className=\"inner\">\r\n                    <h2>Envirovision</h2>\r\n                    <p>\r\n                        An artistic data-driven rendition of climate change over the past several decades through data sonification and visualization\r\n                    </p>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Contents extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<section id=\"wrapper\">\r\n\t\t\t\t<section id=\"one\" className=\"wrapper spotlight style1\">\r\n\t\t\t\t\t<div className=\"inner\">\r\n\t\t\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t\t\t<h2 className=\"major\">Artist Statement</h2>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\tOver the years, harmful pollutants have been\r\n\t\t\t\t\t\t\t\texposed to our environment, particularly in\r\n\t\t\t\t\t\t\t\trecent times, causing worrisome ripples and\r\n\t\t\t\t\t\t\t\tconcerns for the future of our natural world. We\r\n\t\t\t\t\t\t\t\thave some degree of awareness concerning growing\r\n\t\t\t\t\t\t\t\tlevels of pollution in our atmosphere and\r\n\t\t\t\t\t\t\t\toceans, but visually perceiving the impact of\r\n\t\t\t\t\t\t\t\tpollutants in the environment is not an easy\r\n\t\t\t\t\t\t\t\ttask. This challenge may be due to difficulty\r\n\t\t\t\t\t\t\t\tfor untrained eyes measuring increasing levels\r\n\t\t\t\t\t\t\t\tof pollutants in our environment on the basis of\r\n\t\t\t\t\t\t\t\tnumbers alone.\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\tOur ambition was to create a 2D dynamic webpage\r\n\t\t\t\t\t\t\t\twhere sonifications and visualizations based on\r\n\t\t\t\t\t\t\t\tlive data are reflected in the objects present\r\n\t\t\t\t\t\t\t\ton the screen that user can engage with. These\r\n\t\t\t\t\t\t\t\tobjects are auditory and kinetic representations\r\n\t\t\t\t\t\t\t\tof changing climate and pollution levels over\r\n\t\t\t\t\t\t\t\ttime for global ocean and weather data. By\r\n\t\t\t\t\t\t\t\tpresenting sonifications and visualizations of\r\n\t\t\t\t\t\t\t\tthe effects climate change and pollutants have\r\n\t\t\t\t\t\t\t\tand how those effects will accelerate in their\r\n\t\t\t\t\t\t\t\tseverity, we want to encourage creators and\r\n\t\t\t\t\t\t\t\tusers alike to be more environmentally conscious\r\n\t\t\t\t\t\t\t\tand inspire change that would contribute to a\r\n\t\t\t\t\t\t\t\tcleaner and healthier Earth.\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</section>\r\n\r\n\t\t\t\t<section id=\"two\" className=\"wrapper alt spotlight style2\">\r\n\t\t\t\t\t<div className=\"inner\">\r\n\t\t\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t\t\t<h2 className=\"major\">Data</h2>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\tWe used carbon dioxide, methane, nitrous oxide\r\n\t\t\t\t\t\t\t\tand average global temperature derived\r\n\t\t\t\t\t\t\t\tfrom&nbsp;\r\n\t\t\t\t\t\t\t\t<a href=\"https://global-warming.org\">\r\n\t\t\t\t\t\t\t\t\tglobal-warming.org\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t. We used this to change sun size and color,\r\n\t\t\t\t\t\t\t\tsize of clouds and the color of the sea and sky\r\n\t\t\t\t\t\t\t\tas well as the audio. We demonstrate sea level\r\n\t\t\t\t\t\t\t\tto rise with data acquired from the EPA, and\r\n\t\t\t\t\t\t\t\tmicro/macro plastic data from&nbsp;\r\n\t\t\t\t\t\t\t\t<a href=\"https://ourworldindata.org\">\r\n\t\t\t\t\t\t\t\t\tourworldindata.org\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t.\r\n\t\t\t\t\t\t\t</p>\r\n                            <p>\r\n                            <p>\r\n\t\t\t\t\t\t\t\tAdditionally, it is very seldom that people hear\r\n\t\t\t\t\t\t\t\tdata as well; certain auditory data is normal,\r\n\t\t\t\t\t\t\t\tsuch as the beeping of a heartbeat monitor in a\r\n\t\t\t\t\t\t\t\thospital or an old clock bell tolling to tell\r\n\t\t\t\t\t\t\t\tthe hour, but rarely is it presented in a\r\n\t\t\t\t\t\t\t\tsimilar fashion as data visuals are. In this\r\n\t\t\t\t\t\t\t\tproject, we added an optional audio component\r\n\t\t\t\t\t\t\t\tthat uses the same data that is being used to\r\n\t\t\t\t\t\t\t\tdetermine the visuals, and translates it into\r\n\t\t\t\t\t\t\t\tsound. The detune spread of the bass sound's\r\n\t\t\t\t\t\t\t\tmultiple oscillators is controlled by the\r\n\t\t\t\t\t\t\t\ttemperature, the overall bass detune is\r\n\t\t\t\t\t\t\t\tcontrolled by the sea level, the probability of\r\n\t\t\t\t\t\t\t\ta consonant vs dissonant interval as defined by\r\n\t\t\t\t\t\t\t\tmedieval counterpoint rules is controlled by the\r\n\t\t\t\t\t\t\t\tmicroplastic level, the number of partials of\r\n\t\t\t\t\t\t\t\tthe treble synthesizer is controlled by the\r\n\t\t\t\t\t\t\t\tmacro plastic levels, and distortion and reverb\r\n\t\t\t\t\t\t\t\teffects are inversely controlled by the carbon\r\n\t\t\t\t\t\t\t\tlevels.\r\n\t\t\t\t\t\t\t</p>\r\n                            </p>\r\n\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\thref={\"index.html\"}\r\n\t\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t\tdocument\r\n\t\t\t\t\t\t\t\t\t\t.getElementById(\"p5-canvas\")\r\n\t\t\t\t\t\t\t\t\t\t.scrollIntoView({\r\n\t\t\t\t\t\t\t\t\t\t\tbehavior: \"smooth\",\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tclassName=\"special\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tClick to scroll to our content\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</section>\r\n\r\n\t\t\t\t{/* <section id=\"three\" className=\"wrapper spotlight style3\">\r\n\t\t\t\t\t<div className=\"inner\">\r\n\t\t\t\t\t\t<a href=\"index.html\" className=\"image\">\r\n\t\t\t\t\t\t\t<img src={`${process.env.PUBLIC_URL}/images/pic03.jpg`} alt=\"\" />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t\t\t<h2 className=\"major\">Nullam dignissim</h2>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\tLorem ipsum dolor sit amet, etiam lorem\r\n\t\t\t\t\t\t\t\tadipiscing elit. Cras turpis ante, nullam sit\r\n\t\t\t\t\t\t\t\tamet turpis non, sollicitudin posuere urna.\r\n\t\t\t\t\t\t\t\tMauris id tellus arcu. Nunc vehicula id nulla\r\n\t\t\t\t\t\t\t\tdignissim dapibus. Nullam ultrices, neque et\r\n\t\t\t\t\t\t\t\tfaucibus viverra, ex nulla cursus.\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<a href=\"index.html\" className=\"special\">\r\n\t\t\t\t\t\t\t\tLearn more\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</section> */}\r\n\t\t\t</section>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Contents;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Footer extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<section id=\"footer\">\r\n\t\t\t\t<div className=\"inner\">\r\n                    <h2 className=\"major\">Meet The Artists</h2>\r\n                    <p>\r\n                        Got questions or comments? Contact us! We are Computer Science students at Virginia Tech studying creative computing with an aim to make positive impacts on the world.\r\n                    </p>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6 col-12-medium\">\r\n                            <p>\r\n                                <b>Rachel Hachem:</b> Data Sonification, Digital Media\r\n                                <ul className=\"contact\">\r\n                                    <li className=\"icon solid fa-envelope\">\r\n                                        <a href=\"mailto:rachelly@vt.edu\">rachelly@vt.edu</a>\r\n                                    </li>\r\n                                </ul>\r\n                            </p>\r\n                            <p>\r\n                                <b>Quinn Eggleston:</b> Data Visualization, Library\r\n                                Management\r\n                                <ul className=\"contact\">\r\n                                    <li className=\"icon solid fa-envelope\">\r\n                                        <a href=\"mailto:qdeggles@vt.edu\">qdeggles@vt.edu</a>\r\n                                    </li>\r\n                                </ul>\r\n                            </p>\r\n                        </div>\r\n                        <div class=\"col-6 col-12-medium\">\r\n                            <p>\r\n                                <b>Samie Amriui:</b> Data Visualization, Website Content\r\n                                <ul className=\"contact\">\r\n                                    <li className=\"icon solid fa-envelope\">\r\n                                        <a href=\"mailto:samriui@outlook.com\">samriui@outlook.com</a>\r\n                                    </li>\r\n                                </ul>\r\n                            </p>\r\n                            <p>\r\n                                <b>Tim Kueny:</b> Data Visualization, Data Processing\r\n                                <ul className=\"contact\">\r\n                                    <li className=\"icon solid fa-envelope\">\r\n                                        <a href=\"mailto:kuenytc5@vt.edu\">kuenytc5@vt.edu</a>\r\n                                    </li>\r\n                                </ul>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport \"./styles/App.css\";\r\nimport OWVisualization from \"./OWVisualization\"; // import both children\r\nimport OWSonification from \"./OWSonification\";\r\nimport axios from \"axios\"; // used for API stuff\r\n\r\nimport macroGrowth2050 from \"./data/plastic_pollution/macroGrowth2050.json\";\r\nimport microGrowth2050 from \"./data/plastic_pollution/microGrowth2050.json\";\r\nimport seaLevelRise from \"./data/seaLevelRise/seaLevelRise.json\";\r\nimport nitrousData from \"./data/nitrous.json\";\r\nimport methaneData from \"./data/methane.json\";\r\nimport carbonData from \"./data/carbon.json\";\r\nimport temperatureData from \"./data/temperature.json\";\r\n\r\nimport * as d3 from \"d3\";\r\nimport Header from \"./components/Header\";\r\nimport Contents from \"./components/Contents\";\r\n// import Features from \"./components/Features\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nclass App extends React.Component {\r\n    // you can create class-scope fields in here like in Java\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            // you can add new states here\r\n            carbonData: null,\r\n            methaneData: null,\r\n            nitrousData: null,\r\n            temperatureData: null,\r\n\r\n            //get plastic and repeat for others\r\n            macroGrowth2050: macroGrowth2050.macroGrowth2050,\r\n            microGrowth2050: microGrowth2050.microGrowth2050,\r\n\r\n            //sea seaLevelRise\r\n            seaLevelRise: seaLevelRise.seaLevelRise,\r\n\r\n            currentDate: new Date(\"1950-11-01\"), // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\r\n            dataIsLoaded: false,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"app\" className=\"app-container\">\r\n                <div id=\"page-wrapper\">\r\n                    <Header />\r\n                    <Contents />\r\n                    {/* <Features /> */}\r\n                    <Footer />\r\n                </div>\r\n\r\n                <OWVisualization\r\n                    currentDate={this.state.currentDate}\r\n                    temperatureData={this.state.temperatureData} // need to pass data into children via props\r\n                    microGrowth2050={this.state.microGrowth2050}\r\n                    macroGrowth2050={this.state.macroGrowth2050}\r\n                    carbonData={this.state.carbonData}\r\n                    methaneData={this.state.methaneData}\r\n                    seaLevelRise={this.state.seaLevelRise}\r\n                    nitrousData={this.state.nitrousData}\r\n                />\r\n                <OWSonification\r\n                    currentDate={this.state.currentDate}\r\n                    temperatureData={this.state.temperatureData}\r\n                    microGrowth2050={this.state.microGrowth2050}\r\n                    macroGrowth2050={this.state.macroGrowth2050}\r\n                    carbonData={this.state.carbonData}\r\n                    methaneData={this.state.methaneData}\r\n                    seaLevelRise={this.state.seaLevelRise}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this is called when the page is initially loaded/mounted\r\n        // console.log(\"Parent Mounted\");\r\n        this.loadData(); // comment this out if using static files; loadData() will make API requests\r\n        this.createSlider(d3.select(\".app-container\"));\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        // when re-render occurs, componentDidUpdate() is called\r\n        // console.log(\"Parent Updated\");\r\n    }\r\n\r\n    loadData() {\r\n        const fetchData = async () => {\r\n            const proxyurl = \"https://cors-anywhere.herokuapp.com/\"; // proxy url that is used in combination with real url\r\n\r\n            let promises = []; // make an array of promises\r\n            this.props.urls.split(\",\").forEach(function (url) {\r\n                promises.push(axios(proxyurl + url)); // push request onto promise array\r\n            });\r\n\r\n            // order of promises is retained; reference: https://stackoverflow.com/questions/28066429/promise-all-order-of-resolved-values/28066851\r\n            await Promise.all(promises)\r\n                .then((result) => {\r\n                    // console.log(\"Request successful\");\r\n                    this.state.carbonData = result[0].data.co2; // directly modifying the state like this does NOT force re-render\r\n                    this.state.methaneData = result[1].data.methane;\r\n                    this.state.nitrousData = result[2].data.nitrous;\r\n                    this.state.temperatureData = result[3].data.result;\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                    console.log(\"Switching to static files\");\r\n                    this.state.carbonData = carbonData.co2;\r\n                    this.state.methaneData = methaneData.methane;\r\n                    this.state.nitrousData = nitrousData.nitrous;\r\n                    this.state.temperatureData = temperatureData.result;\r\n                });\r\n\r\n\r\n            this.setState({ dataIsLoaded: true }); // calling this.setState(...) forces re-render\r\n        };\r\n        fetchData();\r\n    }\r\n\r\n    createSlider(element) {\r\n        // parameter is the app-container svg body\r\n        const self = this; // reference constructor\r\n\r\n        let formatDateIntoYear = d3.timeFormat(\"%Y\");\r\n        let formatDate = d3.timeFormat(\"%d %B %Y\"); // DD MM YY https://github.com/d3/d3-time-format\r\n\r\n        let startDate = new Date(\"1950-11-01\"); // subject to change\r\n        let endDate = new Date(); // subject to change (no params = current date)\r\n\r\n        let margin = { top: 50, right: 50, bottom: 0, left: 75 };\r\n        let width = window.innerWidth; // - margin.left - margin.right;\r\n\r\n        let timer = 0;\r\n        let currentValue = 0;\r\n        let targetValue = width - 50;\r\n\r\n        let sliderRange = element // appends svg on top of .App svg\r\n            .append(\"div\")\r\n            .classed(\"slider-svg\", true) // container class to make iresponsive\r\n            .attr(\"id\", \"slider\");\r\n\r\n        let gRange = sliderRange // gRange is the svg body that will be made responsive\r\n            .append(\"svg\") // append the responsive svg container\r\n            .attr(\"preserveAspectRatio\", \"xMinYMin meet\") // responsive svg container needs to preserve aspect ratio for responsiveness\r\n            .attr(\"viewBox\", `0 0 ${window.innerWidth + margin.left * 2} 200`) // set aspect ratio for slider svg body\r\n            // it seems that ADDING margin would actually shrink the slider svg body\r\n            .append(\"g\") // overlay the slider svg body; now gRange reflects the slider body\r\n            .attr(\"transform\", \"translate(\" + margin.left + \", 100)\"); // shift slider to right and down\r\n        // .classed(\"class\", \"slider\") // apply slider css properties\r\n\r\n        gRange // we want to add a foreign object embodied in a html element\r\n            .append(\"foreignObject\") // append the foreign object then set coordinates relative to slider svg body\r\n            .attr(\"x\", 20)\r\n            .attr(\"y\", 40)\r\n            .attr(\"width\", 200) // set width and height of the play button\r\n            .attr(\"height\", 60)\r\n            .html(function (d) {\r\n                // this is the html element we want to append\r\n                return '<button id=\"play-button\">Play</button>';\r\n            });\r\n\r\n        let playButton = d3.select(\"#play-button\"); // get the play button svg\r\n\r\n        playButton.on(\"click\", function () {\r\n            // set the play button's behavior\r\n            let button = d3.select(this); // note that 'this' references the play button svg\r\n            if (button.text() === \"Pause\") {\r\n                // if paused, clear interval and change text to 'play'\r\n                clearInterval(timer);\r\n                button.text(\"Play\");\r\n            } else {\r\n                // otherwise set behavior for the play button\r\n                timer = setInterval(function () {\r\n                    // play interval asynchronously\r\n                    update(x.invert(currentValue)); // update handle position and adjust current value tick jumps\r\n                    currentValue = currentValue + targetValue / 151;\r\n                    if (currentValue > targetValue) {\r\n                        // if at end of range, clear interval and change text to 'play'\r\n                        clearInterval(timer); // this will stop the asynchronous interval\r\n                        playButton.text(\"Play\");\r\n                    }\r\n                    self.setState({ currentDate: x.invert(currentValue) }); // ref parent constructor and communicate with child\r\n                }, 200); // loops for about 20 seconds going from month to month (or longer)\r\n                button.text(\"Pause\"); // when play button is selected, change text to 'pause'\r\n            }\r\n        });\r\n\r\n        let x = d3\r\n            .scaleTime() // ref: https://observablehq.com/@d3/d3-scaletime\r\n            .domain([startDate, endDate]) // use timescale domain between start and end dates\r\n            .range([0, targetValue]) // define range of slider being from beginning to end of its range\r\n            .clamp(true); // ensure that handle does not escape range\r\n\r\n        gRange\r\n            .append(\"line\")\r\n            .attr(\"class\", \"track\") // apply track css properties within slider svg body\r\n            .attr(\"x1\", x.range()[0])\r\n            .attr(\"x2\", x.range()[1])\r\n            .select(function () {\r\n                return this.parentNode.appendChild(this.cloneNode(true)); // not sure what this is yet\r\n            })\r\n            .attr(\"class\", \"track-inset\") // apply track-inset css properties within slider svg body\r\n            .select(function () {\r\n                return this.parentNode.appendChild(this.cloneNode(true));\r\n            })\r\n            .attr(\"class\", \"track-overlay\") // apply track-overlay css properties within slider svg body\r\n            .call(\r\n                d3\r\n                    .drag() // dragging behavior\r\n                    .on(\"start.interrupt\", function () {\r\n                        // handle interrupts\r\n                        gRange.interrupt();\r\n                    })\r\n                    .on(\"start drag\", function (event) {\r\n                        // while hande is dragged, store current value and update handle location\r\n                        currentValue = event.x;\r\n                        update(x.invert(currentValue));\r\n                    })\r\n                    .on(\"end\", function (event) {\r\n                        // when handle is released, use the last recorded current value\r\n                        self.setState({ currentDate: x.invert(currentValue) });\r\n                    })\r\n            );\r\n\r\n        let handle = gRange\r\n            .insert(\"circle\", \".track-overlay\") // inserts the track\r\n            .attr(\"class\", \"handle\") // apply handle css properties to track within slider svg body\r\n            .attr(\"r\", 9); // set radius of handle\r\n\r\n        let label = gRange\r\n            .append(\"text\") // append text onto slider which will be our tick representations\r\n            .attr(\"class\", \"label\") // apply label css properties\r\n            .attr(\"text-anchor\", \"middle\") // anchor text to middle\r\n            .attr(\"font-family\", 'Raleway, Helvetica, sans-serif')\r\n            .attr(\"font-weight\", \"700\")\r\n            .attr(\"fill\", \"rgba(0, 0, 0, 0.750)\")\r\n            .text(formatDate(startDate)) // display currently selected date in text\r\n            .attr(\"transform\", \"translate(0,\" + -25 + \")\"); // shift text to left\r\n\r\n        document.addEventListener(\"keydown\", function (event) {\r\n            // listen for keypresses\r\n            switch (\r\n                event.key // we are only concerned about left/right arrow keys\r\n            ) {\r\n                case \"ArrowLeft\":\r\n                    currentValue = // ensure handle does not decrement below zero\r\n                        currentValue === 0 ? currentValue : currentValue - 1;\r\n                    update(x.invert(currentValue)); // shift handle one tick to left\r\n                    break;\r\n                case \"ArrowRight\":\r\n                    currentValue++; // increment current value\r\n                    update(x.invert(currentValue)); // shift handle one tick to right\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n\r\n        gRange\r\n            .insert(\"g\", \".track-overlay\") // create the track overlay\r\n            .attr(\"class\", \"ticks\") // apply ticks css properties within slider svg body\r\n            .attr(\"transform\", \"translate(0,\" + 18 + \")\") // shift to right\r\n            .selectAll(\"text\") // apply following changes to all text on slider (ticks)\r\n            .data(x.ticks(10)) // ref: https://observablehq.com/@d3/d3-scaletime\r\n            .enter() // ref: https://observablehq.com/@dnarvaez27/understanding-enter-exit-merge-key-function\r\n            .append(\"text\") // append text representing ticks then set its coordinates (x-coordinate is variable, y-coordinate is fixed)\r\n            .attr(\"x\", x)\r\n            .attr(\"y\", 10)\r\n            .attr(\"text-anchor\", \"middle\") // center text on tick\r\n            .attr(\"font-family\", 'Raleway, Helvetica, sans-serif')\r\n            .attr(\"font-weight\", \"700\")\r\n            .attr(\"fill\", \"rgba(0, 0, 0, 0.750)\")\r\n            .attr(\"class\", \"track-text\")\r\n            .text((d) => formatDateIntoYear(d)); // write formatted date as text\r\n\r\n        function update(h) {\r\n            // update position and text of label according to slider scale\r\n            handle.attr(\"cx\", x(h)); // update handle position\r\n            label // update tick label position and tick label content to new date\r\n                .attr(\"x\", x(h))\r\n                .text(formatDate(h));\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n// there is probably a way better way to do this, but new urls are added to end of the urls csv string\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App\r\n            urls={\"https://global-warming.org/api/co2-api,https://global-warming.org/api/methane-api,https://global-warming.org/api/nitrous-oxide-api,https://global-warming.org/api/temperature-api\"}\r\n        />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}