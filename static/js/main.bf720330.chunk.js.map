{"version":3,"sources":["sketches/sun.js","sketches/landscape.js","sketches/macroPlastics.js","sketches/microPlastics.js","sketches/methaneBubbles.js","sketches/smogClouds.js","sketches/legend.js","sketches/sketch.js","sketches/skyColor.js","OWVisualization.js","OWSonification.js","App.js","serviceWorker.js","index.js","sounds/bubbles.wav"],"names":["hoveredSunData","mouseOver","value","currentY_value","hoveredSun","sunObject","Sun","p","this","x","width","y","height","size","display","currentDate","temperatureData","color","startColor","endColor","index","getFullYear","length","i","Math","round","average","count","parseFloat","station","rGap","r","gGap","g","bGap","b","rIndex","gIndex","bIndex","changeSunColor","fill","ellipse","move","mouseIsPressed","dist","mouseX","mouseY","drawSun","current_date","calcSun","createSun","toFixed","noiseY","cloud_ellipses","rx","ry","clouds","newHeight","drawLandscape","seaLevelRise","currentYear","drawClouds","calcWaveColor","createWave","drawWaves","noStroke","offsetY","rgb","dim","noFill","stroke","strokeWeight","beginShape","curveVertex","map","noise","frameCount","endShape","LINES","Cloud","key","CLOSE","macro_plastic","hoveredMacroPlasticData","hoveredMacroPlastic","GarbagePile","moreHeight","bubbleHeight","xVelocity","random","garbageBubbles","opacity","rcolor","gcolor","bcolor","GarbageBubble","garbageColor","setAlpha","abs","yOffset","yVelocity","rxVelocity","ryVelocity","xOffset","xlimit","ylimit","drops","hoveredMicroPlasticData","Drop","START_HEIGHT","speed","gravity","hoveredBubbleData","bubbles","hoveredBubble","Bubble","xstart","yspeed","degree","cos","radians","setSpeed","new_speed","smogClouds","originalData","extra_clouds","hoveredSmogData","hoveredSmog","SmogCloud","todayData","initial","diff","oldData","undefined","smogBubbles","addlimit","SmogBubble","cloudColor","addLimit","wMod","hMod","drawLegend","text","maxWidth","window","screen","availWidth","outerWidth","innerWidth","width_ratio","windowWidth","numTextWraps","ceil","textSize","textBoxWidth","textBoxHeight","leftMargin","fillColor","wrappedText","replace","rect","black","textAlign","LEFT","sketch","showLegend","microGrowth2050","macroGrowth2050","carbonData","methaneData","nitrousData","showGuide","setup","frameRate","createCanvas","windowHeight","document","getElementById","style","setupLandscape","setUpSun","currIndex","getMonth","setupSmogClouds","setupMethaneBubbles","setupMicroPlasticDrops","setupMacroPlastics","button","createButton","position","mousePressed","draw","clear","yearIdex","background","rJump","START_SKY_r","gJump","START_SKY_g","bJump","current_index","yearGap","carbon","trend","drawSky","console","log","slice","j","drawSmogClouds","yyyy","Intl","DateTimeFormat","year","format","mm","month","date","startingValue","arr","startingDate","get","currentValue","ratio","newNumBubbles","parseInt","splice","startingYear","toString","new_yyyy","substring","new_mm","padStart","Date","drawMethaneBubbles","drawSeaboard","update","show","num","newSize","drawMicroPlasticDots","drawMacroPlastics","createText","yoffset","leftPadding","drawGuide","windowResized","resizeCanvas","redraw","myCustomRedrawAccordingToNewPropsHandler","newProps","mouseClicked","OWVisualization","props","methaneMap","Map","forEach","e","set","error","prevProps","prevState","snapshot","React","Component","OWSonification","state","isLoaded","distortionLevel","reverbLevel","trebleFreqs","consonantIntervals","dissonantIntervals","consonanceProbability","fatSpread","fatDetune","amHarm","audioState","playbackState","fatOscState","amOscState","updateCount","dataUpdateCount","chromeFlag","initialize","bind","startAudio","getNewData","recordAudio","Tone","start","player","volume","fatOsc","am","wet","rampTo","distortion","frequency","currDate","spread","setState","cp","aH","distLevel","detune","rev","decay","scheduleRepeat","time","intervalIndex","floor","harmonicity","setValueAtTime","stop","rec","setTimeout","a","recording","url","URL","createObjectURL","anchor","createElement","download","href","click","className","disabled","onClick","toDestination","buffer","load","loop","chain","fm","connect","App","createSlider","carbonJSON","co2","methaneJSON","methane","nitrousJSON","nitrous","temperatureJSON","result","dataIsLoaded","id","d3","promises","urls","split","push","axios","Promise","all","data","fetchData","element","self","formatDateIntoYear","formatDate","startDate","endDate","margin","timer","targetValue","gRange","append","classed","attr","html","d","playButton","on","clearInterval","setInterval","invert","domain","range","clamp","select","parentNode","appendChild","cloneNode","call","interrupt","event","handle","insert","label","h","addEventListener","selectAll","ticks","enter","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.bf720330.chunk.js","sourcesContent":["//var yvalues;\r\n//var size_index = 0;\r\nexport let hoveredSunData = { mouseOver: false, value: null };\r\nvar currentY_value = 0;\r\nlet hoveredSun = null;\r\nlet sunObject = null;\r\n\r\nclass Sun {\r\n    /**\r\n     * Constructor for bubbles\r\n     *\r\n     * @param {*} p p5 ptr\r\n     */\r\n    constructor(p) { // class for bubble objects\r\n        this.x = p.width / 2\r\n        this.y = p.height / 2\r\n        this.size = currentY_value * 100\r\n        /**\r\n         * Display bubble on sketch\r\n         */\r\n        this.display = function (p,currentDate,temperatureData) {\r\n          //console.log(currentY_value);\r\n          var color = changeSunColor(p,currentDate,{r:232, g:152, b:98},{r:200, g:100, b:90},temperatureData)\r\n\r\n          p.fill(color.r,color.g, color.b);\r\n\r\n          p.ellipse(\r\n              this.x,\r\n              this.y,\r\n              //yvalues[size_index] * 50,\r\n              //yvalues[size_index] * 50\r\n\r\n              currentY_value * 100\r\n          );\r\n            if (hoveredSunData.mouseOver) {\r\n                p.fill(225, 225, 0, 70)\r\n                p.ellipse(this.x, this.y, currentY_value*100);\r\n            }\r\n\r\n        };\r\n\r\n        /**\r\n         * Behavior for bubble movement\r\n         */\r\n        this.move = function () {\r\n            // check if mouse is pressed and within range of bubble\r\n            //console.log(this.x);\r\n            if (p.mouseIsPressed && p.dist(p.mouseX, p.mouseY, this.x, this.y) < this.size ) {\r\n              //get the sun above the ocean\r\n              if (p.mouseY<(p.height/2)){\r\n                hoveredSunData.mouseOver = true;\r\n                hoveredSun = this;\r\n              }\r\n\r\n            }\r\n        };\r\n    }\r\n}\r\n\r\nexport function setUpSun(p, temperatureData, current_date) {\r\n\r\n  calcSun(temperatureData, current_date);\r\n  sunObject = new Sun(p)\r\n}\r\n\r\nexport function drawSun(p, temperatureData, current_date) {\r\n    calcSun(temperatureData, current_date);\r\n    //changeY(current_date);\r\n    //console.log(temperatureData);\r\n    createSun(p, temperatureData, current_date);\r\n}\r\n\r\nfunction calcSun(temperatureData, current_date) {\r\n    if (temperatureData != null) {\r\n        //get current date based on scroller\r\n        //get year\r\n        var currentDate = current_date.getFullYear();\r\n        /*if (currentDate === 2020) {\r\n            currentDate = 2015;\r\n        }*/\r\n        var index = ((currentDate - 1880) * temperatureData.length) / 140 - 100;\r\n\r\n        var i = Math.round(index);\r\n        var average = 0;\r\n        for (var count = 0; count < 100; count++) {\r\n            average = average + parseFloat(temperatureData[i + count].station);\r\n        }\r\n        //console.log(i);\r\n        // console.log(average);\r\n        currentY_value = average / 50 + 2;\r\n        hoveredSunData.value = currentY_value.toFixed(2) - 2;\r\n        //yvalues[i] = average + 1;\r\n        /*for (let i = 0; i < temperatureData.length / 8; i++) {\r\n            var average = parseFloat(temperatureData[i * 8].station); // + parseFloat(temperatureData[i * 8].land)) / 2);\r\n            yvalues[i] = average + 1;\r\n        }*/\r\n    }\r\n}\r\n\r\n/*function changeY ()  {\r\n    if (size_index === yvalues.length) size_index = 0;\r\n\r\n    size_index += 1;\r\n};*/\r\n\r\nfunction createSun(p, temperatureData,currentDate) {\r\n    if (temperatureData != null) {\r\n\r\n      if (!hoveredSunData.mouseOver) {\r\n          sunObject.move();\r\n      }\r\n      else if (p.mouseY>(p.height/2)){\r\n        hoveredSunData.mouseOver = false;\r\n\r\n      }\r\n      else if (p.dist(p.mouseX, p.mouseY, hoveredSun.x, hoveredSun.y) > hoveredSun.size) {\r\n          hoveredSunData.mouseOver = false;\r\n      }\r\n        sunObject.display(p,currentDate,temperatureData);\r\n\r\n    }\r\n}\r\n\r\nfunction changeSunColor(p, currentDate ,startColor, endColor, temperatureData ) {\r\n\r\n    var currentYear = currentDate.getFullYear();\r\n\r\n    var index = ((currentYear - 1880) * temperatureData.length) / 140 - 100;\r\n\r\n    var i = Math.round(index);\r\n    var average = 0;\r\n    for (var count = 0; count < 100; count++) {\r\n        average = average + parseFloat(temperatureData[i + count].station);\r\n    }\r\n    //console.log(i);\r\n    //smallest is 0 largest is 115\r\n    average = average + 3\r\n\r\n    var rGap = (startColor.r-endColor.r)/ 115;\r\n    var gGap = (startColor.g-endColor.g)/ 115;\r\n    var bGap = (startColor.b-endColor.b)/ 115;\r\n\r\n     // code body moved outside (above) statement block\r\n     var rIndex = startColor.r - ((rGap * average) | 0);\r\n     var gIndex = startColor.g - ((gGap * average) | 0);\r\n     var bIndex = startColor.b - ((bGap * average) | 0);\r\n\r\n     return {r:rIndex, g:gIndex, b:bIndex}\r\n}\r\n","const noiseSpeed = 0.01;\r\nconst noiseHeight = 20;\r\nconst num_clouds = 3;\r\nconst cloud_ellipses = [\r\n    { x: 0, y: 20, rx: 70, ry: 40 },\r\n    { x: 25, y: -3, rx: 50, ry: 28 },\r\n    { x: 70, y: 3, rx: 50, ry: 28 },\r\n    { x: 100, y: 5, rx: 24, ry: 24 },\r\n    { x: 115, y: -2, rx: 24, ry: 24 },\r\n    { x: 130, y: -2, rx: 24, ry: 24 },\r\n    { x: 145, y: 0, rx: 24, ry: 24 },\r\n    { x: 160, y: 5, rx: 24, ry: 24 },\r\n    { x: 173, y: 5, rx: 24, ry: 24 },\r\n    { x: 185, y: 5, rx: 24, ry: 24 },\r\n    { x: 198, y: -3, rx: 24, ry: 24 },\r\n    { x: 215, y: 3, rx: 28, ry: 24 },\r\n    { x: 230, y: 4, rx: 30, ry: 24 },\r\n    { x: 245, y: 6, rx: 30, ry: 24 },\r\n    { x: 260, y: 6, rx: 30, ry: 24 },\r\n    { x: 270, y: 3, rx: 26, ry: 24 },\r\n    { x: 285, y: 10, rx: 30, ry: 24 },\r\n    { x: 310, y: 4, rx: 30, ry: 24 },\r\n    { x: 325, y: 4, rx: 16, ry: 16 },\r\n    { x: 339, y: 2, rx: 24, ry: 24 },\r\n    { x: 365, y: 5, rx: 44, ry: 28 },\r\n    { x: 400, y: 0, rx: 40, ry: 24 },\r\n    { x: 435, y: -5, rx: 50, ry: 30 },\r\n    { x: 465, y: 5, rx: 24, ry: 24 },\r\n    { x: 490, y: -3, rx: 38, ry: 30 },\r\n    { x: 524, y: -3, rx: 40, ry: 24 },\r\n    { x: 550, y: -10, rx: 60, ry: 50 },\r\n    { x: 595, y: 3, rx: 58, ry: 40 },\r\n    { x: 627, y: 12, rx: 24, ry: 24 },\r\n    { x: 643, y: 20, rx: 40, ry: 24 },\r\n    { x: 665, y: 19, rx: 30, ry: 24 },\r\n    { x: 695, y: 20, rx: 50, ry: 24 },\r\n    { x: 715, y: 25, rx: 45, ry: 30 },\r\n    { x: 740, y: 25, rx: 45, ry: 30 },\r\n    { x: 754, y: 17, rx: 27, ry: 24 },\r\n    { x: 766, y: 17, rx: 20, ry: 20 },\r\n    { x: 780, y: 17, rx: 25, ry: 20 },\r\n    { x: 800, y: 10, rx: 30, ry: 20 },\r\n    { x: 820, y: 10, rx: 40, ry: 40 },\r\n    { x: 860, y: 10, rx: 80, ry: 60 },\r\n    { x: 890, y: -5, rx: 24, ry: 24 },\r\n    { x: 910, y: -10, rx: 40, ry: 40 },\r\n    { x: 950, y: -18, rx: 69, ry: 50 },\r\n    { x: 990, y: -18, rx: 40, ry: 30 },\r\n    { x: 1010, y: 0, rx: 40, ry: 30 },\r\n    { x: 1030, y: 10, rx: 24, ry: 24 },\r\n    { x: 1050, y: 8, rx: 24, ry: 24 },\r\n    { x: 1065, y: 10, rx: 24, ry: 24 },\r\n    { x: 1090, y: 15, rx: 50, ry: 24 },\r\n    { x: 1115, y: 20, rx: 24, ry: 24 },\r\n    { x: 1135, y: 25, rx: 40, ry: 24 },\r\n    { x: 1155, y: 25, rx: 40, ry: 24 },\r\n    { x: 1180, y: 20, rx: 38, ry: 25 },\r\n    { x: 1200, y: 100, rx: 70, ry: 40 },\r\n];\r\nlet noiseY;\r\nlet clouds = [];\r\n//new height to add to the height of the wave to indicate see level rise\r\nlet newHeight = 0;\r\n\r\nexport function setupLandscape(p) {\r\n    for (let i = 0; i < 3; i++) { // initialize the clouds\r\n        clouds[i] = new Cloud(p, num_clouds - i);\r\n    }\r\n\r\n    noiseY = (p.height * 3) / 4; // y-noise for waves\r\n};\r\n\r\n\r\nexport function drawLandscape(p,currentDate,seaLevelRise,temperatureData) { // this loops everything inside body\r\n    //we wil add a new height to the starting height to make our landscape rise and fall\r\n    // with the date and sea seaLevelRise data\r\n\r\n    var currentYear = currentDate.getFullYear();\r\n    var index = currentYear - 1880;\r\n\r\n    if (index<0){\r\n      newHeight = 0\r\n    }\r\n    if (currentYear>2013)\r\n    {\r\n      newHeight = seaLevelRise[(2013-1880)][1]*3+((currentYear-2014))/3\r\n    }\r\n    else{\r\n      newHeight = seaLevelRise[index][1]*3\r\n    }\r\n\r\n\r\n    drawClouds(currentYear);\r\n    drawWaves(p,currentDate,temperatureData);\r\n    p.noStroke();\r\n}\r\n\r\nfunction drawClouds(currentYear) { // create the clouds and call their moethods\r\n    for (var i = 0; i < num_clouds; i++) {\r\n        clouds[i].move();\r\n        clouds[i].display(currentYear);\r\n    }\r\n}\r\n\r\nfunction drawWaves(p,currentDate,temperatureData) { // create the waves\r\n\r\n    var startColor = { r: 194, g: 247, b: 254 }\r\n    var endColor = {r: 116, g:199, b:145 }\r\n    var color = calcWaveColor(p,currentDate, startColor,endColor,temperatureData)\r\n    createWave(p, (0 - newHeight), color , 2);\r\n\r\n    startColor = { r: 84, g: 182, b: 282 }\r\n    endColor = {r: 109, g:163, b:103 }\r\n    color = calcWaveColor(p,currentDate,startColor,endColor,temperatureData)\r\n    createWave(p, (65 - newHeight), color, 2);\r\n\r\n    startColor = { r: 112, g: 219, b: 245 }\r\n    endColor = {r: 50, g:189, b:34 }\r\n    color = calcWaveColor(p,currentDate,startColor,endColor,temperatureData)\r\n    createWave(p, (80 - newHeight), color, 2);\r\n}\r\n\r\nexport function drawSeaboard(p) { // create the landscape\r\n    createWave(p, (180), { r: 250, g: 219, b: 97 }, 1);\r\n}\r\n\r\n/**\r\n * Create wave\r\n *\r\n * @param {*} offsetY Vertical offset of wave\r\n * @param {*} rgb Wave color\r\n * @param {*} dim Dimension (1D or 2D)\r\n */\r\nfunction createWave(p, offsetY, rgb, dim) {\r\n    p.noFill();\r\n    p.stroke(rgb.r, rgb.g, rgb.b); // draw wave\r\n    p.strokeWeight(p.height / 2);\r\n    p.beginShape(); // create shape for area under waves\r\n    p.curveVertex(0, p.height / 2);\r\n    for (let i = 0; i < p.width; i += 50) {\r\n        let y =\r\n            dim === 1 ?\r\n            p.map(p.noise(i), 0, 1, 200, 300) + noiseY + offsetY :\r\n                p.noise(p.frameCount * noiseSpeed + i) * noiseHeight +\r\n                noiseY +\r\n                offsetY; // redraw y-coordinates for waves\r\n        p.curveVertex(i, y);\r\n    }\r\n    p.curveVertex(p.width, p.height / 2);\r\n    p.endShape(p.LINES); // end shape for area under waves\r\n}\r\n\r\nclass Cloud { // class for cloud objects\r\n    constructor(p, key) {\r\n        this.x = (p.width - 1200 * key); // initial x position\r\n        this.y = (p.height / 2 - 15); // initial y position\r\n\r\n        this.display = function (currentYear) {\r\n            var color = 255-((currentYear-1950))*2\r\n            //console.log(color);\r\n            p.fill(color);\r\n            p.beginShape(); // create shape for area under ellipses\r\n            for (let i = 0; i < cloud_ellipses.length; i++) {\r\n                p.ellipse( // create ellipses that form clouds\r\n                    this.x + cloud_ellipses[i].x,\r\n                    this.y + cloud_ellipses[i].y,\r\n                    cloud_ellipses[i].rx,\r\n                    cloud_ellipses[i].ry\r\n                );\r\n                p.curveVertex( // create vertices to paint area under cloud white\r\n                    this.x + cloud_ellipses[i].x,\r\n                    this.y + cloud_ellipses[i].y\r\n                );\r\n            }\r\n            p.curveVertex(p.width, p.height);\r\n            p.endShape(p.CLOSE); // end shape for area under ellipses\r\n        };\r\n\r\n        this.move = function () {\r\n            this.x += 0.2; // cloud movement speed\r\n\r\n            if (this.x >= p.width) {\r\n                this.x = p.width - 1200 * num_clouds; // reset cloud to this position\r\n            }\r\n\r\n            this.y = (p.height / 2 - 15) - newHeight ; // update Yposition\r\n        };\r\n    }\r\n}\r\n\r\nexport function calcWaveColor(p, currentDate ,startColor, endColor, temperatureData ) {\r\n\r\n    var currentYear = currentDate.getFullYear();\r\n\r\n    var index = ((currentYear - 1880) * temperatureData.length) / 140 - 100;\r\n\r\n    var i = Math.round(index);\r\n    var average = 0;\r\n    for (var count = 0; count < 100; count++) {\r\n        average = average + parseFloat(temperatureData[i + count].station);\r\n    }\r\n    //console.log(i);\r\n    //smallest is 0 largest is 115\r\n    average = average + 3\r\n\r\n    var rGap = (startColor.r-endColor.r)/ 115;\r\n    var gGap = (startColor.g-endColor.g)/ 115;\r\n    var bGap = (startColor.b-endColor.b)/ 115;\r\n\r\n     // code body moved outside (above) statement block\r\n     var rIndex = startColor.r - ((rGap * average) | 0);\r\n     var gIndex = startColor.g - ((gGap * average) | 0);\r\n     var bIndex = startColor.b - ((bGap * average) | 0);\r\n\r\n     return {r:rIndex, g:gIndex, b:bIndex}\r\n\r\n}\r\n","//these are gonna be the variables for our garbage collection\r\nvar macro_plastic = [];\r\n\r\nexport let hoveredMacroPlasticData = { mouseOver: false, value: null };\r\nlet hoveredMacroPlastic = null;\r\nlet newHeight = 0;\r\n\r\nclass GarbagePile {\r\n    constructor(p,moreHeight) {\r\n        var bubbleHeight = p.height / 1.85\r\n        this.xVelocity = p.random(-0.5, 0.5); //cloud movement velocity\r\n        this.x = p.random(50, p.width);\r\n        this.y = bubbleHeight - moreHeight;\r\n        this.width = p.random(100, 300);\r\n        this.height = p.random(50, 100);\r\n        this.garbageBubbles = [];\r\n        //make the garbage hard to see through\r\n        this.opacity = p.random(400, 500);\r\n\r\n        this.size = this.width - this.height;\r\n        //various reds and greens and browns\r\n        this.rcolor = p.random(129,160);\r\n        this.gcolor = p.random(80,105);\r\n        this.bcolor = p.random(70,110);\r\n\r\n        for (let x = 0; x < 25; x++) {\r\n            this.garbageBubbles[x] = new GarbageBubble(p, this.width, this.height);\r\n        }\r\n\r\n        this.display = function () {\r\n            // console.log(\"Displaying smog cloud\");\r\n            p.noStroke();\r\n\r\n            let color = p.color(this.rcolor,this.gcolor,this.bcolor);\r\n            this.garbageColor = color\r\n            this.garbageColor.setAlpha(this.opacity);\r\n            p.fill(this.garbageColor)\r\n\r\n            if (hoveredMacroPlasticData.mouseOver) {\r\n                p.fill(225, 225, 0, 70)\r\n                // p.ellipse(this.x, this.y, size + 10);\r\n            }\r\n            //p.ellipse(this.x, this.y, this.width, this.height);\r\n            for (let x = 0; x < this.garbageBubbles.length; x++) {\r\n\r\n                this.garbageBubbles[x].display(this.x,this.y)\r\n            }\r\n        };\r\n\r\n        this.move = function () {\r\n\r\n            for (let x = 0; x < this.garbageBubbles.length; x++) {\r\n                /*if (Math.abs(this.garbageBubbles[x].xOffset) > this.width / 2 - 10) {\r\n                    this.Bubbles[x].xVelocity *= -1;\r\n                }*/\r\n                if (Math.abs(this.garbageBubbles[x].yOffset) > this.height / 2 - 10) {\r\n                    this.garbageBubbles[x].yVelocity *= -1;\r\n                }\r\n                if (this.garbageBubbles[x].rx < 70 || this.garbageBubbles[x].rx > 150) {\r\n                    this.garbageBubbles[x].rxVelocity *= -1;\r\n                }\r\n                if (this.garbageBubbles[x].ry < 70 || this.garbageBubbles[x].ry > 150) {\r\n                    this.garbageBubbles[x].ryVelocity *= -1;\r\n                }\r\n\r\n                this.garbageBubbles[x].xOffset += this.garbageBubbles[x].xVelocity;\r\n                this.garbageBubbles[x].yOffset += this.garbageBubbles[x].yVelocity;\r\n\r\n                this.garbageBubbles[x].rx += this.garbageBubbles[x].rxVelocity;\r\n                this.garbageBubbles[x].ry += this.garbageBubbles[x].ryVelocity;\r\n\r\n                this.garbageBubbles[x].move()\r\n            }\r\n\r\n\r\n            if (this.x > p.width) {\r\n                this.x = 50;\r\n            } else if (this.x < 0) {\r\n                this.x = p.width - 50;\r\n            }\r\n            this.x += this.xVelocity;\r\n        };\r\n    }\r\n}\r\n\r\nclass GarbageBubble {\r\n\r\n    constructor(p, xlimit, ylimit) {\r\n        this.opacity = p.random(150, 200);\r\n        this.xVelocity = p.random(0.03, 0.07);\r\n        this.yVelocity = p.random(0.03, 0.07);\r\n        this.xOffset = p.random((xlimit / 4) * -1, xlimit / 4);\r\n        this.yOffset = p.random((ylimit / 8) * -1, ylimit / 8);\r\n        this.rx = p.random(25, 40);\r\n        this.ry = p.random(25, 40);\r\n        this.size = this.rx\r\n        this.rxVelocity = p.random(-0.01, 0.01);\r\n        this.ryVelocity = p.random(0.00, 0.01);\r\n\r\n        this.display = function(x,y){\r\n          this.x = x + this.xOffset\r\n          this.y = y + this.yOffset - newHeight\r\n\r\n          p.ellipse(\r\n              x + this.xOffset ,\r\n              y + this.yOffset - newHeight,\r\n              this.rx,\r\n              this.ry\r\n          );\r\n          p.curveVertex(\r\n              x + this.xOffset,\r\n              y + this.yOffset - newHeight\r\n          );\r\n\r\n        }\r\n\r\n        this.move = function(){// check if mouse is pressed and within range of bubble\r\n\r\n          if (p.mouseIsPressed && p.dist(p.mouseX, p.mouseY, this.x, this.y) < this.size) {\r\n              hoveredMacroPlasticData.mouseOver = true;\r\n              hoveredMacroPlastic = this;\r\n\r\n          }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function setupMacroPlastics(p) {\r\n    //\r\n    //set up plastic\r\n    //\r\n    for (var i = 0; i < 5; i++) {\r\n        macro_plastic[i] = new GarbagePile(p, i);\r\n    }\r\n}\r\n\r\nexport function drawMacroPlastics(p, macroGrowth2050, current_date, seaLevelRise) {\r\n\r\n    //we wil add a new height to the starting height to make our landscape rise and fall\r\n    // with the date and sea seaLevelRise data\r\n\r\n    var currentDate = current_date.getFullYear();\r\n    var index = currentDate - 1880;\r\n\r\n    if (index<0){\r\n      newHeight = 0\r\n    }\r\n    if (currentDate>2013)\r\n    {\r\n      newHeight = seaLevelRise[(2013-1880)][1]*3+((currentDate-2014))/3\r\n    }\r\n    else{\r\n      newHeight = seaLevelRise[index][1]*3\r\n    }\r\n\r\n    //calc amount of microplastic\r\n\r\n    for (var i = 0; i < macro_plastic.length; i++) {\r\n\r\n        if (!hoveredMacroPlasticData.mouseOver) {\r\n\r\n          macro_plastic[i].move(p);\r\n        }\r\n        else if (p.dist(p.mouseX, p.mouseY, hoveredMacroPlastic.x, hoveredMacroPlastic.y) > hoveredMacroPlastic.size) {\r\n            hoveredMacroPlasticData.mouseOver = false;\r\n        }\r\n        macro_plastic[i].display(p);\r\n\r\n\r\n    }\r\n\r\n    if (macroGrowth2050 != null) {\r\n        var newSize = -1 * (macroGrowth2050[currentDate - 1950][1] - 367);\r\n        //calculate the actual data from the value\r\n        //console.log(newSize);\r\n        var num;\r\n        if (currentDate>1963){\r\n          num = newSize*(1180000/103)\r\n          hoveredMacroPlasticData.value = num.toFixed(2)\r\n        }\r\n        else {\r\n          num = (currentDate - 1950)*100\r\n          hoveredMacroPlasticData.value = num.toFixed(2)\r\n        }\r\n\r\n\r\n        newSize = Math.round(newSize/4) + 5;\r\n        newHeight = Math.round(newSize*1.25)\r\n\r\n        //add drops\r\n        if (newSize > macro_plastic.length) {\r\n            for (var j = macro_plastic.length; j < newSize; j++) {\r\n                macro_plastic[j] = new GarbagePile(p,newHeight);\r\n            }\r\n        }\r\n        //remove drops\r\n        if (newSize < macro_plastic.length) {\r\n            //console.log('remove');\r\n            var diff = macro_plastic.length - newSize;\r\n            macro_plastic = macro_plastic.splice(0, diff);\r\n        }\r\n    }\r\n}\r\n","import { hoveredMacroPlasticData } from \"./macroPlastics\";\r\n\r\n//these are gonna be the variables for our garbage collection\r\nvar drops = [];\r\nvar micro_Size = 5;\r\nlet newHeight = 0;\r\nexport let hoveredMicroPlasticData = { mouseOver: false, value: null };\r\n// let hoveredMicroPlastic = null;\r\n\r\nclass Drop {\r\n    constructor(p) {\r\n        this.START_HEIGHT = p.height * 0.56;\r\n        this.x = p.random(0, p.width);\r\n        this.y = p.random(this.START_HEIGHT, p.height);\r\n\r\n    }\r\n\r\n    show(p) {\r\n        p.noStroke();\r\n        p.fill(255);\r\n        this.size = p.random(5, micro_Size)\r\n\r\n        p.ellipse(\r\n            this.x,\r\n            this.y,\r\n            this.size\r\n        );\r\n\r\n        if (hoveredMacroPlasticData.mouseOver) {\r\n            p.fill(225, 225, 0, 70)\r\n            p.ellipse(this.x, this.y, this.size + 10);\r\n        }\r\n    }\r\n\r\n    update(p) {\r\n        this.speed = this.speed = p.random(2, 4);\r\n        this.gravity = 1.05;\r\n        this.y = this.y + this.speed * this.gravity;\r\n\r\n        if (this.y > p.height) {\r\n            this.y = this.START_HEIGHT-newHeight;\r\n            this.gravity = 0;\r\n        }\r\n\r\n        // if (p.mouseIsPressed && p.dist(p.mouseX, p.mouseY, this.x, this.y) < this.size+5) {\r\n        //     hoveredMicroPlasticData.mouseOver = true;\r\n        //     hoveredMicroPlastic = this;\r\n\r\n        // }\r\n    }\r\n}\r\n\r\nexport function setupMicroPlasticDrops(p) {\r\n    //\r\n    //set up plastic\r\n    //\r\n    for (var i = 0; i < 200; i++) {\r\n        drops[i] = new Drop(p);\r\n    }\r\n}\r\n\r\nexport function drawMicroPlasticDots(p, microGrowth2050, current_date, seaLevelRise) {\r\n  //we wil add a new height to the starting height to make our landscape rise and fall\r\n  // with the date and sea seaLevelRise data\r\n\r\n  var currentDate = current_date.getFullYear();\r\n  var index = currentDate - 1880;\r\n\r\n  if (index<0){\r\n    newHeight = 0\r\n  }\r\n  if (currentDate>2013)\r\n  {\r\n    newHeight = seaLevelRise[(2013-1880)][1]*3+((currentDate-2014))/3\r\n  }\r\n  else{\r\n    newHeight = seaLevelRise[index][1]*3\r\n  }\r\n\r\n\r\n    //calc microplastic\r\n    //\r\n\r\n    for (var i = 0; i < drops.length; i++) {\r\n\r\n      if (!hoveredMacroPlasticData.mouseOver) {\r\n        drops[i].update(p);\r\n      }\r\n    //   else if (p.dist(p.mouseX, p.mouseY, hoveredMicroPlastic.x, hoveredMicroPlastic.y) > hoveredMicroPlastic.size+5) {\r\n    //       hoveredMicroPlasticData.mouseOver = false;\r\n    //   }\r\n        drops[i].show(p);\r\n\r\n    }\r\n\r\n    if (microGrowth2050 != null) {\r\n\r\n        var newSize = -1 * (microGrowth2050[currentDate - 1950][1] - 367);\r\n        var num;\r\n\r\n        if (currentDate>1971){\r\n          num = newSize*(590000/78)\r\n          hoveredMicroPlasticData.value = num.toFixed(2)\r\n        }\r\n        else {\r\n          num = (currentDate - 1950)*100\r\n          hoveredMicroPlasticData.value = num.toFixed(2)\r\n        }\r\n\r\n        //console.log(newSize*(590000/78));\r\n        newSize = newSize * 2 + 200;\r\n        //add drops\r\n\r\n\r\n        if (newSize > drops.length) {\r\n            for (var j = drops.length; j < newSize; j++) {\r\n                drops[j] = new Drop(p);\r\n            }\r\n        }\r\n        //remove drops\r\n        if (newSize < drops.length) {\r\n            var diff = drops.length - newSize;\r\n            drops = drops.splice(diff);\r\n        }\r\n    }\r\n}\r\n","import { startingYear } from '../App.js';\r\n\r\nexport const hoveredBubbleData = { mouseOver: false, value: null };\r\nconst startingNumBubbles = 30; // always starts with 30 bubbles\r\nlet bubbles = []; // holds Bubble objects\r\nlet hoveredBubble = null;\r\nlet newHeight = 0;\r\n/**\r\n * Class for bubbles that float up from seabed on display\r\n */\r\nclass Bubble {\r\n    /**\r\n     * Constructor for bubbles\r\n     *\r\n     * @param {*} p p5 ptr\r\n     * @param {*} xstart Starting x-position\r\n     * @param {*} yspeed Speed of bubble rising to top\r\n     * @param {*} size Size of bubble\r\n     */\r\n    constructor(p, xstart, yspeed, size, value) { // class for bubble objects\r\n        this.x = xstart; // starting x-position of bubbles\r\n        this.y = p.random(p.height - 150, p.height * 1.5); // starting y-position of bubbles under height\r\n        this.size = size;\r\n        this.yspeed = yspeed;\r\n        this.degree = 0;\r\n        this.value = value; // current value to date from data\r\n\r\n        /**\r\n         * Display bubble on sketch\r\n         */\r\n        this.display = function () {\r\n            p.fill(255, 255, 255, 50);\r\n            p.ellipse(this.x, this.y, size);\r\n            p.fill(255, 255, 255, 180);\r\n            p.ellipse(this.x + 0.2 * size, this.y - 0.2 * size, 0.2 * size); // bubble detail\r\n            if (hoveredBubbleData.mouseOver) {\r\n                p.fill(225, 225, 0, 70)\r\n                p.ellipse(this.x, this.y, size + 10);\r\n            }\r\n\r\n        };\r\n\r\n        /**\r\n         * Behavior for bubble movement\r\n         */\r\n        this.move = function () {\r\n            this.x += p.cos(p.radians(this.degree)); // base x-shifts on cosine waves\r\n            this.y += this.yspeed; // bubble movement speed\r\n            if (this.y < (p.height * 0.63) - newHeight) {\r\n                this.y = p.height;\r\n            }\r\n\r\n            // check if mouse is pressed and within range of bubble\r\n            if (p.mouseIsPressed && p.dist(p.mouseX, p.mouseY, this.x, this.y) < size) {\r\n                hoveredBubbleData.mouseOver = true;\r\n                hoveredBubble = this;\r\n            }\r\n\r\n            this.degree += p.random(0.0, 1.0);\r\n        };\r\n\r\n        /**\r\n         * Set bubble speed corresponding to data\r\n         *\r\n         * @param {*} new_speed Re-initialize bubble speed\r\n         */\r\n        this.setSpeed = function (new_speed) {\r\n            this.yspeed = new_speed;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Set up methane bubbles on canvas\r\n *\r\n * @param {*} p p5 ptr\r\n */\r\nexport function setupMethaneBubbles(p, methaneData) {\r\n    // initialize at beginning with bubbles from starting date\r\n    // const startingValue = methaneData.arr[0].average;\r\n    // const AVG_END = methaneData.arr[methaneData.arr.length - 1].average;\r\n    // const diff = AVG_END - startingValue; // diff btwn curr avg and start avg\r\n\r\n    for (let i = 0; i < startingNumBubbles; i++) { // initialize the bubbles\r\n        bubbles[i] = new Bubble(p,\r\n            p.random(0, p.width),\r\n            p.random(-1.5, -1),\r\n            p.random(10, 20),\r\n            null\r\n        );\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Draw methane bubbles on sketch\r\n *\r\n * @param {*} p p5 ptr\r\n * @param {*} methaneData Object containing map and arr\r\n * @param {*} currentDate Current date stored in state\r\n */\r\nexport function drawMethaneBubbles(p, methaneData, currentDate, seaLevelRise) { // create the bubbles and call their methods\r\n    // data starts on/after 1983\r\n    const yyyy = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(currentDate);\r\n    const mm = new Intl.DateTimeFormat('en', { month: '2-digit' }).format(currentDate);\r\n    const dd = \"01\"\r\n    const date = `${yyyy}-${mm}-${dd}`\r\n    const startingValue = methaneData.arr[0].average;\r\n    const startingDate = methaneData.arr[0].date;\r\n    const startingYearEstValue = 1116; // retrieved from https://www.methanelevels.org/\r\n    \r\n    // we will add a new height to the starting height to make our landscape rise and fall\r\n    // with the date and sea seaLevelRise data\r\n    const currentYear = currentDate.getFullYear();\r\n    const index = currentYear - 1880;\r\n    \r\n    if (index < 0) {\r\n        newHeight = 0\r\n    }\r\n    if (currentYear>2013)\r\n    {\r\n        newHeight = seaLevelRise[(2013-1880)][1]*3 + (currentYear-2014) / 3\r\n    }\r\n    else {\r\n        newHeight = seaLevelRise[index][1]*3\r\n    }\r\n\r\n    // make more bubbles and modify speed\r\n    for (let i = 0; i < bubbles.length; i++) {\r\n        // check if mouse is hovering over bubble\r\n        // if not, move normally\r\n        // otherwise, compare current mouse position with initially selected bubble position\r\n        if (!hoveredBubbleData.mouseOver) {\r\n            bubbles[i].move();\r\n        }\r\n        else if (p.dist(p.mouseX, p.mouseY, hoveredBubble.x, hoveredBubble.y) > hoveredBubble.size) {\r\n            hoveredBubbleData.mouseOver = false;\r\n        }\r\n        bubbles[i].display();\r\n    }\r\n\r\n    // update bubble here\r\n    if (methaneData.map.get(date)) {\r\n        const currentValue = methaneData.map.get(date);\r\n        const diff = currentValue - startingValue; // diff btwn curr avg and start avg\r\n        const ratio = startingValue / currentValue;\r\n        const newNumBubbles = parseInt(diff + startingNumBubbles);\r\n\r\n        // update current data value\r\n        //console.log(currentValue);\r\n        hoveredBubbleData.value = currentValue;\r\n\r\n        if (newNumBubbles > bubbles.length) {\r\n            for (let j = bubbles.length; j < newNumBubbles; j++) {\r\n                bubbles[j] = new Bubble(p,\r\n                    p.random(0, p.width),\r\n                    p.random(-2 / ratio * 2, -1.5 / ratio * 2),\r\n                    p.random(10, 20),\r\n                    currentValue);\r\n            }\r\n        }\r\n\r\n        if (newNumBubbles < bubbles.length) {\r\n            bubbles = bubbles.splice(bubbles.length - newNumBubbles);\r\n        }\r\n    }\r\n    else {\r\n        // set to null if no data available\r\n        // console.log(`Current year: ${currentYear} (${typeof(currentYear)}), Starting year: ${startingYear} (${typeof(startingYear)})`)\r\n        hoveredBubbleData.value = `${(startingYearEstValue + (currentYear - startingYear) * 10).toString()} (approximation)`;\r\n\r\n        // use last known date (make sure to set first date to earliest and vice versa)\r\n        // 1. get the date where data starts for api\r\n        const new_yyyy = startingDate.substring(0, 4);\r\n        const new_mm = startingDate.substring(5, startingDate.length).padStart(2, '0');\r\n        const new_dd = \"01\"\r\n        const new_date = new Date(`${new_yyyy}-${new_mm}-${new_dd}`);\r\n\r\n        // 2. update bubble here (could be < lower bound or > upper bound)\r\n        if (new_date >= currentDate) {\r\n            bubbles = bubbles.splice(0, startingNumBubbles);\r\n            for (let i = 0; i < startingNumBubbles; i++) {\r\n                bubbles[i].setSpeed(p.random(-1.5, -1));\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","let smogClouds = [];\r\nlet originalData = null;\r\nconst initial_clouds = 4;\r\nlet extra_clouds = 0;\r\n\r\nexport let hoveredSmogData = { mouseOver: false, value: null };\r\nlet hoveredSmog = null;\r\n\r\nclass SmogCloud {\r\n    constructor(p, todayData, initial) {\r\n        let diff = 0;\r\n        if(!todayData || !initial) {\r\n            this.todayData = undefined;\r\n            this.oldData = undefined\r\n        }\r\n        else {\r\n            this.todayData = todayData;\r\n            this.oldData = initial;\r\n            diff = Math.round(((todayData.average - initial.average)*10))\r\n        }\r\n\r\n        \r\n\r\n        this.xVelocity = p.random(-2, 2); //cloud movement velocity\r\n        this.x = p.random(50, p.width);\r\n        this.y = p.random(50, 200);\r\n        this.width = p.random(100 + diff, 300 + diff);\r\n        this.height = p.random(50 + diff, 100 + diff);\r\n        this.smogBubbles = [];\r\n        this.opacity = p.random(50, 200);\r\n        this.addlimit = 0;\r\n\r\n        for (let x = 0; x < 25; x++) {\r\n            this.smogBubbles[x] = new SmogBubble(p, this.width, this.height, diff, diff);\r\n        }\r\n\r\n        this.display = function (todayData) {\r\n            this.oldData = this.todayData\r\n            this.todayData = todayData;\r\n            if(this.todayData === undefined) {\r\n                this.todayData = this.oldData;\r\n            }\r\n            // console.log(\"Displaying smog cloud\");\r\n\r\n            if(this.oldData) {\r\n                p.noStroke();\r\n                let cloudColor = p.color(100);\r\n                cloudColor.setAlpha(this.opacity);\r\n                p.fill(cloudColor);\r\n\r\n                this.width += (parseFloat(this.todayData.average) - parseFloat(this.oldData.average))* 10\r\n                this.height += (parseFloat(this.todayData.average) - parseFloat(this.oldData.average))* 10\r\n                if (hoveredSmogData.mouseOver) {\r\n                    p.fill(225, 225, 0, 70)\r\n                }\r\n                p.ellipse(this.x, this.y, this.width, this.height);\r\n                p.beginShape();\r\n                for (let x = 0; x < this.smogBubbles.length; x++) {\r\n                    cloudColor.setAlpha(this.smogBubbles[x].opacity);\r\n                    p.fill(cloudColor);\r\n                    this.smogBubbles[x].rx += (this.todayData.average - this.oldData.average)* 10\r\n                    this.smogBubbles[x].ry += (this.todayData.average - this.oldData.average)* 10\r\n\r\n                    //this.smogBubbles[x].rxVelocity += (this.todayData.average - this.oldData.average)\r\n                    //this.smogBubbles[x].ryVelocity += (this.todayData.average - this.oldData.average)\r\n                    if (hoveredSmogData.mouseOver) {\r\n                        p.fill(225, 225, 0, 70)\r\n                    }\r\n                    this.smogBubbles[x].display(this.x,this.y)\r\n                }\r\n            }\r\n            p.endShape(p.CLOSE);\r\n        };\r\n\r\n        this.move = function () {\r\n            if(this.oldData) {\r\n                this.addlimit += (parseFloat(this.todayData.average) - parseFloat(this.oldData.average))* 10;\r\n                for (let x = 0; x < this.smogBubbles.length; x++) {\r\n                    if (Math.abs(this.smogBubbles[x].xOffset) > this.width / 2 - 10 + this.addLimit) {\r\n                        this.smogBubbles[x].xVelocity *= -1;\r\n                    }\r\n                    if (Math.abs(this.smogBubbles[x].yOffset) > this.height / 2 - 10 + this.addLimit) {\r\n                        this.smogBubbles[x].yVelocity *= -1;\r\n                    }\r\n                    if (this.smogBubbles[x].rx < 70 + this.addlimit || this.smogBubbles[x].rx > 150 + this.addlimit) {\r\n                        this.smogBubbles[x].rxVelocity *= -1;\r\n                    }\r\n                    if (this.smogBubbles[x].ry < 70 + this.addlimit || this.smogBubbles[x].ry > 150 + this.addlimit) {\r\n                        this.smogBubbles[x].ryVelocity *= -1;\r\n                    }\r\n\r\n                    this.smogBubbles[x].xOffset += this.smogBubbles[x].xVelocity;\r\n                    this.smogBubbles[x].yOffset += this.smogBubbles[x].yVelocity;\r\n\r\n                    this.smogBubbles[x].rx += this.smogBubbles[x].rxVelocity;\r\n                    this.smogBubbles[x].ry += this.smogBubbles[x].ryVelocity;\r\n\r\n                    this.smogBubbles[x].move()\r\n                }\r\n            }\r\n            if (this.x > p.width + 50) {\r\n                this.x = -50;\r\n            } else if (this.x < -50) {\r\n                this.x = p.width - 100;\r\n            }\r\n            this.x += this.xVelocity;\r\n        };\r\n    }\r\n}\r\n\r\nclass SmogBubble {\r\n    constructor(p, xlimit, ylimit, wMod, hMod) {\r\n        this.opacity = p.random(50, 200);\r\n        this.xVelocity = p.random(0.03, 0.07);\r\n        this.yVelocity = p.random(0.03, 0.07);\r\n        this.xOffset = p.random((xlimit / 2) * -1, xlimit / 2);\r\n        this.yOffset = p.random((ylimit / 2) * -1, ylimit / 2);\r\n        this.rx = p.random(70 + wMod, 150 + wMod);\r\n        this.ry = p.random(70+ hMod, 150 + hMod);\r\n\r\n        this.rxVelocity = p.random(0.1, 0.5);\r\n        this.ryVelocity = p.random(0.1, 0.5);\r\n\r\n        this.size = this.rx\r\n        this.x = 0\r\n        this.y = 0\r\n\r\n    this.display = function (x,y) {\r\n      this.x = x + this.xOffset\r\n      this.y = y + this.yOffset\r\n      p.ellipse(\r\n          x + this.xOffset,\r\n          y + this.yOffset,\r\n          this.rx,\r\n          this.ry\r\n      );\r\n      p.curveVertex(\r\n          x + this.xOffset,\r\n          y + this.yOffset\r\n      );\r\n    }\r\n    this.move = function(){// check if mouse is pressed and within range of bubble\r\n      //console.log(this.size);\r\n      if (p.mouseIsPressed && p.dist(p.mouseX, p.mouseY, this.x, this.y) < this.size) {\r\n          hoveredSmogData.mouseOver = true;\r\n          hoveredSmog = this;\r\n\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function setupSmogClouds(p, nitrousData, currentDate) {\r\n    if(!nitrousData) {\r\n        for (let i = 0; i < initial_clouds; i++) {\r\n            smogClouds[i] = new SmogCloud(p, null, null);\r\n        }\r\n    }\r\n    else {\r\n        let currIndex = 33 + ((currentDate.getFullYear() - 2004) * 12) + currentDate.getMonth()\r\n        for(let i = 0; i < nitrousData[0].average / 10; i++) {\r\n            smogClouds[i] = new SmogCloud(p, nitrousData[currIndex], nitrousData[0]);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function drawSmogClouds(p, nitrousData, currentDate) {\r\n        let currIndex = 33 + ((currentDate.getFullYear() - 2004) * 12) + currentDate.getMonth()\r\n\r\n        if(originalData == null && nitrousData != null) {\r\n            originalData = nitrousData[0];\r\n\r\n        }\r\n\r\n        else if(nitrousData && currIndex > 0 && currIndex < nitrousData.length) {\r\n            let diff = Math.round(((nitrousData[currIndex].average - originalData.average)/10)) - extra_clouds;\r\n            //console.log(diff);\r\n\r\n            if(diff > 0) {\r\n                for(let x = 0 ; x < diff; x++) {\r\n                    smogClouds[smogClouds.length] = new SmogCloud(p, nitrousData[currIndex], originalData);\r\n                    extra_clouds++;\r\n                    console.log(\"Extra cloud created\");\r\n                }\r\n            }\r\n            else if(diff < 0 && extra_clouds > 0) {\r\n                console.log(\"Diff: \"+diff);\r\n                let slice = smogClouds.length + diff;\r\n                extra_clouds -= (smogClouds.length - slice);\r\n                console.log(\"Extra clouds: \"+ extra_clouds);\r\n                console.log(\"Length \"+ smogClouds.length);\r\n                console.log(\"Slice \" + slice)\r\n                smogClouds = smogClouds.slice(0, slice);\r\n            }\r\n        }\r\n\r\n        if(currIndex >= 0 ) {\r\n          if (currIndex < nitrousData.length){\r\n            //console.log(nitrousData[currIndex]);\r\n            hoveredSmogData.value = nitrousData[currIndex].average\r\n          }\r\n          else {\r\n            hoveredSmogData.value = nitrousData[nitrousData.length-1].average\r\n          }\r\n\r\n            for (var i = 0; i < smogClouds.length; i++) {\r\n              if (!hoveredSmogData.mouseOver) {\r\n\r\n                smogClouds[i].move(p);\r\n              }\r\n              else if (p.dist(p.mouseX, p.mouseY, hoveredSmog.x, hoveredSmog.y) > hoveredSmog.size) {\r\n                  hoveredSmogData.mouseOver = false;\r\n              }\r\n\r\n                smogClouds[i].display(nitrousData[currIndex]);\r\n            }\r\n        }\r\n        else {\r\n            hoveredSmogData.value = nitrousData[0].average\r\n\r\n            for(var j = 0; j < smogClouds.length; j++) {\r\n              if (!hoveredSmogData.mouseOver) {\r\n\r\n                smogClouds[j].move(p);\r\n              }\r\n              else if (p.dist(p.mouseX, p.mouseY, hoveredSmog.x, hoveredSmog.y) > hoveredSmog.size) {\r\n                  hoveredSmogData.mouseOver = false;\r\n              }\r\n\r\n                smogClouds[j].display(nitrousData[0]);\r\n            }\r\n        }\r\n\r\n\r\n}\r\n\r\n//nitrousData[;\r\n","import { black } from \"color-name\";\r\n\r\nexport function drawGuide(p) {\r\n    // let fillColor = p.color(255, 255, 255);\r\n    // fillColor.setAlpha(200);\r\n    // p.noStroke();\r\n    // p.fill(fillColor);\r\n    // p.rect(100, 100, p.width - 200, p.height - 200);\r\n\r\n    // p.noFill();\r\n    // p.stroke(black);\r\n    // p.strokeWeight(5);\r\n    // p.rect(100, 100, p.width - 200, p.height - 200);\r\n\r\n    // p.fill(0);\r\n    // p.textSize(36);\r\n    // p.strokeWeight(1);\r\n    // p.textAlign(p.CENTER);\r\n    // p.text(\"Guide\", p.width/2, 200);\r\n\r\n    // p.textAlign(p.CENTER);\r\n    // p.textSize(24);\r\n    // p.text(\"Welcome to our visualization! Provided here are explanations of what data different attributes of the landscape correspond to.\", p.width/2, 250);\r\n\r\n    // p.textAlign(p.LEFT);\r\n    // p.textSize(24);\r\n    // p.text(\"Sky Color\\nThe color of the sky is based off carbon dioxide data, darkening as CO2 levels in the atmosphere increase.\", 200, 300);\r\n    // p.text(\"Sun Size\\nThe sun increases and decreases in size based on global temperature averages - larger means hotter, smaller means cooler.\", 200, 375);\r\n    // p.text(\"Smog\\nThe grey smog clouds increase and decrease in density, size, and number based off of nitrous oxide levels in the atmosphere.\", 200, 450);\r\n    // p.text(\"Ocean Level\\nThe sea level rises or descends based off sea level data\", 200, 525);\r\n    // p.text(\"Microplastics\\nThe small white dots drifting downward through the ocean represent microplastics, tiny plastic particulates polluting the oceans.\\nThey\"+\r\n    // \" increase and decrease in number based on microplastic levels in the oceans.\", 200, 600);\r\n    // p.text(\"Macroplastics\\nThe large brown and grey shapes on the ocean surface represent macroplastics, larger plastic objects polluting the oceans.\\nThey\"\r\n    // +\" increase and decrease in number based on macroplastic levels in the oceans.\", 200, 700);\r\n    // p.text(\"Bubbles\\nThe bubbles rising up through the ocean represent methane entering the atmosphere, and increase and decrease in number accordingly.\", 200, 800);\r\n\r\n    // p.noStroke();\r\n\r\n    const maxWidth = window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n    const width_ratio = p.windowWidth / maxWidth;\r\n    \r\n    const strokeWeight = 5; // font boldness\r\n    \r\n    const rightPadding = 80;\r\n    const leftPadding = 80; // check if text box would go beyond window width\r\n    const topPadding = 80;\r\n    const bottomPadding = 150;\r\n    \r\n    const textSize = 20 * width_ratio; // scales with window width\r\n    const textBoxWidth = p.width - rightPadding - leftPadding; // scales with window width\r\n    const textBoxHeight = p.height - topPadding - bottomPadding; // scales with window height\r\n    \r\n    const fillColor = p.color(255, 255, 255);\r\n\r\n    fillColor.setAlpha(200);\r\n    p.noStroke();\r\n    p.fill(fillColor);\r\n    p.rect(leftPadding, topPadding, textBoxWidth, textBoxHeight);\r\n\r\n    p.noFill();\r\n    p.stroke(black);\r\n    p.strokeWeight(strokeWeight);\r\n    p.rect(leftPadding, topPadding, textBoxWidth, textBoxHeight);\r\n\r\n    p.fill(0);\r\n    p.strokeWeight(0.5);\r\n    p.textAlign(p.LEFT);\r\n    \r\n    p.textSize(textSize);\r\n\r\n    createText(\"Interact with moving objects on the visualization to display value representation of pollutants corresponding with the current period in time\");\r\n    createText(\"Sky Color: The color of the sky is based off carbon dioxide data, darkening as CO2 levels in the atmosphere increase.\", 50);\r\n    createText(\"Ocean Color: The color of the ocean is based off ocean pollution data, darkening as levels in the ocean increase.\", 100);\r\n    createText(\"Sun Size: The sun increases and decreases in size based on global temperature averages - larger means hotter, smaller means cooler.\", 150);\r\n    createText(\"Smog: The grey smog clouds increase and decrease in density, size, and number based off of nitrous oxide levels in the atmosphere.\", 200);\r\n    createText(\"Ocean Level: The sea level rises or descends based off sea level data\", 250);\r\n    createText(\"Microplastics: The small white dots drifting downward through the ocean represent microplastics, tiny plastic particulates polluting the oceans. They\"+\r\n        \" increase and decrease in number based on microplastic levels in the oceans.\", 300);\r\n    createText(\"Macroplastics: The large brown and grey shapes on the ocean surface represent macroplastics, larger plastic objects polluting the oceans. They\"\r\n        +\" increase and decrease in number based on macroplastic levels in the oceans.\", 375);\r\n    createText(\"Bubbles: The bubbles rising up through the ocean represent methane entering the atmosphere, and increase and decrease in number accordingly.\", 450);\r\n\r\n    p.noStroke();\r\n\r\n    /**\r\n     * Create wrapped text box\r\n     * \r\n     * @param {*} text Text to create\r\n     * @param {*} yoffset Optional parameter; offset from top to move text, otherwise 0 by default\r\n     */\r\n    function createText(text, yoffset) {\r\n        if (!yoffset) yoffset = 0;\r\n        p.text(text, \r\n            leftPadding + strokeWeight, // x-offset\r\n                topPadding + textSize - strokeWeight * 2 + yoffset, // y-offset\r\n                    p.width - leftPadding - rightPadding - strokeWeight * 2, // x-wrap\r\n                        p.height - bottomPadding - topPadding - strokeWeight * 2); // y-wrap\r\n    }\r\n}\r\n\r\nexport function drawLegend(p, text, value) {\r\n    const maxWidth = window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n    const width_ratio = p.windowWidth / maxWidth;\r\n    \r\n    const strokeWeight = 5; // font boldness\r\n    const bottomPadding = 3;\r\n    const maxChars = 66;\r\n    const numTextWraps = 1 + Math.ceil(text.length / maxChars); // add 1 for value representation\r\n    \r\n    const textSize = 20 * width_ratio; // scales with window width\r\n    const textBoxWidth = 625 * width_ratio; // scales with window width\r\n    const textBoxHeight = strokeWeight * numTextWraps + textSize * numTextWraps + bottomPadding; // scales with window height\r\n    \r\n    const leftMargin = p.mouseX + textBoxWidth + 20 > p.windowWidth ? -textBoxWidth - 20 : 20; // check if text box would go beyond window width\r\n\r\n    const fillColor = p.color(255, 255, 255);\r\n\r\n    const wrappedText = text.replace( // wrap text around 66 chars maximum\r\n        /(?![^\\n]{1,66}$)([^\\n]{1,66})\\s/g, '$1\\n'\r\n    );\r\n    \r\n    fillColor.setAlpha(200);\r\n    p.noStroke();\r\n    p.fill(fillColor);\r\n    p.rect(leftMargin + p.mouseX, p.mouseY, textBoxWidth, textBoxHeight);\r\n\r\n    p.noFill();\r\n    p.stroke(black);\r\n    p.strokeWeight(strokeWeight);\r\n    p.rect(leftMargin + p.mouseX, p.mouseY, textBoxWidth, textBoxHeight);\r\n\r\n    p.fill(0);\r\n    p.strokeWeight(0.5);\r\n    p.textAlign(p.LEFT);\r\n    \r\n    p.textSize(textSize);\r\n\r\n    if (value) {\r\n        p.text(wrappedText, leftMargin + strokeWeight + p.mouseX, p.mouseY + textSize);\r\n        p.text(value, leftMargin + strokeWeight + p.mouseX, p.mouseY + (bottomPadding + textSize) * numTextWraps)\r\n    }\r\n\r\n    p.noStroke();\r\n}","import { setUpSun, drawSun, hoveredSunData } from \"./sun\";\r\nimport { setupLandscape, drawLandscape, drawSeaboard } from \"./landscape\";\r\nimport { setupMicroPlasticDrops, drawMicroPlasticDots, hoveredMicroPlasticData } from \"./microPlastics\";\r\nimport { setupMacroPlastics, drawMacroPlastics, hoveredMacroPlasticData } from \"./macroPlastics\";\r\nimport { setupMethaneBubbles, drawMethaneBubbles } from \"./methaneBubbles\";\r\nimport { setupSmogClouds, drawSmogClouds, hoveredSmogData } from \"./smogClouds\";\r\nimport { drawSky } from \"./skyColor\";\r\nimport { drawLegend, drawGuide } from \"./legend\";\r\nimport { hoveredBubbleData } from \"./methaneBubbles\";\r\n\r\nexport default function sketch(p) {\r\n    let showLegend = true;\r\n    let temperatureData = null;\r\n    let microGrowth2050 = null;\r\n    let macroGrowth2050 = null;\r\n    let currentDate = null;\r\n    let carbonData = null;\r\n    let methaneData = null;\r\n    let seaLevelRise = null;\r\n    let nitrousData = null;\r\n\r\n    p.setup = () => {\r\n        p.frameRate(30);\r\n        p.createCanvas(p.windowWidth, p.windowHeight); // adjust to window width and height\r\n        document.getElementById(\"defaultCanvas0\").style.display = 'block';\r\n        setupLandscape(p);\r\n        setUpSun(p,temperatureData, currentDate);\r\n        setupSmogClouds(p);\r\n        setupMethaneBubbles(p, methaneData);\r\n        setupMicroPlasticDrops(p);\r\n        setupMacroPlastics(p);\r\n        let button = p.createButton('show guide');\r\n        button.position(p.width - 269, 12);\r\n        button.mousePressed(showGuide);\r\n    };\r\n\r\n    function showGuide() {\r\n        showLegend = !showLegend;\r\n    }\r\n\r\n    p.draw = () => {\r\n        p.clear();\r\n        drawSky(p, carbonData, currentDate);\r\n        drawSun(p, temperatureData, currentDate);\r\n\r\n        drawLandscape(p,currentDate, seaLevelRise,temperatureData);\r\n        drawSmogClouds(p, nitrousData, currentDate);\r\n        drawMethaneBubbles(p, methaneData, currentDate, seaLevelRise);\r\n        drawSeaboard(p);\r\n        drawMicroPlasticDots(p, microGrowth2050, currentDate, seaLevelRise);\r\n        drawMacroPlastics(p, macroGrowth2050, currentDate, seaLevelRise);\r\n\r\n        if (hoveredBubbleData.mouseOver) {\r\n            const text = \"The bubbles rising up through the ocean represent methane entering the atmosphere, and increase and decrease in number accordingly.\";\r\n            const value = hoveredBubbleData.value ? `Value: ${hoveredBubbleData.value} ppb` : `[No Value For Current Date]`;\r\n            p.noFill();\r\n            drawLegend(p, text, value);\r\n        }\r\n        else if (hoveredMacroPlasticData.mouseOver) {\r\n            const text = \"The piles or circles on top the ocean represent macroplastic, and increase and decrease in number accordingly.\\n\" \r\n            + (hoveredMacroPlasticData.value ? `Macroplastic value: ${hoveredMacroPlasticData.value} tons\\n`: `[No Value For Current Date]\\n`)\r\n                + \"The white dots or circles falling from top the ocean represent microplastic, and increase and decrease in number accordingly.\\n\"\r\n                    + (hoveredMicroPlasticData.value ? `Microplastic value: ${hoveredMicroPlasticData.value} tons` : `[No Value For Current Date]`);\r\n            p.noFill();\r\n            drawLegend(p, text, \" \");\r\n        }\r\n        else if (hoveredSunData.mouseOver) {\r\n            const text = \"The sun and ocean grow and change color with the tempature of the planet.\";\r\n            const value = hoveredSunData.value ? `Value: ${hoveredSunData.value} degree C` : `[No Value For Current Date]`;\r\n            p.noFill();\r\n            drawLegend(p, text, value);\r\n        }\r\n        else if (hoveredMicroPlasticData.mouseOver) {\r\n            const text = \"The white dots or circles falling from top the ocean represent microplastic, and increase and decrease in number accordingly.\";\r\n            const value = hoveredMicroPlasticData.value ? `Value: ${hoveredMicroPlasticData.value} tons` : `[No Value For Current Date]`;\r\n            p.noFill();\r\n            drawLegend(p, text, value);\r\n        }\r\n        else if (hoveredSmogData.mouseOver) {\r\n            const text = \"The smog clouds represent the nitrous oxide in the atmosphere.\";\r\n            const value = hoveredSmogData.value ? `Value: ${hoveredSmogData.value} ppb` : `[No Value For Current Date]`;\r\n            p.noFill();\r\n            drawLegend(p, text, value);\r\n        }\r\n\r\n        if (showLegend) { // commented this for demo/testing purposes\r\n            p.noFill();\r\n            drawGuide(p);\r\n        }\r\n    };\r\n\r\n    p.windowResized = () => {\r\n        p.resizeCanvas(p.windowWidth, p.windowHeight);\r\n        p.redraw();\r\n        document.getElementById(\"defaultCanvas0\").style.display = 'block';\r\n    }\r\n\r\n    p.myCustomRedrawAccordingToNewPropsHandler = (newProps) => {\r\n        temperatureData = newProps.temperatureData;\r\n        currentDate = newProps.currentDate;\r\n        microGrowth2050 = newProps.microGrowth2050;\r\n        macroGrowth2050 = newProps.macroGrowth2050;\r\n        carbonData = newProps.carbonData;\r\n        methaneData = newProps.methaneData;\r\n        seaLevelRise = newProps.seaLevelRise;\r\n        nitrousData = newProps.nitrousData;\r\n    };\r\n\r\n    p.mouseClicked = () => {\r\n        if (p.mouseX < p.width && p.mouseX > 0 && p.mouseY < p.height && p.mouseY > 0){\r\n            showLegend = false;\r\n        }\r\n    };\r\n}\r\n","//inital background color (38,238,228)\r\n\r\n//2010 background color ((38*.75),(238*.75),(228*.75) this is marked as 25% of final transition\r\n//final background color (15,26,155)\r\nlet END_SKY_r = 15\r\nlet END_SKY_g = 26\r\nlet END_SKY_b = 155\r\n\r\nlet START_SKY_r = 38\r\nlet START_SKY_g = 238\r\nlet START_SKY_b = 228\r\n\r\nexport function drawSky(p, carbonData, currentDate) {\r\n    var currentYear = currentDate.getFullYear();\r\n    //underData\r\n    var yearIdex = currentYear - 1950;\r\n    //constants for changing color\r\n\r\n    var color_2010_r = START_SKY_r*0.75\r\n    var color_2010_g = START_SKY_g*0.75\r\n    var color_2010_b = START_SKY_b*0.75\r\n\r\n    var rGap = (color_2010_r-END_SKY_r)/ 70;\r\n    var gGap = (color_2010_g-END_SKY_g)/ 70;\r\n    var bGap = (color_2010_b-END_SKY_b)/ 70;\r\n\r\n    var rIndex, gIndex, bIndex;\r\n    \r\n    if (currentYear <= 2010) {\r\n\r\n           // code body moved outside (above) statement block\r\n           rIndex = START_SKY_r - ((rGap * yearIdex) | 0);\r\n           gIndex = START_SKY_g - ((gGap * yearIdex) | 0);\r\n           bIndex = START_SKY_b - ((bGap * yearIdex) | 0);\r\n\r\n           p.background(rIndex, gIndex, bIndex);\r\n    }\r\n\r\n    //first index is 0 =, year 2010, trend 387\r\n    //last index is 3900, year 2020, trend 412\r\n    else if (currentYear!==2020) {\r\n\r\n        //initial colors\r\n        rIndex = START_SKY_r -  ((rGap * 60) | 0);\r\n        gIndex = START_SKY_g - ((gGap * 60) | 0);\r\n        bIndex = START_SKY_g - ((bGap * 60) | 0);\r\n\r\n        //find new jump of index\r\n        var rJump = (rIndex - END_SKY_r)/(412-387)\r\n        var gJump = (gIndex - END_SKY_g)/(412-387)\r\n        var bJump = (bIndex - END_SKY_b)/(412-387)\r\n        //there are 10 year in the carbon data\r\n        //get the index gap of carbon data\r\n        var yearGap = 390;\r\n        var monthGap = yearGap / 12;\r\n        var year_index = currentYear - 2010;\r\n        var month_index = currentDate.getMonth()-1;\r\n\r\n        var current_index = yearGap * year_index + month_index * monthGap;\r\n        current_index = current_index | 0;\r\n\r\n        // var average = 0;\r\n        //console.log(carbonData);\r\n        var carbon = (carbonData[current_index].trend-387)\r\n        rIndex = rIndex-carbon*rJump\r\n        gIndex = gIndex-carbon*gJump\r\n        bIndex = bIndex-carbon*bJump\r\n\r\n        p.background(rIndex, gIndex, bIndex);\r\n    }\r\n    else{\r\n        p.background(15,26,155)\r\n    }\r\n\r\n}\r\n","import React from 'react'\r\nimport './OWVisualization.css'\r\nimport P5Wrapper from 'react-p5-wrapper';\r\nimport sketch from './sketches/sketch';\r\n\r\nclass OWVisualization extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.methaneMap = new Map();\r\n    }\r\n\r\n    render() {\r\n      //console.log(this.props);\r\n        return (\r\n            <P5Wrapper\r\n                sketch={sketch}\r\n                temperatureData={this.props.temperatureData}\r\n                currentDate={this.props.currentDate}\r\n                microGrowth2050={this.props.microGrowth2050}\r\n                macroGrowth2050={this.props.macroGrowth2050}\r\n                seaLevelRise={this.props.seaLevelRise}\r\n                carbonData={this.props.carbonData}\r\n                nitrousData={this.props.nitrousData}\r\n                methaneData={{\"map\": this.methaneMap, \"arr\": this.props.methaneData}}>\r\n\r\n            </P5Wrapper>\r\n            //<P5Wrapper sketch={wave}></P5Wrapper>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.methaneData) {\r\n            this.props.methaneData.forEach(e => { // look over methane data\r\n                let yyyy = e.date.substring(0, 4);\r\n                let mm = e.date.substring(5, e.date.length).padStart(2, '0');\r\n                let dd = \"01\";\r\n\r\n                let date = `${yyyy}-${mm}-${dd}`;\r\n                this.methaneMap.set(date, e.average); // map date to average\r\n            });\r\n        }\r\n        else {\r\n            console.error(`Methane data ${this.props.methaneData}`);\r\n        }\r\n        // console.log(\"Child Mounted\");\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        // console.log(\"New date: \" + this.props.currentDate);\r\n    }\r\n}\r\n\r\nexport default OWVisualization;\r\n","import React from \"react\";\r\nimport * as Tone from \"tone\";\r\nimport bubbles from \"./sounds/bubbles.wav\";\r\nimport \"./OWSonification.css\";\r\nclass OWSonification extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        \r\n        //Setting state\r\n        this.state = { \r\n            //Sounds load states\r\n            isLoaded: false,\r\n\r\n            //Effects levels\r\n            distortionLevel: 0,\r\n            reverbLevel: 0,\r\n\r\n            //Frequencies\r\n            trebleFreqs: [523.25, 554.37, 587.33, 622.25, 659.25, 698.46, 739.99, 783.99, 830.61, 880.00, 932.33, 987.77], //C5-B5\r\n            consonantIntervals: [0, 4, 7, 9], //unison, maj third, perf fifth, maj sixth\r\n            dissonantIntervals: [1, 2, 3, 5, 6, 8, 10, 11], //min second, maj second, min third, perf fourth, tritone, min sixth, min seventh, maj seventh\r\n            consonanceProbability: 100,\r\n            \r\n            //Synth parameters\r\n            fatSpread: 0,\r\n            fatDetune: 0,\r\n            amHarm: 0,\r\n\r\n            //All audio on/off\r\n            audioState: false,\r\n            \r\n            //Audio layer solo states\r\n            playbackState: false,\r\n            fatOscState: false,\r\n            amOscState: false,\r\n            \r\n            //Updating\r\n            updateCount: 0,\r\n            dataUpdateCount: 0,\r\n\r\n            //Using Chrome? Change this between browsers\r\n            chromeFlag: 0\r\n        };\r\n\r\n        //Binding functions\r\n        this.initialize = this.initialize.bind(this);\r\n        this.startAudio = this.startAudio.bind(this);\r\n        this.getNewData = this.getNewData.bind(this);\r\n        this.recordAudio = this.recordAudio.bind(this);\r\n    }\r\n\r\n    initialize() {\r\n        //set state and start Tone\r\n        this.getNewData();\r\n        Tone.start();\r\n        Tone.Transport.start();\r\n\r\n        //set volume\r\n        this.player.volume.value = -100;\r\n        this.fatOsc.volume.value = -100;\r\n        this.am.volume.value = -100;\r\n\r\n        //set effects\r\n        this.dist.wet.rampTo(0);\r\n        this.dist.distortion = 0;\r\n\r\n        //set frequency\r\n        this.fatOsc.frequency.rampTo(65.41);\r\n        this.am.frequency.rampTo(this.state.trebleFreqs[0]);\r\n    }\r\n\r\n    getNewData() {\r\n        //get current date\r\n        var currDate = this.props.currentDate.getFullYear();\r\n        \r\n        //index: TEMPERATURE\r\n        var index = ((currDate - 1880) * this.props.temperatureData.length) / 140 - 100;\r\n        index = Math.round(index);\r\n\r\n        //map from -1 - 1 to 0 - 400 using (value - x1) * (y2 - x2) / (y1 - x1) + x2\r\n        var spread = (this.props.temperatureData[index].station + 1) * (400 - 0) / (1 + 1);\r\n        this.setState({ fatSpread: spread });\r\n\r\n        //index: MICROPLASTICS\r\n        index = currDate - 1950;\r\n\r\n        //map from 90 to 620 to 100 to 0 using same formula as above\r\n        var cp = (this.props.microGrowth2050[index][1] - 90) * (0 - 100) / (620 + 90) + 100;\r\n        this.setState({ consonanceProbability: cp });        \r\n\r\n        //index: MACROPLASTICS\r\n        index = currDate - 1950;\r\n        \r\n        //map from 90 to 620 to 0.5 to 4.0 using same formula as above\r\n        var aH = (this.props.macroGrowth2050[index][1] - 90) * (4.0 - 0.5) / (620 - 90) + 0.5;\r\n        this.setState({ amHarm: aH });\r\n\r\n        //index: CARBON\r\n        // var yearGap = 390;\r\n        // var monthGap = yearGap / 12;\r\n        // var year_index = currDate - 2010;\r\n        // var month_index = this.props.currentDate.getMonth() - 1;\r\n\r\n        // var current_index = yearGap * year_index + month_index * monthGap;\r\n        // current_index = current_index | 0;\r\n\r\n        //map from 387 to 413 to 0.0 to 1.0 using same formula as above\r\n        var distLevel = (this.props.carbonData[currDate - 1880].trend - 387) / (413 - 387);\r\n        this.setState({ distortionLevel: distLevel });\r\n\r\n        //index: SEA LEVEL\r\n        index = currDate - 1880;\r\n        \r\n        //map from 0 to 9 to 0 to 1100 using same formula as above\r\n        var detune = 0;\r\n\r\n        if (index < 0) {\r\n            detune = 0;\r\n        }\r\n\r\n        if (currDate > 2013) {\r\n            detune = this.props.seaLevelRise[(2013 - 1880)][1] * 1100 / 9;\r\n        }\r\n        else {\r\n            detune = this.props.seaLevelRise[index][1] * 1100 / 9;\r\n        }\r\n        this.setState({ fatDetune: detune });\r\n    }\r\n\r\n    startAudio() {\r\n        this.getNewData();\r\n        this.rev.decay = 12;\r\n\r\n        Tone.Transport.scheduleRepeat((time) => {\r\n            //Refresh data\r\n            this.getNewData();\r\n            \r\n            //Microplastics: Consonance probability\r\n            var rand = Math.random() * 100; //get random number between 0 and 100\r\n\r\n            var intervalIndex = 0;\r\n\r\n            if (rand < this.state.consonanceProbability) {\r\n                intervalIndex = Math.floor(Math.random() * 4);\r\n                this.am.frequency.rampTo(this.state.trebleFreqs[this.state.consonantIntervals[intervalIndex]]);\r\n            }\r\n            else {\r\n                intervalIndex = Math.floor(Math.random() * 8);\r\n                this.am.frequency.rampTo(this.state.trebleFreqs[this.state.dissonantIntervals[intervalIndex]]);\r\n            }\r\n\r\n            //Macroplastics: AM harmonicity\r\n            this.am.harmonicity.rampTo(this.state.amHarm);\r\n            \r\n            //Temperature: Fat osc spread\r\n            this.fatOsc.spread = this.state.fatSpread;\r\n            \r\n            //Sea level rise: Fat osc detune\r\n            this.fatOsc.detune.setValueAtTime(this.state.fatDetune, Tone.now());\r\n\r\n            //Carbon: Distortion level\r\n            this.dist.distortion = this.state.distortionLevel;\r\n            this.dist.wet.rampTo(this.state.distortionLevel);\r\n\r\n        }, \"1hz\", Tone.now());\r\n\r\n        if (this.state.audioState === false) {\r\n            this.player.start(Tone.now());\r\n            this.fatOsc.start(Tone.now());\r\n            this.am.start(Tone.now());\r\n\r\n            this.player.volume.rampTo(0);\r\n            this.fatOsc.volume.rampTo(-16);\r\n            this.am.volume.rampTo(-24);\r\n            this.setState({ audioState: true });\r\n        }\r\n        else if (this.state.audioState === true) {\r\n            this.player.volume.rampTo(-100);\r\n            this.fatOsc.volume.rampTo(-100);\r\n            this.am.volume.rampTo(-100);\r\n\r\n            this.player.stop(Tone.now());\r\n            this.fatOsc.stop(Tone.now());\r\n            this.am.stop(Tone.now());\r\n\r\n            this.setState({ audioState: false });\r\n        }\r\n    }\r\n\r\n    recordAudio() {\r\n        this.rec.start();\r\n\r\n        setTimeout(async () => {\r\n            const recording = await this.rec.stop();\r\n            const url = URL.createObjectURL(recording);\r\n            const anchor = document.createElement(\"a\");\r\n            anchor.download = \"recording.webm\";\r\n            anchor.href = url;\r\n            anchor.click();\r\n        }, 20000);\r\n    }\r\n\r\n    render() {\r\n        const { isLoaded } = this.state;\r\n        // console.log(this.state);\r\n\r\n        return (\r\n            <div className=\"OWSonification\" >\r\n                <button disabled={!isLoaded} onClick={this.startAudio}>\r\n                    audio on/off\r\n                </button>\r\n\r\n                <button disabled={!this.state.chromeFlag} onClick={this.recordAudio}>\r\n                    record audio\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        //Effects\r\n        this.dist = new Tone.Distortion(0).toDestination();\r\n\r\n        this.rev = new Tone.Reverb(1).toDestination();\r\n\r\n        //Sound sources\r\n        this.buffer = new Tone.ToneAudioBuffer();\r\n        //this.buffer.debug = true;\r\n        this.buffer.load(bubbles);\r\n\r\n        this.player = new Tone.Player(this.buffer, () => {\r\n            // console.log(\"Player ready!\");\r\n            this.setState({ isLoaded: true });\r\n            this.player.loop = true;\r\n            this.initialize();\r\n        }).chain(this.dist, this.rev, Tone.Destination);\r\n\r\n        this.fatOsc = new Tone.FatOscillator(\"C3\", \"sawtooth\", 40).chain(this.dist, this.rev, Tone.Destination);\r\n\r\n        this.am = new Tone.AMOscillator(\"E3\", \"square\", \"sine\").chain(this.dist, this.rev, Tone.Destination);\r\n    \r\n        this.fm = new Tone.FMOscillator(\"G3\", \"sine\", \"square\").chain(this.dist, this.rev, Tone.Destination);\r\n\r\n        if (this.state.chromeFlag === 1) {\r\n            this.rec = new Tone.Recorder();\r\n            Tone.Destination.connect(this.rec);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        // console.log(\"OWSonification Updated\");\r\n    }\r\n}\r\n\r\nexport default OWSonification\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport OWVisualization from './OWVisualization' // import both children\r\nimport OWSonification from './OWSonification'\r\nimport axios from 'axios'; // used for API stuff\r\n\r\n// below imports are for static files to avoid 429 errors from requests while testing\r\nimport carbonJSON from './static/carbon.json'\r\nimport methaneJSON from './static/methane.json'\r\nimport nitrousJSON from './static/nitrous.json'\r\nimport temperatureJSON from './static/temperature.json'\r\nimport macroGrowth2050 from './static/plastic_pollution/macroGrowth2050.json'\r\nimport microGrowth2050 from './static/plastic_pollution/microGrowth2050.json'\r\nimport seaLevelRise from './static/seaLevelRise/seaLevelRise.json'\r\n\r\n\r\nimport * as d3 from 'd3';\r\n// import {sliderBottom} from 'd3-simple-slider';\r\n// end testing-related import block\r\n\r\nexport const startingYear = 1950;\r\n\r\nclass App extends React.Component {\r\n    // you can create class-scope fields in here like in Java\r\n    constructor(props) {\r\n        super();\r\n        this.createSlider = this.createSlider.bind(this);\r\n        this.state = { // you can add new states here\r\n            // initialize below states to null if not using static data for testing\r\n            carbonData: carbonJSON.co2,\r\n            methaneData: methaneJSON.methane,\r\n            nitrousData: nitrousJSON.nitrous,\r\n            temperatureData: temperatureJSON.result,\r\n\r\n            //get plastic and repeat for others\r\n            macroGrowth2050: macroGrowth2050.macroGrowth2050,\r\n            microGrowth2050: microGrowth2050.microGrowth2050,\r\n\r\n            //sea seaLevelRise\r\n            seaLevelRise: seaLevelRise.seaLevelRise,\r\n\r\n            currentDate: new Date(`${startingYear}-11-01`), // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\r\n            dataIsLoaded: false\r\n        };\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div id=\"App\" className=\"App-container\">\r\n                <OWVisualization\r\n                    currentDate={this.state.currentDate}\r\n                    temperatureData={this.state.temperatureData} // need to pass data into children via props\r\n                    microGrowth2050 = {this.state.microGrowth2050}\r\n                    macroGrowth2050={this.state.macroGrowth2050}\r\n                    carbonData={this.state.carbonData}\r\n                    methaneData={this.state.methaneData}\r\n                    seaLevelRise={this.state.seaLevelRise}\r\n                    nitrousData={this.state.nitrousData}\r\n                />\r\n                <OWSonification\r\n                    currentDate={this.state.currentDate}\r\n                    temperatureData={this.state.temperatureData}\r\n                    microGrowth2050={this.state.microGrowth2050}\r\n                    macroGrowth2050={this.state.macroGrowth2050}\r\n                    carbonData={this.state.carbonData}\r\n                    methaneData={this.state.methaneData}\r\n                    seaLevelRise={this.state.seaLevelRise}\r\n                />\r\n                {/* <button id=\"play-button\">Play</button> */}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() { // this is called when the page is initially loaded/mounted\r\n        // console.log(\"Parent Mounted\");\r\n        // this.loadData(); // comment this out if using static files; loadData() will make API requests\r\n        this.createSlider(d3.select(\".App-container\"));\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) { // when re-render occurs, componentDidUpdate() is called\r\n        // console.log(\"Parent Updated\");\r\n    }\r\n\r\n    loadData() {\r\n        const fetchData = async () => {\r\n            const proxyurl = \"https://cors-anywhere.herokuapp.com/\"; // proxy url that is used in combination with real url\r\n\r\n            let promises = []; // make an array of promises\r\n            this.props.urls.split(\",\").forEach(function(url) {\r\n                promises.push(axios(proxyurl + url)); // push request onto promise array\r\n            })\r\n\r\n            // order of promises is retained; reference: https://stackoverflow.com/questions/28066429/promise-all-order-of-resolved-values/28066851\r\n            const data = await Promise.all(promises);\r\n\r\n            this.state.carbonData = data[0].data.co2; // directly modifying the state like this does NOT force re-render\r\n            this.state.methaneData = data[1].data.methane;\r\n            this.state.nitrousData = data[2].data.nitrous;\r\n            this.state.temperatureData = data[3].data.result;\r\n\r\n            this.setState({ dataIsLoaded: true }); // calling this.setState(...) forces re-render\r\n        };\r\n        fetchData();\r\n    }\r\n\r\n    createSlider(element) { // parameter is the App-container svg body\r\n        const self = this; // reference constructor\r\n\r\n        let formatDateIntoYear = d3.timeFormat(\"%Y\");\r\n        let formatDate = d3.timeFormat(\"%d %B %Y\"); // DD MM YY https://github.com/d3/d3-time-format\r\n\r\n        let startDate = new Date(\"1950-11-01\"); // subject to change\r\n        let endDate = new Date(); // subject to change (no params = current date)\r\n\r\n        let margin = {top:50, right:50, bottom:0, left:75};\r\n        let width = window.innerWidth; // - margin.left - margin.right;\r\n\r\n        let timer = 0;\r\n        let currentValue = 0;\r\n        let targetValue = width - 50;\r\n\r\n        let sliderRange = element // appends svg on top of .App svg\r\n            .append(\"div\")\r\n            .classed(\"slider-svg\", true) // container class to make iresponsive\r\n            .attr(\"id\", \"App\");\r\n\r\n        let gRange = sliderRange // gRange is the svg body that will be made responsive\r\n            .append(\"svg\") // append the responsive svg container\r\n            .attr(\"preserveAspectRatio\", \"xMinYMin meet\") // responsive svg container needs to preserve aspect ratio for responsiveness\r\n            .attr(\"viewBox\", `0 0 ${window.innerWidth + margin.left * 2} 200`) // set aspect ratio for slider svg body\r\n            // it seems that ADDING margin would actually shrink the slider svg body\r\n            .append(\"g\") // overlay the slider svg body; now gRange reflects the slider body\r\n            .attr(\"transform\", \"translate(\" + margin.left + \", 100)\") // shift slider to right and down\r\n            // .classed(\"class\", \"slider\") // apply slider css properties\r\n\r\n        gRange // we want to add a foreign object embodied in a html element\r\n            .append(\"foreignObject\") // append the foreign object then set coordinates relative to slider svg body\r\n            .attr(\"x\", 60)\r\n            .attr(\"y\", 60)\r\n            .attr(\"width\", 60) // set width and height of the play button\r\n            .attr(\"height\", 30)\r\n            .html(function(d) { // this is the html element we want to append\r\n                return '<button id=\"play-button\">Play</button>'\r\n            })\r\n\r\n        let playButton = d3.select(\"#play-button\"); // get the play button svg\r\n\r\n        playButton\r\n            .on(\"click\", function() { // set the play button's behavior\r\n                let button = d3.select(this); // note that 'this' references the play button svg\r\n                if (button.text() === \"Pause\") { // if paused, clear interval and change text to 'play'\r\n                    clearInterval(timer);\r\n                    button.text(\"Play\");\r\n                } else { // otherwise set behavior for the play button\r\n                    timer = setInterval(function() { // play interval asynchronously\r\n                        update(x.invert(currentValue)); // update handle position and adjust current value tick jumps\r\n                        currentValue = currentValue + (targetValue / 151);\r\n                        if (currentValue > targetValue) { // if at end of range, clear interval and change text to 'play'\r\n                            clearInterval(timer); // this will stop the asynchronous interval\r\n                            playButton.text(\"Play\");\r\n                        }\r\n                        self.setState({ currentDate: x.invert(currentValue) }); // ref parent constructor and communicate with child\r\n                    }, 100); // loops for about 20 seconds going from month to month (or longer)\r\n                    button.text(\"Pause\"); // when play button is selected, change text to 'pause'\r\n                }\r\n            });\r\n\r\n        let x = d3.scaleTime() // ref: https://observablehq.com/@d3/d3-scaletime\r\n            .domain([startDate, endDate]) // use timescale domain between start and end dates\r\n            .range([0, targetValue]) // define range of slider being from beginning to end of its range\r\n            .clamp(true); // ensure that handle does not escape range\r\n\r\n        gRange.append(\"line\")\r\n            .attr(\"class\", \"track\") // apply track css properties within slider svg body\r\n            .attr(\"x1\", x.range()[0])\r\n            .attr(\"x2\", x.range()[1])\r\n            .select(function() {\r\n                return this.parentNode.appendChild(this.cloneNode(true)); // not sure what this is yet\r\n            })\r\n            .attr(\"class\", \"track-inset\") // apply track-inset css properties within slider svg body\r\n            .select(function() {\r\n                return this.parentNode.appendChild(this.cloneNode(true));\r\n            })\r\n            .attr(\"class\", \"track-overlay\") // apply track-overlay css properties within slider svg body\r\n            .call(d3.drag() // dragging behavior\r\n                .on(\"start.interrupt\", function() { // handle interrupts\r\n                    gRange.interrupt();\r\n                })\r\n                .on(\"start drag\", function(event) { // while hande is dragged, store current value and update handle location\r\n                    currentValue = event.x;\r\n                    update(x.invert(currentValue));\r\n                })\r\n                .on(\"end\", function(event) { // when handle is released, use the last recorded current value\r\n                    self.setState({ currentDate: x.invert(currentValue) });\r\n                })\r\n            );\r\n\r\n        let handle = gRange.insert(\"circle\", \".track-overlay\") // inserts the track\r\n            .attr(\"class\", \"handle\") // apply handle css properties to track within slider svg body\r\n            .attr(\"r\", 9); // set radius of handle\r\n\r\n        let label = gRange.append(\"text\") // append text onto slider which will be our tick representations\r\n            .attr(\"class\", \"label\") // apply label css properties\r\n            .attr(\"text-anchor\", \"middle\") // anchor text to middle\r\n            .text(formatDate(startDate)) // display currently selected date in text\r\n            .attr(\"transform\", \"translate(0,\" + (-25) + \")\") // shift text to left\r\n\r\n        document.addEventListener('keydown', function(event) { // listen for keypresses\r\n            switch (event.key) { // we are only concerned about left/right arrow keys\r\n                case \"ArrowLeft\":\r\n                    currentValue = // ensure handle does not decrement below zero\r\n                        (currentValue === 0) ? currentValue : currentValue - 1;\r\n                    update(x.invert(currentValue)); // shift handle one tick to left\r\n                    break;\r\n                case \"ArrowRight\":\r\n                    currentValue++; // increment current value\r\n                    update(x.invert(currentValue)); // shift handle one tick to right\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n\r\n        gRange.insert(\"g\", \".track-overlay\") // create the track overlay\r\n            .attr(\"class\", \"ticks\") // apply ticks css properties within slider svg body\r\n            .attr(\"transform\", \"translate(0,\" + 18 + \")\") // shift to right\r\n            .selectAll(\"text\") // apply following changes to all text on slider (ticks)\r\n            .data(x.ticks(10)) // ref: https://observablehq.com/@d3/d3-scaletime\r\n            .enter() // ref: https://observablehq.com/@dnarvaez27/understanding-enter-exit-merge-key-function\r\n            .append(\"text\") // append text representing ticks then set its coordinates (x-coordinate is variable, y-coordinate is fixed)\r\n            .attr(\"x\", x)\r\n            .attr(\"y\", 10)\r\n            .attr(\"text-anchor\", \"middle\") // center text on tick\r\n            .attr(\"class\", \"track-text\")\r\n            .text((d) => formatDateIntoYear(d)); // write formatted date as text\r\n\r\n        function update(h) { // update position and text of label according to slider scale\r\n            handle.attr(\"cx\", x(h)); // update handle position\r\n            label // update tick label position and tick label content to new date\r\n                .attr(\"x\", x(h))\r\n                .text(formatDate(h));\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// there is probably a way better way to do this, but new urls are added to end of the urls csv string\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App\r\n            // urls={\"https://global-warming.org/api/co2-api,https://global-warming.org/api/methane-api,https://global-warming.org/api/nitrous-oxide-api,https://global-warming.org/api/temperature-api\"}\r\n        />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/bubbles.978d43ed.wav\";"],"sourceRoot":""}